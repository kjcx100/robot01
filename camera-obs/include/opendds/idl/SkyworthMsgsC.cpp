// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p15
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:376


#include "SkyworthMsgsC.h"
#include "tao/AnyTypeCode/Null_RefCount_Policy.h"
#include "tao/AnyTypeCode/TypeCode_Constants.h"
#include "tao/AnyTypeCode/Alias_TypeCode_Static.h"
#include "tao/AnyTypeCode/Sequence_TypeCode_Static.h"
#include "tao/AnyTypeCode/String_TypeCode_Static.h"
#include "tao/AnyTypeCode/Struct_TypeCode_Static.h"
#include "tao/AnyTypeCode/TypeCode_Struct_Field.h"
#include "tao/CDR.h"
#include "tao/CDR.h"
#include "tao/AnyTypeCode/Any_Dual_Impl_T.h"
#include "tao/AnyTypeCode/Any_Array_Impl_T.h"

#if !defined (__ACE_INLINE__)
#include "SkyworthMsgsC.inl"
#endif /* !defined INLINE */

// TAO_IDL - Generated from
// be/be_visitor_typecode/struct_typecode.cpp:88

static TAO::TypeCode::Struct_Field<
  char const *,
  ::CORBA::TypeCode_ptr const *> const 
    _tao_fields_SkyworthMsgs_EdgePolorPoint[] =
      {
        { "angle", &CORBA::_tc_float },
        { "distance", &CORBA::_tc_float }
      };
  
static TAO::TypeCode::Struct<
  char const *,
  ::CORBA::TypeCode_ptr const *,
  TAO::TypeCode::Struct_Field<
    char const *,
    ::CORBA::TypeCode_ptr const *> const *,
  TAO::Null_RefCount_Policy>
_tao_tc_SkyworthMsgs_EdgePolorPoint (
  ::CORBA::tk_struct,
  "IDL:SkyworthMsgs/EdgePolorPoint:1.0",
  "EdgePolorPoint",
  _tao_fields_SkyworthMsgs_EdgePolorPoint,
  2);


namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_EdgePolorPoint =
    &_tao_tc_SkyworthMsgs_EdgePolorPoint;
}

// TAO_IDL - Generated from
// be/be_visitor_structure/structure_cs.cpp:59

void
SkyworthMsgs::EdgePolorPoint::_tao_any_destructor (
    void *_tao_void_pointer)
{
  EdgePolorPoint *_tao_tmp_pointer =
    static_cast<EdgePolorPoint *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/struct_typecode.cpp:88

static TAO::TypeCode::Struct_Field<
  char const *,
  ::CORBA::TypeCode_ptr const *> const 
    _tao_fields_SkyworthMsgs_EdgeXyzPoint[] =
      {
        { "x", &CORBA::_tc_float },
        { "y", &CORBA::_tc_float },
        { "z", &CORBA::_tc_float }
      };
  
static TAO::TypeCode::Struct<
  char const *,
  ::CORBA::TypeCode_ptr const *,
  TAO::TypeCode::Struct_Field<
    char const *,
    ::CORBA::TypeCode_ptr const *> const *,
  TAO::Null_RefCount_Policy>
_tao_tc_SkyworthMsgs_EdgeXyzPoint (
  ::CORBA::tk_struct,
  "IDL:SkyworthMsgs/EdgeXyzPoint:1.0",
  "EdgeXyzPoint",
  _tao_fields_SkyworthMsgs_EdgeXyzPoint,
  3);


namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_EdgeXyzPoint =
    &_tao_tc_SkyworthMsgs_EdgeXyzPoint;
}

// TAO_IDL - Generated from
// be/be_visitor_structure/structure_cs.cpp:59

void
SkyworthMsgs::EdgeXyzPoint::_tao_any_destructor (
    void *_tao_void_pointer)
{
  EdgeXyzPoint *_tao_tmp_pointer =
    static_cast<EdgeXyzPoint *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/struct_typecode.cpp:88

static TAO::TypeCode::Struct_Field<
  char const *,
  ::CORBA::TypeCode_ptr const *> const 
    _tao_fields_SkyworthMsgs_DestXyzPoint[] =
      {
        { "x", &CORBA::_tc_float },
        { "y", &CORBA::_tc_float },
        { "z", &CORBA::_tc_float },
        { "angle", &CORBA::_tc_float }
      };
  
static TAO::TypeCode::Struct<
  char const *,
  ::CORBA::TypeCode_ptr const *,
  TAO::TypeCode::Struct_Field<
    char const *,
    ::CORBA::TypeCode_ptr const *> const *,
  TAO::Null_RefCount_Policy>
_tao_tc_SkyworthMsgs_DestXyzPoint (
  ::CORBA::tk_struct,
  "IDL:SkyworthMsgs/DestXyzPoint:1.0",
  "DestXyzPoint",
  _tao_fields_SkyworthMsgs_DestXyzPoint,
  4);


namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_DestXyzPoint =
    &_tao_tc_SkyworthMsgs_DestXyzPoint;
}

// TAO_IDL - Generated from
// be/be_visitor_structure/structure_cs.cpp:59

void
SkyworthMsgs::DestXyzPoint::_tao_any_destructor (
    void *_tao_void_pointer)
{
  DestXyzPoint *_tao_tmp_pointer =
    static_cast<DestXyzPoint *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be/be_visitor_array/array_cs.cpp:97

SkyworthMsgs::EdgePolorPointList_slice *
SkyworthMsgs::EdgePolorPointList_dup (const SkyworthMsgs::EdgePolorPointList_slice *_tao_src_array)
{
  SkyworthMsgs::EdgePolorPointList_slice *_tao_dup_array =
    SkyworthMsgs::EdgePolorPointList_alloc ();
  
  if (!_tao_dup_array)
    {
      return static_cast <SkyworthMsgs::EdgePolorPointList_slice *> (0);
    }
  
  SkyworthMsgs::EdgePolorPointList_copy (_tao_dup_array, _tao_src_array);
  return _tao_dup_array;
}

SkyworthMsgs::EdgePolorPointList_slice *
SkyworthMsgs::EdgePolorPointList_alloc (void)
{
  SkyworthMsgs::EdgePolorPointList_slice *retval = 0;
  ACE_NEW_RETURN (retval, SkyworthMsgs::EdgePolorPoint[360], 0);
  return retval;
}

void
SkyworthMsgs::EdgePolorPointList_free (
    SkyworthMsgs::EdgePolorPointList_slice *_tao_slice)
{
  delete [] _tao_slice;
}

void
SkyworthMsgs::EdgePolorPointList_copy (
    SkyworthMsgs::EdgePolorPointList_slice * _tao_to,
    const SkyworthMsgs::EdgePolorPointList_slice *_tao_from)
{
  // Copy each individual element.
  for ( ::CORBA::ULong i0 = 0; i0 < 360; ++i0)
    {
      _tao_to[i0] = _tao_from[i0];
    }
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:51



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:301


#ifndef _TAO_TYPECODE_SkyworthMsgs_EdgePolorPointList_GUARD
#define _TAO_TYPECODE_SkyworthMsgs_EdgePolorPointList_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        SkyworthMsgs_EdgePolorPointList_360 (
          ::CORBA::tk_array,
          &SkyworthMsgs::_tc_EdgePolorPoint,
          360U);
        
      ::CORBA::TypeCode_ptr const tc_SkyworthMsgs_EdgePolorPointList =
        &SkyworthMsgs_EdgePolorPointList_360;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_SkyworthMsgs_EdgePolorPointList_GUARD */
static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_EdgePolorPointList (
    ::CORBA::tk_alias,
    "IDL:SkyworthMsgs/EdgePolorPointList:1.0",
    "EdgePolorPointList",
    &TAO::TypeCode::tc_SkyworthMsgs_EdgePolorPointList);
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_EdgePolorPointList =
    &_tao_tc_SkyworthMsgs_EdgePolorPointList;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/struct_typecode.cpp:88



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:301

static TAO::TypeCode::Struct_Field<
  char const *,
  ::CORBA::TypeCode_ptr const *> const 
    _tao_fields_SkyworthMsgs_DepthEdgeData[] =
      {
        { "pointList", &SkyworthMsgs::_tc_EdgePolorPointList }
      };
  
static TAO::TypeCode::Struct<
  char const *,
  ::CORBA::TypeCode_ptr const *,
  TAO::TypeCode::Struct_Field<
    char const *,
    ::CORBA::TypeCode_ptr const *> const *,
  TAO::Null_RefCount_Policy>
_tao_tc_SkyworthMsgs_DepthEdgeData (
  ::CORBA::tk_struct,
  "IDL:SkyworthMsgs/DepthEdgeData:1.0",
  "DepthEdgeData",
  _tao_fields_SkyworthMsgs_DepthEdgeData,
  1);


namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_DepthEdgeData =
    &_tao_tc_SkyworthMsgs_DepthEdgeData;
}

// TAO_IDL - Generated from
// be/be_visitor_structure/structure_cs.cpp:59

void
SkyworthMsgs::DepthEdgeData::_tao_any_destructor (
    void *_tao_void_pointer)
{
  DepthEdgeData *_tao_tmp_pointer =
    static_cast<DepthEdgeData *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/struct_typecode.cpp:88



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:301

static TAO::TypeCode::Struct_Field<
  char const *,
  ::CORBA::TypeCode_ptr const *> const 
    _tao_fields_SkyworthMsgs_UltraTouchData[] =
      {
        { "pointList", &SkyworthMsgs::_tc_EdgePolorPointList }
      };
  
static TAO::TypeCode::Struct<
  char const *,
  ::CORBA::TypeCode_ptr const *,
  TAO::TypeCode::Struct_Field<
    char const *,
    ::CORBA::TypeCode_ptr const *> const *,
  TAO::Null_RefCount_Policy>
_tao_tc_SkyworthMsgs_UltraTouchData (
  ::CORBA::tk_struct,
  "IDL:SkyworthMsgs/UltraTouchData:1.0",
  "UltraTouchData",
  _tao_fields_SkyworthMsgs_UltraTouchData,
  1);


namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_UltraTouchData =
    &_tao_tc_SkyworthMsgs_UltraTouchData;
}

// TAO_IDL - Generated from
// be/be_visitor_structure/structure_cs.cpp:59

void
SkyworthMsgs::UltraTouchData::_tao_any_destructor (
    void *_tao_void_pointer)
{
  UltraTouchData *_tao_tmp_pointer =
    static_cast<UltraTouchData *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be/be_visitor_array/array_cs.cpp:97

SkyworthMsgs::RgbPicData_slice *
SkyworthMsgs::RgbPicData_dup (const SkyworthMsgs::RgbPicData_slice *_tao_src_array)
{
  SkyworthMsgs::RgbPicData_slice *_tao_dup_array =
    SkyworthMsgs::RgbPicData_alloc ();
  
  if (!_tao_dup_array)
    {
      return static_cast <SkyworthMsgs::RgbPicData_slice *> (0);
    }
  
  SkyworthMsgs::RgbPicData_copy (_tao_dup_array, _tao_src_array);
  return _tao_dup_array;
}

SkyworthMsgs::RgbPicData_slice *
SkyworthMsgs::RgbPicData_alloc (void)
{
  SkyworthMsgs::RgbPicData_slice *retval = 0;
  ACE_NEW_RETURN (retval, ::CORBA::Char[230400], 0);
  return retval;
}

void
SkyworthMsgs::RgbPicData_free (
    SkyworthMsgs::RgbPicData_slice *_tao_slice)
{
  delete [] _tao_slice;
}

void
SkyworthMsgs::RgbPicData_copy (
    SkyworthMsgs::RgbPicData_slice * _tao_to,
    const SkyworthMsgs::RgbPicData_slice *_tao_from)
{
  // Copy each individual element.
  for ( ::CORBA::ULong i0 = 0; i0 < 230400; ++i0)
    {
      _tao_to[i0] = _tao_from[i0];
    }
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:51



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:301


#ifndef _TAO_TYPECODE_SkyworthMsgs_RgbPicData_GUARD
#define _TAO_TYPECODE_SkyworthMsgs_RgbPicData_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        SkyworthMsgs_RgbPicData_230400 (
          ::CORBA::tk_array,
          &CORBA::_tc_char,
          230400U);
        
      ::CORBA::TypeCode_ptr const tc_SkyworthMsgs_RgbPicData =
        &SkyworthMsgs_RgbPicData_230400;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_SkyworthMsgs_RgbPicData_GUARD */
static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_RgbPicData (
    ::CORBA::tk_alias,
    "IDL:SkyworthMsgs/RgbPicData:1.0",
    "RgbPicData",
    &TAO::TypeCode::tc_SkyworthMsgs_RgbPicData);
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_RgbPicData =
    &_tao_tc_SkyworthMsgs_RgbPicData;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/struct_typecode.cpp:88



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:301

static TAO::TypeCode::Struct_Field<
  char const *,
  ::CORBA::TypeCode_ptr const *> const 
    _tao_fields_SkyworthMsgs_RgbPic[] =
      {
        { "data", &SkyworthMsgs::_tc_RgbPicData }
      };
  
static TAO::TypeCode::Struct<
  char const *,
  ::CORBA::TypeCode_ptr const *,
  TAO::TypeCode::Struct_Field<
    char const *,
    ::CORBA::TypeCode_ptr const *> const *,
  TAO::Null_RefCount_Policy>
_tao_tc_SkyworthMsgs_RgbPic (
  ::CORBA::tk_struct,
  "IDL:SkyworthMsgs/RgbPic:1.0",
  "RgbPic",
  _tao_fields_SkyworthMsgs_RgbPic,
  1);


namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_RgbPic =
    &_tao_tc_SkyworthMsgs_RgbPic;
}

// TAO_IDL - Generated from
// be/be_visitor_structure/structure_cs.cpp:59

void
SkyworthMsgs::RgbPic::_tao_any_destructor (
    void *_tao_void_pointer)
{
  RgbPic *_tao_tmp_pointer =
    static_cast<RgbPic *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be/be_visitor_array/array_cs.cpp:97

SkyworthMsgs::EdgeXyzPointList_slice *
SkyworthMsgs::EdgeXyzPointList_dup (const SkyworthMsgs::EdgeXyzPointList_slice *_tao_src_array)
{
  SkyworthMsgs::EdgeXyzPointList_slice *_tao_dup_array =
    SkyworthMsgs::EdgeXyzPointList_alloc ();
  
  if (!_tao_dup_array)
    {
      return static_cast <SkyworthMsgs::EdgeXyzPointList_slice *> (0);
    }
  
  SkyworthMsgs::EdgeXyzPointList_copy (_tao_dup_array, _tao_src_array);
  return _tao_dup_array;
}

SkyworthMsgs::EdgeXyzPointList_slice *
SkyworthMsgs::EdgeXyzPointList_alloc (void)
{
  SkyworthMsgs::EdgeXyzPointList_slice *retval = 0;
  ACE_NEW_RETURN (retval, SkyworthMsgs::EdgeXyzPoint[360], 0);
  return retval;
}

void
SkyworthMsgs::EdgeXyzPointList_free (
    SkyworthMsgs::EdgeXyzPointList_slice *_tao_slice)
{
  delete [] _tao_slice;
}

void
SkyworthMsgs::EdgeXyzPointList_copy (
    SkyworthMsgs::EdgeXyzPointList_slice * _tao_to,
    const SkyworthMsgs::EdgeXyzPointList_slice *_tao_from)
{
  // Copy each individual element.
  for ( ::CORBA::ULong i0 = 0; i0 < 360; ++i0)
    {
      _tao_to[i0] = _tao_from[i0];
    }
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:51



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:301


#ifndef _TAO_TYPECODE_SkyworthMsgs_EdgeXyzPointList_GUARD
#define _TAO_TYPECODE_SkyworthMsgs_EdgeXyzPointList_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        SkyworthMsgs_EdgeXyzPointList_360 (
          ::CORBA::tk_array,
          &SkyworthMsgs::_tc_EdgeXyzPoint,
          360U);
        
      ::CORBA::TypeCode_ptr const tc_SkyworthMsgs_EdgeXyzPointList =
        &SkyworthMsgs_EdgeXyzPointList_360;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_SkyworthMsgs_EdgeXyzPointList_GUARD */
static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_EdgeXyzPointList (
    ::CORBA::tk_alias,
    "IDL:SkyworthMsgs/EdgeXyzPointList:1.0",
    "EdgeXyzPointList",
    &TAO::TypeCode::tc_SkyworthMsgs_EdgeXyzPointList);
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_EdgeXyzPointList =
    &_tao_tc_SkyworthMsgs_EdgeXyzPointList;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/struct_typecode.cpp:88



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:301

static TAO::TypeCode::Struct_Field<
  char const *,
  ::CORBA::TypeCode_ptr const *> const 
    _tao_fields_SkyworthMsgs_ObsData[] =
      {
        { "pointList", &SkyworthMsgs::_tc_EdgeXyzPointList }
      };
  
static TAO::TypeCode::Struct<
  char const *,
  ::CORBA::TypeCode_ptr const *,
  TAO::TypeCode::Struct_Field<
    char const *,
    ::CORBA::TypeCode_ptr const *> const *,
  TAO::Null_RefCount_Policy>
_tao_tc_SkyworthMsgs_ObsData (
  ::CORBA::tk_struct,
  "IDL:SkyworthMsgs/ObsData:1.0",
  "ObsData",
  _tao_fields_SkyworthMsgs_ObsData,
  1);


namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_ObsData =
    &_tao_tc_SkyworthMsgs_ObsData;
}

// TAO_IDL - Generated from
// be/be_visitor_structure/structure_cs.cpp:59

void
SkyworthMsgs::ObsData::_tao_any_destructor (
    void *_tao_void_pointer)
{
  ObsData *_tao_tmp_pointer =
    static_cast<ObsData *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/struct_typecode.cpp:88

static TAO::TypeCode::Struct_Field<
  char const *,
  ::CORBA::TypeCode_ptr const *> const 
    _tao_fields_SkyworthMsgs_CleanerStatus[] =
      {
        { "status", &CORBA::_tc_short }
      };
  
static TAO::TypeCode::Struct<
  char const *,
  ::CORBA::TypeCode_ptr const *,
  TAO::TypeCode::Struct_Field<
    char const *,
    ::CORBA::TypeCode_ptr const *> const *,
  TAO::Null_RefCount_Policy>
_tao_tc_SkyworthMsgs_CleanerStatus (
  ::CORBA::tk_struct,
  "IDL:SkyworthMsgs/CleanerStatus:1.0",
  "CleanerStatus",
  _tao_fields_SkyworthMsgs_CleanerStatus,
  1);


namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_CleanerStatus =
    &_tao_tc_SkyworthMsgs_CleanerStatus;
}

// TAO_IDL - Generated from
// be/be_visitor_structure/structure_cs.cpp:59

void
SkyworthMsgs::CleanerStatus::_tao_any_destructor (
    void *_tao_void_pointer)
{
  CleanerStatus *_tao_tmp_pointer =
    static_cast<CleanerStatus *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/struct_typecode.cpp:88

static TAO::TypeCode::Struct_Field<
  char const *,
  ::CORBA::TypeCode_ptr const *> const 
    _tao_fields_SkyworthMsgs_CleanerCommand[] =
      {
        { "cleanType", &CORBA::_tc_string },
        { "cleanCommand", &CORBA::_tc_char }
      };
  
static TAO::TypeCode::Struct<
  char const *,
  ::CORBA::TypeCode_ptr const *,
  TAO::TypeCode::Struct_Field<
    char const *,
    ::CORBA::TypeCode_ptr const *> const *,
  TAO::Null_RefCount_Policy>
_tao_tc_SkyworthMsgs_CleanerCommand (
  ::CORBA::tk_struct,
  "IDL:SkyworthMsgs/CleanerCommand:1.0",
  "CleanerCommand",
  _tao_fields_SkyworthMsgs_CleanerCommand,
  2);


namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_CleanerCommand =
    &_tao_tc_SkyworthMsgs_CleanerCommand;
}

// TAO_IDL - Generated from
// be/be_visitor_structure/structure_cs.cpp:59

void
SkyworthMsgs::CleanerCommand::_tao_any_destructor (
    void *_tao_void_pointer)
{
  CleanerCommand *_tao_tmp_pointer =
    static_cast<CleanerCommand *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/struct_typecode.cpp:88

static TAO::TypeCode::Struct_Field<
  char const *,
  ::CORBA::TypeCode_ptr const *> const 
    _tao_fields_SkyworthMsgs_ElecQuantity[] =
      {
        { "batteryType", &CORBA::_tc_string },
        { "quantity", &CORBA::_tc_float }
      };
  
static TAO::TypeCode::Struct<
  char const *,
  ::CORBA::TypeCode_ptr const *,
  TAO::TypeCode::Struct_Field<
    char const *,
    ::CORBA::TypeCode_ptr const *> const *,
  TAO::Null_RefCount_Policy>
_tao_tc_SkyworthMsgs_ElecQuantity (
  ::CORBA::tk_struct,
  "IDL:SkyworthMsgs/ElecQuantity:1.0",
  "ElecQuantity",
  _tao_fields_SkyworthMsgs_ElecQuantity,
  2);


namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_ElecQuantity =
    &_tao_tc_SkyworthMsgs_ElecQuantity;
}

// TAO_IDL - Generated from
// be/be_visitor_structure/structure_cs.cpp:59

void
SkyworthMsgs::ElecQuantity::_tao_any_destructor (
    void *_tao_void_pointer)
{
  ElecQuantity *_tao_tmp_pointer =
    static_cast<ElecQuantity *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/struct_typecode.cpp:88

static TAO::TypeCode::Struct_Field<
  char const *,
  ::CORBA::TypeCode_ptr const *> const 
    _tao_fields_SkyworthMsgs_EmgStop[] =
      {
        { "emgStopCommand", &CORBA::_tc_char }
      };
  
static TAO::TypeCode::Struct<
  char const *,
  ::CORBA::TypeCode_ptr const *,
  TAO::TypeCode::Struct_Field<
    char const *,
    ::CORBA::TypeCode_ptr const *> const *,
  TAO::Null_RefCount_Policy>
_tao_tc_SkyworthMsgs_EmgStop (
  ::CORBA::tk_struct,
  "IDL:SkyworthMsgs/EmgStop:1.0",
  "EmgStop",
  _tao_fields_SkyworthMsgs_EmgStop,
  1);


namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_EmgStop =
    &_tao_tc_SkyworthMsgs_EmgStop;
}

// TAO_IDL - Generated from
// be/be_visitor_structure/structure_cs.cpp:59

void
SkyworthMsgs::EmgStop::_tao_any_destructor (
    void *_tao_void_pointer)
{
  EmgStop *_tao_tmp_pointer =
    static_cast<EmgStop *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/struct_typecode.cpp:88

static TAO::TypeCode::Struct_Field<
  char const *,
  ::CORBA::TypeCode_ptr const *> const 
    _tao_fields_SkyworthMsgs_SlamStatus[] =
      {
        { "statusType", &CORBA::_tc_string },
        { "status", &CORBA::_tc_short }
      };
  
static TAO::TypeCode::Struct<
  char const *,
  ::CORBA::TypeCode_ptr const *,
  TAO::TypeCode::Struct_Field<
    char const *,
    ::CORBA::TypeCode_ptr const *> const *,
  TAO::Null_RefCount_Policy>
_tao_tc_SkyworthMsgs_SlamStatus (
  ::CORBA::tk_struct,
  "IDL:SkyworthMsgs/SlamStatus:1.0",
  "SlamStatus",
  _tao_fields_SkyworthMsgs_SlamStatus,
  2);


namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_SlamStatus =
    &_tao_tc_SkyworthMsgs_SlamStatus;
}

// TAO_IDL - Generated from
// be/be_visitor_structure/structure_cs.cpp:59

void
SkyworthMsgs::SlamStatus::_tao_any_destructor (
    void *_tao_void_pointer)
{
  SlamStatus *_tao_tmp_pointer =
    static_cast<SlamStatus *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/struct_typecode.cpp:88

static TAO::TypeCode::Struct_Field<
  char const *,
  ::CORBA::TypeCode_ptr const *> const 
    _tao_fields_SkyworthMsgs_SlamCommand[] =
      {
        { "commandType", &CORBA::_tc_string },
        { "command", &CORBA::_tc_char },
        { "distance", &CORBA::_tc_float },
        { "angle", &CORBA::_tc_float },
        { "destPoint", &SkyworthMsgs::_tc_DestXyzPoint }
      };
  
static TAO::TypeCode::Struct<
  char const *,
  ::CORBA::TypeCode_ptr const *,
  TAO::TypeCode::Struct_Field<
    char const *,
    ::CORBA::TypeCode_ptr const *> const *,
  TAO::Null_RefCount_Policy>
_tao_tc_SkyworthMsgs_SlamCommand (
  ::CORBA::tk_struct,
  "IDL:SkyworthMsgs/SlamCommand:1.0",
  "SlamCommand",
  _tao_fields_SkyworthMsgs_SlamCommand,
  5);


namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_SlamCommand =
    &_tao_tc_SkyworthMsgs_SlamCommand;
}

// TAO_IDL - Generated from
// be/be_visitor_structure/structure_cs.cpp:59

void
SkyworthMsgs::SlamCommand::_tao_any_destructor (
    void *_tao_void_pointer)
{
  SlamCommand *_tao_tmp_pointer =
    static_cast<SlamCommand *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/struct_typecode.cpp:88



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:301

static TAO::TypeCode::Struct_Field<
  char const *,
  ::CORBA::TypeCode_ptr const *> const 
    _tao_fields_SkyworthMsgs_SlamInteStatus[] =
      {
        { "statusType", &CORBA::_tc_string },
        { "status", &CORBA::_tc_char },
        { "machingDegree", &CORBA::_tc_float },
        { "obsData", &SkyworthMsgs::_tc_EdgeXyzPointList }
      };
  
static TAO::TypeCode::Struct<
  char const *,
  ::CORBA::TypeCode_ptr const *,
  TAO::TypeCode::Struct_Field<
    char const *,
    ::CORBA::TypeCode_ptr const *> const *,
  TAO::Null_RefCount_Policy>
_tao_tc_SkyworthMsgs_SlamInteStatus (
  ::CORBA::tk_struct,
  "IDL:SkyworthMsgs/SlamInteStatus:1.0",
  "SlamInteStatus",
  _tao_fields_SkyworthMsgs_SlamInteStatus,
  4);


namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_SlamInteStatus =
    &_tao_tc_SkyworthMsgs_SlamInteStatus;
}

// TAO_IDL - Generated from
// be/be_visitor_structure/structure_cs.cpp:59

void
SkyworthMsgs::SlamInteStatus::_tao_any_destructor (
    void *_tao_void_pointer)
{
  SlamInteStatus *_tao_tmp_pointer =
    static_cast<SlamInteStatus *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/struct_typecode.cpp:88

static TAO::TypeCode::Struct_Field<
  char const *,
  ::CORBA::TypeCode_ptr const *> const 
    _tao_fields_SkyworthMsgs_SlamInteCommand[] =
      {
        { "commandType", &CORBA::_tc_string },
        { "command", &CORBA::_tc_char },
        { "destPoint", &SkyworthMsgs::_tc_DestXyzPoint }
      };
  
static TAO::TypeCode::Struct<
  char const *,
  ::CORBA::TypeCode_ptr const *,
  TAO::TypeCode::Struct_Field<
    char const *,
    ::CORBA::TypeCode_ptr const *> const *,
  TAO::Null_RefCount_Policy>
_tao_tc_SkyworthMsgs_SlamInteCommand (
  ::CORBA::tk_struct,
  "IDL:SkyworthMsgs/SlamInteCommand:1.0",
  "SlamInteCommand",
  _tao_fields_SkyworthMsgs_SlamInteCommand,
  3);


namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_SlamInteCommand =
    &_tao_tc_SkyworthMsgs_SlamInteCommand;
}

// TAO_IDL - Generated from
// be/be_visitor_structure/structure_cs.cpp:59

void
SkyworthMsgs::SlamInteCommand::_tao_any_destructor (
    void *_tao_void_pointer)
{
  SlamInteCommand *_tao_tmp_pointer =
    static_cast<SlamInteCommand *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/struct_typecode.cpp:88

static TAO::TypeCode::Struct_Field<
  char const *,
  ::CORBA::TypeCode_ptr const *> const 
    _tao_fields_SkyworthMsgs_PatrolStatus[] =
      {
        { "statusType", &CORBA::_tc_string },
        { "status", &CORBA::_tc_char }
      };
  
static TAO::TypeCode::Struct<
  char const *,
  ::CORBA::TypeCode_ptr const *,
  TAO::TypeCode::Struct_Field<
    char const *,
    ::CORBA::TypeCode_ptr const *> const *,
  TAO::Null_RefCount_Policy>
_tao_tc_SkyworthMsgs_PatrolStatus (
  ::CORBA::tk_struct,
  "IDL:SkyworthMsgs/PatrolStatus:1.0",
  "PatrolStatus",
  _tao_fields_SkyworthMsgs_PatrolStatus,
  2);


namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_PatrolStatus =
    &_tao_tc_SkyworthMsgs_PatrolStatus;
}

// TAO_IDL - Generated from
// be/be_visitor_structure/structure_cs.cpp:59

void
SkyworthMsgs::PatrolStatus::_tao_any_destructor (
    void *_tao_void_pointer)
{
  PatrolStatus *_tao_tmp_pointer =
    static_cast<PatrolStatus *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/struct_typecode.cpp:88

static TAO::TypeCode::Struct_Field<
  char const *,
  ::CORBA::TypeCode_ptr const *> const 
    _tao_fields_SkyworthMsgs_PatrolCommand[] =
      {
        { "commandType", &CORBA::_tc_string },
        { "command", &CORBA::_tc_char },
        { "destPoint", &SkyworthMsgs::_tc_DestXyzPoint }
      };
  
static TAO::TypeCode::Struct<
  char const *,
  ::CORBA::TypeCode_ptr const *,
  TAO::TypeCode::Struct_Field<
    char const *,
    ::CORBA::TypeCode_ptr const *> const *,
  TAO::Null_RefCount_Policy>
_tao_tc_SkyworthMsgs_PatrolCommand (
  ::CORBA::tk_struct,
  "IDL:SkyworthMsgs/PatrolCommand:1.0",
  "PatrolCommand",
  _tao_fields_SkyworthMsgs_PatrolCommand,
  3);


namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_PatrolCommand =
    &_tao_tc_SkyworthMsgs_PatrolCommand;
}

// TAO_IDL - Generated from
// be/be_visitor_structure/structure_cs.cpp:59

void
SkyworthMsgs::PatrolCommand::_tao_any_destructor (
    void *_tao_void_pointer)
{
  PatrolCommand *_tao_tmp_pointer =
    static_cast<PatrolCommand *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/struct_typecode.cpp:88

static TAO::TypeCode::Struct_Field<
  char const *,
  ::CORBA::TypeCode_ptr const *> const 
    _tao_fields_SkyworthMsgs_CleanStatus[] =
      {
        { "statusType", &CORBA::_tc_string },
        { "status", &CORBA::_tc_char }
      };
  
static TAO::TypeCode::Struct<
  char const *,
  ::CORBA::TypeCode_ptr const *,
  TAO::TypeCode::Struct_Field<
    char const *,
    ::CORBA::TypeCode_ptr const *> const *,
  TAO::Null_RefCount_Policy>
_tao_tc_SkyworthMsgs_CleanStatus (
  ::CORBA::tk_struct,
  "IDL:SkyworthMsgs/CleanStatus:1.0",
  "CleanStatus",
  _tao_fields_SkyworthMsgs_CleanStatus,
  2);


namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_CleanStatus =
    &_tao_tc_SkyworthMsgs_CleanStatus;
}

// TAO_IDL - Generated from
// be/be_visitor_structure/structure_cs.cpp:59

void
SkyworthMsgs::CleanStatus::_tao_any_destructor (
    void *_tao_void_pointer)
{
  CleanStatus *_tao_tmp_pointer =
    static_cast<CleanStatus *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/struct_typecode.cpp:88

static TAO::TypeCode::Struct_Field<
  char const *,
  ::CORBA::TypeCode_ptr const *> const 
    _tao_fields_SkyworthMsgs_CleanCommand[] =
      {
        { "commandType", &CORBA::_tc_string },
        { "command", &CORBA::_tc_char },
        { "distance", &CORBA::_tc_float },
        { "angle", &CORBA::_tc_float }
      };
  
static TAO::TypeCode::Struct<
  char const *,
  ::CORBA::TypeCode_ptr const *,
  TAO::TypeCode::Struct_Field<
    char const *,
    ::CORBA::TypeCode_ptr const *> const *,
  TAO::Null_RefCount_Policy>
_tao_tc_SkyworthMsgs_CleanCommand (
  ::CORBA::tk_struct,
  "IDL:SkyworthMsgs/CleanCommand:1.0",
  "CleanCommand",
  _tao_fields_SkyworthMsgs_CleanCommand,
  4);


namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_CleanCommand =
    &_tao_tc_SkyworthMsgs_CleanCommand;
}

// TAO_IDL - Generated from
// be/be_visitor_structure/structure_cs.cpp:59

void
SkyworthMsgs::CleanCommand::_tao_any_destructor (
    void *_tao_void_pointer)
{
  CleanCommand *_tao_tmp_pointer =
    static_cast<CleanCommand *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be/be_visitor_array/array_cs.cpp:97

SkyworthMsgs::MapPicData_slice *
SkyworthMsgs::MapPicData_dup (const SkyworthMsgs::MapPicData_slice *_tao_src_array)
{
  SkyworthMsgs::MapPicData_slice *_tao_dup_array =
    SkyworthMsgs::MapPicData_alloc ();
  
  if (!_tao_dup_array)
    {
      return static_cast <SkyworthMsgs::MapPicData_slice *> (0);
    }
  
  SkyworthMsgs::MapPicData_copy (_tao_dup_array, _tao_src_array);
  return _tao_dup_array;
}

SkyworthMsgs::MapPicData_slice *
SkyworthMsgs::MapPicData_alloc (void)
{
  SkyworthMsgs::MapPicData_slice *retval = 0;
  ACE_NEW_RETURN (retval, ::CORBA::Char[230400], 0);
  return retval;
}

void
SkyworthMsgs::MapPicData_free (
    SkyworthMsgs::MapPicData_slice *_tao_slice)
{
  delete [] _tao_slice;
}

void
SkyworthMsgs::MapPicData_copy (
    SkyworthMsgs::MapPicData_slice * _tao_to,
    const SkyworthMsgs::MapPicData_slice *_tao_from)
{
  // Copy each individual element.
  for ( ::CORBA::ULong i0 = 0; i0 < 230400; ++i0)
    {
      _tao_to[i0] = _tao_from[i0];
    }
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:51



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:301


#ifndef _TAO_TYPECODE_SkyworthMsgs_MapPicData_GUARD
#define _TAO_TYPECODE_SkyworthMsgs_MapPicData_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        SkyworthMsgs_MapPicData_230400 (
          ::CORBA::tk_array,
          &CORBA::_tc_char,
          230400U);
        
      ::CORBA::TypeCode_ptr const tc_SkyworthMsgs_MapPicData =
        &SkyworthMsgs_MapPicData_230400;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_SkyworthMsgs_MapPicData_GUARD */
static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_MapPicData (
    ::CORBA::tk_alias,
    "IDL:SkyworthMsgs/MapPicData:1.0",
    "MapPicData",
    &TAO::TypeCode::tc_SkyworthMsgs_MapPicData);
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_MapPicData =
    &_tao_tc_SkyworthMsgs_MapPicData;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/struct_typecode.cpp:88



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:301

static TAO::TypeCode::Struct_Field<
  char const *,
  ::CORBA::TypeCode_ptr const *> const 
    _tao_fields_SkyworthMsgs_MapLiveData[] =
      {
        { "data", &SkyworthMsgs::_tc_MapPicData }
      };
  
static TAO::TypeCode::Struct<
  char const *,
  ::CORBA::TypeCode_ptr const *,
  TAO::TypeCode::Struct_Field<
    char const *,
    ::CORBA::TypeCode_ptr const *> const *,
  TAO::Null_RefCount_Policy>
_tao_tc_SkyworthMsgs_MapLiveData (
  ::CORBA::tk_struct,
  "IDL:SkyworthMsgs/MapLiveData:1.0",
  "MapLiveData",
  _tao_fields_SkyworthMsgs_MapLiveData,
  1);


namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_MapLiveData =
    &_tao_tc_SkyworthMsgs_MapLiveData;
}

// TAO_IDL - Generated from
// be/be_visitor_structure/structure_cs.cpp:59

void
SkyworthMsgs::MapLiveData::_tao_any_destructor (
    void *_tao_void_pointer)
{
  MapLiveData *_tao_tmp_pointer =
    static_cast<MapLiveData *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/struct_typecode.cpp:88

static TAO::TypeCode::Struct_Field<
  char const *,
  ::CORBA::TypeCode_ptr const *> const 
    _tao_fields_SkyworthMsgs_SlamManageStatus[] =
      {
        { "statusType", &CORBA::_tc_string },
        { "status", &CORBA::_tc_char }
      };
  
static TAO::TypeCode::Struct<
  char const *,
  ::CORBA::TypeCode_ptr const *,
  TAO::TypeCode::Struct_Field<
    char const *,
    ::CORBA::TypeCode_ptr const *> const *,
  TAO::Null_RefCount_Policy>
_tao_tc_SkyworthMsgs_SlamManageStatus (
  ::CORBA::tk_struct,
  "IDL:SkyworthMsgs/SlamManageStatus:1.0",
  "SlamManageStatus",
  _tao_fields_SkyworthMsgs_SlamManageStatus,
  2);


namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_SlamManageStatus =
    &_tao_tc_SkyworthMsgs_SlamManageStatus;
}

// TAO_IDL - Generated from
// be/be_visitor_structure/structure_cs.cpp:59

void
SkyworthMsgs::SlamManageStatus::_tao_any_destructor (
    void *_tao_void_pointer)
{
  SlamManageStatus *_tao_tmp_pointer =
    static_cast<SlamManageStatus *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/struct_typecode.cpp:88

static TAO::TypeCode::Struct_Field<
  char const *,
  ::CORBA::TypeCode_ptr const *> const 
    _tao_fields_SkyworthMsgs_SlamManageCmd[] =
      {
        { "commandType", &CORBA::_tc_string },
        { "command", &CORBA::_tc_char },
        { "distance", &CORBA::_tc_float },
        { "angle", &CORBA::_tc_float },
        { "destPoint", &SkyworthMsgs::_tc_DestXyzPoint }
      };
  
static TAO::TypeCode::Struct<
  char const *,
  ::CORBA::TypeCode_ptr const *,
  TAO::TypeCode::Struct_Field<
    char const *,
    ::CORBA::TypeCode_ptr const *> const *,
  TAO::Null_RefCount_Policy>
_tao_tc_SkyworthMsgs_SlamManageCmd (
  ::CORBA::tk_struct,
  "IDL:SkyworthMsgs/SlamManageCmd:1.0",
  "SlamManageCmd",
  _tao_fields_SkyworthMsgs_SlamManageCmd,
  5);


namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_SlamManageCmd =
    &_tao_tc_SkyworthMsgs_SlamManageCmd;
}

// TAO_IDL - Generated from
// be/be_visitor_structure/structure_cs.cpp:59

void
SkyworthMsgs::SlamManageCmd::_tao_any_destructor (
    void *_tao_void_pointer)
{
  SlamManageCmd *_tao_tmp_pointer =
    static_cast<SlamManageCmd *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/struct_typecode.cpp:88

static TAO::TypeCode::Struct_Field<
  char const *,
  ::CORBA::TypeCode_ptr const *> const 
    _tao_fields_SkyworthMsgs_PatrolManageStatus[] =
      {
        { "area", &CORBA::_tc_string },
        { "statusType", &CORBA::_tc_string },
        { "status", &CORBA::_tc_char }
      };
  
static TAO::TypeCode::Struct<
  char const *,
  ::CORBA::TypeCode_ptr const *,
  TAO::TypeCode::Struct_Field<
    char const *,
    ::CORBA::TypeCode_ptr const *> const *,
  TAO::Null_RefCount_Policy>
_tao_tc_SkyworthMsgs_PatrolManageStatus (
  ::CORBA::tk_struct,
  "IDL:SkyworthMsgs/PatrolManageStatus:1.0",
  "PatrolManageStatus",
  _tao_fields_SkyworthMsgs_PatrolManageStatus,
  3);


namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_PatrolManageStatus =
    &_tao_tc_SkyworthMsgs_PatrolManageStatus;
}

// TAO_IDL - Generated from
// be/be_visitor_structure/structure_cs.cpp:59

void
SkyworthMsgs::PatrolManageStatus::_tao_any_destructor (
    void *_tao_void_pointer)
{
  PatrolManageStatus *_tao_tmp_pointer =
    static_cast<PatrolManageStatus *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/struct_typecode.cpp:88

static TAO::TypeCode::Struct_Field<
  char const *,
  ::CORBA::TypeCode_ptr const *> const 
    _tao_fields_SkyworthMsgs_PatrolManageCmd[] =
      {
        { "area", &CORBA::_tc_string },
        { "commandType", &CORBA::_tc_string },
        { "command", &CORBA::_tc_char }
      };
  
static TAO::TypeCode::Struct<
  char const *,
  ::CORBA::TypeCode_ptr const *,
  TAO::TypeCode::Struct_Field<
    char const *,
    ::CORBA::TypeCode_ptr const *> const *,
  TAO::Null_RefCount_Policy>
_tao_tc_SkyworthMsgs_PatrolManageCmd (
  ::CORBA::tk_struct,
  "IDL:SkyworthMsgs/PatrolManageCmd:1.0",
  "PatrolManageCmd",
  _tao_fields_SkyworthMsgs_PatrolManageCmd,
  3);


namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_PatrolManageCmd =
    &_tao_tc_SkyworthMsgs_PatrolManageCmd;
}

// TAO_IDL - Generated from
// be/be_visitor_structure/structure_cs.cpp:59

void
SkyworthMsgs::PatrolManageCmd::_tao_any_destructor (
    void *_tao_void_pointer)
{
  PatrolManageCmd *_tao_tmp_pointer =
    static_cast<PatrolManageCmd *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/struct_typecode.cpp:88

static TAO::TypeCode::Struct_Field<
  char const *,
  ::CORBA::TypeCode_ptr const *> const 
    _tao_fields_SkyworthMsgs_CleanManageStatus[] =
      {
        { "statusType", &CORBA::_tc_string },
        { "status", &CORBA::_tc_char }
      };
  
static TAO::TypeCode::Struct<
  char const *,
  ::CORBA::TypeCode_ptr const *,
  TAO::TypeCode::Struct_Field<
    char const *,
    ::CORBA::TypeCode_ptr const *> const *,
  TAO::Null_RefCount_Policy>
_tao_tc_SkyworthMsgs_CleanManageStatus (
  ::CORBA::tk_struct,
  "IDL:SkyworthMsgs/CleanManageStatus:1.0",
  "CleanManageStatus",
  _tao_fields_SkyworthMsgs_CleanManageStatus,
  2);


namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_CleanManageStatus =
    &_tao_tc_SkyworthMsgs_CleanManageStatus;
}

// TAO_IDL - Generated from
// be/be_visitor_structure/structure_cs.cpp:59

void
SkyworthMsgs::CleanManageStatus::_tao_any_destructor (
    void *_tao_void_pointer)
{
  CleanManageStatus *_tao_tmp_pointer =
    static_cast<CleanManageStatus *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/struct_typecode.cpp:88

static TAO::TypeCode::Struct_Field<
  char const *,
  ::CORBA::TypeCode_ptr const *> const 
    _tao_fields_SkyworthMsgs_CleanManageCmd[] =
      {
        { "point1", &SkyworthMsgs::_tc_EdgeXyzPoint },
        { "point2", &SkyworthMsgs::_tc_EdgeXyzPoint },
        { "point3", &SkyworthMsgs::_tc_EdgeXyzPoint },
        { "point4", &SkyworthMsgs::_tc_EdgeXyzPoint },
        { "commandType", &CORBA::_tc_string },
        { "command", &CORBA::_tc_char }
      };
  
static TAO::TypeCode::Struct<
  char const *,
  ::CORBA::TypeCode_ptr const *,
  TAO::TypeCode::Struct_Field<
    char const *,
    ::CORBA::TypeCode_ptr const *> const *,
  TAO::Null_RefCount_Policy>
_tao_tc_SkyworthMsgs_CleanManageCmd (
  ::CORBA::tk_struct,
  "IDL:SkyworthMsgs/CleanManageCmd:1.0",
  "CleanManageCmd",
  _tao_fields_SkyworthMsgs_CleanManageCmd,
  6);


namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_CleanManageCmd =
    &_tao_tc_SkyworthMsgs_CleanManageCmd;
}

// TAO_IDL - Generated from
// be/be_visitor_structure/structure_cs.cpp:59

void
SkyworthMsgs::CleanManageCmd::_tao_any_destructor (
    void *_tao_void_pointer)
{
  CleanManageCmd *_tao_tmp_pointer =
    static_cast<CleanManageCmd *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/struct_typecode.cpp:88

static TAO::TypeCode::Struct_Field<
  char const *,
  ::CORBA::TypeCode_ptr const *> const 
    _tao_fields_SkyworthMsgs_MapLiveCmd[] =
      {
        { "commandType", &CORBA::_tc_string },
        { "command", &CORBA::_tc_char }
      };
  
static TAO::TypeCode::Struct<
  char const *,
  ::CORBA::TypeCode_ptr const *,
  TAO::TypeCode::Struct_Field<
    char const *,
    ::CORBA::TypeCode_ptr const *> const *,
  TAO::Null_RefCount_Policy>
_tao_tc_SkyworthMsgs_MapLiveCmd (
  ::CORBA::tk_struct,
  "IDL:SkyworthMsgs/MapLiveCmd:1.0",
  "MapLiveCmd",
  _tao_fields_SkyworthMsgs_MapLiveCmd,
  2);


namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_MapLiveCmd =
    &_tao_tc_SkyworthMsgs_MapLiveCmd;
}

// TAO_IDL - Generated from
// be/be_visitor_structure/structure_cs.cpp:59

void
SkyworthMsgs::MapLiveCmd::_tao_any_destructor (
    void *_tao_void_pointer)
{
  MapLiveCmd *_tao_tmp_pointer =
    static_cast<MapLiveCmd *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/struct_typecode.cpp:88

static TAO::TypeCode::Struct_Field<
  char const *,
  ::CORBA::TypeCode_ptr const *> const 
    _tao_fields_SkyworthMsgs_CleanRouterStatus[] =
      {
        { "statusType", &CORBA::_tc_string },
        { "status", &CORBA::_tc_char }
      };
  
static TAO::TypeCode::Struct<
  char const *,
  ::CORBA::TypeCode_ptr const *,
  TAO::TypeCode::Struct_Field<
    char const *,
    ::CORBA::TypeCode_ptr const *> const *,
  TAO::Null_RefCount_Policy>
_tao_tc_SkyworthMsgs_CleanRouterStatus (
  ::CORBA::tk_struct,
  "IDL:SkyworthMsgs/CleanRouterStatus:1.0",
  "CleanRouterStatus",
  _tao_fields_SkyworthMsgs_CleanRouterStatus,
  2);


namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_CleanRouterStatus =
    &_tao_tc_SkyworthMsgs_CleanRouterStatus;
}

// TAO_IDL - Generated from
// be/be_visitor_structure/structure_cs.cpp:59

void
SkyworthMsgs::CleanRouterStatus::_tao_any_destructor (
    void *_tao_void_pointer)
{
  CleanRouterStatus *_tao_tmp_pointer =
    static_cast<CleanRouterStatus *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/struct_typecode.cpp:88

static TAO::TypeCode::Struct_Field<
  char const *,
  ::CORBA::TypeCode_ptr const *> const 
    _tao_fields_SkyworthMsgs_CleanRouterCmd[] =
      {
        { "point1", &SkyworthMsgs::_tc_EdgeXyzPoint },
        { "point2", &SkyworthMsgs::_tc_EdgeXyzPoint },
        { "point3", &SkyworthMsgs::_tc_EdgeXyzPoint },
        { "point4", &SkyworthMsgs::_tc_EdgeXyzPoint },
        { "area", &CORBA::_tc_string },
        { "commandType", &CORBA::_tc_string },
        { "command", &CORBA::_tc_char }
      };
  
static TAO::TypeCode::Struct<
  char const *,
  ::CORBA::TypeCode_ptr const *,
  TAO::TypeCode::Struct_Field<
    char const *,
    ::CORBA::TypeCode_ptr const *> const *,
  TAO::Null_RefCount_Policy>
_tao_tc_SkyworthMsgs_CleanRouterCmd (
  ::CORBA::tk_struct,
  "IDL:SkyworthMsgs/CleanRouterCmd:1.0",
  "CleanRouterCmd",
  _tao_fields_SkyworthMsgs_CleanRouterCmd,
  7);


namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_CleanRouterCmd =
    &_tao_tc_SkyworthMsgs_CleanRouterCmd;
}

// TAO_IDL - Generated from
// be/be_visitor_structure/structure_cs.cpp:59

void
SkyworthMsgs::CleanRouterCmd::_tao_any_destructor (
    void *_tao_void_pointer)
{
  CleanRouterCmd *_tao_tmp_pointer =
    static_cast<CleanRouterCmd *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_cs.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  /// Copying insertion.
  void operator<<= (
      ::CORBA::Any &_tao_any,
      const ::SkyworthMsgs::EdgePolorPoint &_tao_elem)
  {
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::EdgePolorPoint>::insert_copy (
        _tao_any,
        ::SkyworthMsgs::EdgePolorPoint::_tao_any_destructor,
        ::SkyworthMsgs::_tc_EdgePolorPoint,
        _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any, ::
    SkyworthMsgs::EdgePolorPoint *_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::SkyworthMsgs::EdgePolorPoint>::insert (
      _tao_any,
      ::SkyworthMsgs::EdgePolorPoint::_tao_any_destructor,
      ::SkyworthMsgs::_tc_EdgePolorPoint,
      _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    ::SkyworthMsgs::EdgePolorPoint *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const ::SkyworthMsgs::EdgePolorPoint *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    const ::SkyworthMsgs::EdgePolorPoint *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::EdgePolorPoint>::extract (
        _tao_any,
        ::SkyworthMsgs::EdgePolorPoint::_tao_any_destructor,
        ::SkyworthMsgs::_tc_EdgePolorPoint,
        _tao_elem
      );
}
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

/// Copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  const SkyworthMsgs::EdgePolorPoint &_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::EdgePolorPoint>::insert_copy (
    _tao_any,
    SkyworthMsgs::EdgePolorPoint::_tao_any_destructor,
    SkyworthMsgs::_tc_EdgePolorPoint,
    _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  SkyworthMsgs::EdgePolorPoint *_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::EdgePolorPoint>::insert (
    _tao_any,
    SkyworthMsgs::EdgePolorPoint::_tao_any_destructor,
    SkyworthMsgs::_tc_EdgePolorPoint,
    _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  SkyworthMsgs::EdgePolorPoint *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const SkyworthMsgs::EdgePolorPoint *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  const SkyworthMsgs::EdgePolorPoint *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T<SkyworthMsgs::EdgePolorPoint>::extract (
      _tao_any,
      SkyworthMsgs::EdgePolorPoint::_tao_any_destructor,
      SkyworthMsgs::_tc_EdgePolorPoint,
      _tao_elem);
}
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_cs.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  /// Copying insertion.
  void operator<<= (
      ::CORBA::Any &_tao_any,
      const ::SkyworthMsgs::EdgeXyzPoint &_tao_elem)
  {
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::EdgeXyzPoint>::insert_copy (
        _tao_any,
        ::SkyworthMsgs::EdgeXyzPoint::_tao_any_destructor,
        ::SkyworthMsgs::_tc_EdgeXyzPoint,
        _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any, ::
    SkyworthMsgs::EdgeXyzPoint *_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::SkyworthMsgs::EdgeXyzPoint>::insert (
      _tao_any,
      ::SkyworthMsgs::EdgeXyzPoint::_tao_any_destructor,
      ::SkyworthMsgs::_tc_EdgeXyzPoint,
      _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    ::SkyworthMsgs::EdgeXyzPoint *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const ::SkyworthMsgs::EdgeXyzPoint *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    const ::SkyworthMsgs::EdgeXyzPoint *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::EdgeXyzPoint>::extract (
        _tao_any,
        ::SkyworthMsgs::EdgeXyzPoint::_tao_any_destructor,
        ::SkyworthMsgs::_tc_EdgeXyzPoint,
        _tao_elem
      );
}
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

/// Copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  const SkyworthMsgs::EdgeXyzPoint &_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::EdgeXyzPoint>::insert_copy (
    _tao_any,
    SkyworthMsgs::EdgeXyzPoint::_tao_any_destructor,
    SkyworthMsgs::_tc_EdgeXyzPoint,
    _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  SkyworthMsgs::EdgeXyzPoint *_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::EdgeXyzPoint>::insert (
    _tao_any,
    SkyworthMsgs::EdgeXyzPoint::_tao_any_destructor,
    SkyworthMsgs::_tc_EdgeXyzPoint,
    _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  SkyworthMsgs::EdgeXyzPoint *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const SkyworthMsgs::EdgeXyzPoint *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  const SkyworthMsgs::EdgeXyzPoint *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T<SkyworthMsgs::EdgeXyzPoint>::extract (
      _tao_any,
      SkyworthMsgs::EdgeXyzPoint::_tao_any_destructor,
      SkyworthMsgs::_tc_EdgeXyzPoint,
      _tao_elem);
}
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_cs.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  /// Copying insertion.
  void operator<<= (
      ::CORBA::Any &_tao_any,
      const ::SkyworthMsgs::DestXyzPoint &_tao_elem)
  {
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::DestXyzPoint>::insert_copy (
        _tao_any,
        ::SkyworthMsgs::DestXyzPoint::_tao_any_destructor,
        ::SkyworthMsgs::_tc_DestXyzPoint,
        _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any, ::
    SkyworthMsgs::DestXyzPoint *_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::SkyworthMsgs::DestXyzPoint>::insert (
      _tao_any,
      ::SkyworthMsgs::DestXyzPoint::_tao_any_destructor,
      ::SkyworthMsgs::_tc_DestXyzPoint,
      _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    ::SkyworthMsgs::DestXyzPoint *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const ::SkyworthMsgs::DestXyzPoint *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    const ::SkyworthMsgs::DestXyzPoint *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::DestXyzPoint>::extract (
        _tao_any,
        ::SkyworthMsgs::DestXyzPoint::_tao_any_destructor,
        ::SkyworthMsgs::_tc_DestXyzPoint,
        _tao_elem
      );
}
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

/// Copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  const SkyworthMsgs::DestXyzPoint &_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::DestXyzPoint>::insert_copy (
    _tao_any,
    SkyworthMsgs::DestXyzPoint::_tao_any_destructor,
    SkyworthMsgs::_tc_DestXyzPoint,
    _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  SkyworthMsgs::DestXyzPoint *_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::DestXyzPoint>::insert (
    _tao_any,
    SkyworthMsgs::DestXyzPoint::_tao_any_destructor,
    SkyworthMsgs::_tc_DestXyzPoint,
    _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  SkyworthMsgs::DestXyzPoint *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const SkyworthMsgs::DestXyzPoint *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  const SkyworthMsgs::DestXyzPoint *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T<SkyworthMsgs::DestXyzPoint>::extract (
      _tao_any,
      SkyworthMsgs::DestXyzPoint::_tao_any_destructor,
      SkyworthMsgs::_tc_DestXyzPoint,
      _tao_elem);
}
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_array/any_op_cs.cpp:40


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

void operator<<= (
    ::CORBA::Any &_tao_any,
    const SkyworthMsgs::EdgePolorPointList_forany &_tao_elem
  )
{
  TAO::Any_Array_Impl_T<
      SkyworthMsgs::EdgePolorPointList_slice,
      SkyworthMsgs::EdgePolorPointList_forany
    >::insert (
        _tao_any,
        SkyworthMsgs::EdgePolorPointList_forany::_tao_any_destructor,
        SkyworthMsgs::_tc_EdgePolorPointList,
        _tao_elem.nocopy ()
          ? _tao_elem.ptr ()
          : SkyworthMsgs::EdgePolorPointList_dup (_tao_elem.in ())
      );
}

::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::EdgePolorPointList_forany &_tao_elem
  )
{
  return
    TAO::Any_Array_Impl_T<
        SkyworthMsgs::EdgePolorPointList_slice,
        SkyworthMsgs::EdgePolorPointList_forany
      >::extract (
          _tao_any,
          SkyworthMsgs::EdgePolorPointList_forany::_tao_any_destructor,
          SkyworthMsgs::_tc_EdgePolorPointList,
          _tao_elem.out ()
        );
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_cs.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  /// Copying insertion.
  void operator<<= (
      ::CORBA::Any &_tao_any,
      const ::SkyworthMsgs::DepthEdgeData &_tao_elem)
  {
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::DepthEdgeData>::insert_copy (
        _tao_any,
        ::SkyworthMsgs::DepthEdgeData::_tao_any_destructor,
        ::SkyworthMsgs::_tc_DepthEdgeData,
        _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any, ::
    SkyworthMsgs::DepthEdgeData *_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::SkyworthMsgs::DepthEdgeData>::insert (
      _tao_any,
      ::SkyworthMsgs::DepthEdgeData::_tao_any_destructor,
      ::SkyworthMsgs::_tc_DepthEdgeData,
      _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    ::SkyworthMsgs::DepthEdgeData *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const ::SkyworthMsgs::DepthEdgeData *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    const ::SkyworthMsgs::DepthEdgeData *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::DepthEdgeData>::extract (
        _tao_any,
        ::SkyworthMsgs::DepthEdgeData::_tao_any_destructor,
        ::SkyworthMsgs::_tc_DepthEdgeData,
        _tao_elem
      );
}
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

/// Copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  const SkyworthMsgs::DepthEdgeData &_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::DepthEdgeData>::insert_copy (
    _tao_any,
    SkyworthMsgs::DepthEdgeData::_tao_any_destructor,
    SkyworthMsgs::_tc_DepthEdgeData,
    _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  SkyworthMsgs::DepthEdgeData *_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::DepthEdgeData>::insert (
    _tao_any,
    SkyworthMsgs::DepthEdgeData::_tao_any_destructor,
    SkyworthMsgs::_tc_DepthEdgeData,
    _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  SkyworthMsgs::DepthEdgeData *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const SkyworthMsgs::DepthEdgeData *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  const SkyworthMsgs::DepthEdgeData *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T<SkyworthMsgs::DepthEdgeData>::extract (
      _tao_any,
      SkyworthMsgs::DepthEdgeData::_tao_any_destructor,
      SkyworthMsgs::_tc_DepthEdgeData,
      _tao_elem);
}
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_cs.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  /// Copying insertion.
  void operator<<= (
      ::CORBA::Any &_tao_any,
      const ::SkyworthMsgs::UltraTouchData &_tao_elem)
  {
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::UltraTouchData>::insert_copy (
        _tao_any,
        ::SkyworthMsgs::UltraTouchData::_tao_any_destructor,
        ::SkyworthMsgs::_tc_UltraTouchData,
        _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any, ::
    SkyworthMsgs::UltraTouchData *_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::SkyworthMsgs::UltraTouchData>::insert (
      _tao_any,
      ::SkyworthMsgs::UltraTouchData::_tao_any_destructor,
      ::SkyworthMsgs::_tc_UltraTouchData,
      _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    ::SkyworthMsgs::UltraTouchData *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const ::SkyworthMsgs::UltraTouchData *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    const ::SkyworthMsgs::UltraTouchData *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::UltraTouchData>::extract (
        _tao_any,
        ::SkyworthMsgs::UltraTouchData::_tao_any_destructor,
        ::SkyworthMsgs::_tc_UltraTouchData,
        _tao_elem
      );
}
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

/// Copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  const SkyworthMsgs::UltraTouchData &_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::UltraTouchData>::insert_copy (
    _tao_any,
    SkyworthMsgs::UltraTouchData::_tao_any_destructor,
    SkyworthMsgs::_tc_UltraTouchData,
    _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  SkyworthMsgs::UltraTouchData *_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::UltraTouchData>::insert (
    _tao_any,
    SkyworthMsgs::UltraTouchData::_tao_any_destructor,
    SkyworthMsgs::_tc_UltraTouchData,
    _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  SkyworthMsgs::UltraTouchData *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const SkyworthMsgs::UltraTouchData *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  const SkyworthMsgs::UltraTouchData *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T<SkyworthMsgs::UltraTouchData>::extract (
      _tao_any,
      SkyworthMsgs::UltraTouchData::_tao_any_destructor,
      SkyworthMsgs::_tc_UltraTouchData,
      _tao_elem);
}
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_array/any_op_cs.cpp:40


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

void operator<<= (
    ::CORBA::Any &_tao_any,
    const SkyworthMsgs::RgbPicData_forany &_tao_elem
  )
{
  TAO::Any_Array_Impl_T<
      SkyworthMsgs::RgbPicData_slice,
      SkyworthMsgs::RgbPicData_forany
    >::insert (
        _tao_any,
        SkyworthMsgs::RgbPicData_forany::_tao_any_destructor,
        SkyworthMsgs::_tc_RgbPicData,
        _tao_elem.nocopy ()
          ? _tao_elem.ptr ()
          : SkyworthMsgs::RgbPicData_dup (_tao_elem.in ())
      );
}

::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::RgbPicData_forany &_tao_elem
  )
{
  return
    TAO::Any_Array_Impl_T<
        SkyworthMsgs::RgbPicData_slice,
        SkyworthMsgs::RgbPicData_forany
      >::extract (
          _tao_any,
          SkyworthMsgs::RgbPicData_forany::_tao_any_destructor,
          SkyworthMsgs::_tc_RgbPicData,
          _tao_elem.out ()
        );
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_cs.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  /// Copying insertion.
  void operator<<= (
      ::CORBA::Any &_tao_any,
      const ::SkyworthMsgs::RgbPic &_tao_elem)
  {
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::RgbPic>::insert_copy (
        _tao_any,
        ::SkyworthMsgs::RgbPic::_tao_any_destructor,
        ::SkyworthMsgs::_tc_RgbPic,
        _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any, ::
    SkyworthMsgs::RgbPic *_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::SkyworthMsgs::RgbPic>::insert (
      _tao_any,
      ::SkyworthMsgs::RgbPic::_tao_any_destructor,
      ::SkyworthMsgs::_tc_RgbPic,
      _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    ::SkyworthMsgs::RgbPic *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const ::SkyworthMsgs::RgbPic *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    const ::SkyworthMsgs::RgbPic *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::RgbPic>::extract (
        _tao_any,
        ::SkyworthMsgs::RgbPic::_tao_any_destructor,
        ::SkyworthMsgs::_tc_RgbPic,
        _tao_elem
      );
}
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

/// Copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  const SkyworthMsgs::RgbPic &_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::RgbPic>::insert_copy (
    _tao_any,
    SkyworthMsgs::RgbPic::_tao_any_destructor,
    SkyworthMsgs::_tc_RgbPic,
    _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  SkyworthMsgs::RgbPic *_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::RgbPic>::insert (
    _tao_any,
    SkyworthMsgs::RgbPic::_tao_any_destructor,
    SkyworthMsgs::_tc_RgbPic,
    _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  SkyworthMsgs::RgbPic *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const SkyworthMsgs::RgbPic *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  const SkyworthMsgs::RgbPic *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T<SkyworthMsgs::RgbPic>::extract (
      _tao_any,
      SkyworthMsgs::RgbPic::_tao_any_destructor,
      SkyworthMsgs::_tc_RgbPic,
      _tao_elem);
}
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_array/any_op_cs.cpp:40


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

void operator<<= (
    ::CORBA::Any &_tao_any,
    const SkyworthMsgs::EdgeXyzPointList_forany &_tao_elem
  )
{
  TAO::Any_Array_Impl_T<
      SkyworthMsgs::EdgeXyzPointList_slice,
      SkyworthMsgs::EdgeXyzPointList_forany
    >::insert (
        _tao_any,
        SkyworthMsgs::EdgeXyzPointList_forany::_tao_any_destructor,
        SkyworthMsgs::_tc_EdgeXyzPointList,
        _tao_elem.nocopy ()
          ? _tao_elem.ptr ()
          : SkyworthMsgs::EdgeXyzPointList_dup (_tao_elem.in ())
      );
}

::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::EdgeXyzPointList_forany &_tao_elem
  )
{
  return
    TAO::Any_Array_Impl_T<
        SkyworthMsgs::EdgeXyzPointList_slice,
        SkyworthMsgs::EdgeXyzPointList_forany
      >::extract (
          _tao_any,
          SkyworthMsgs::EdgeXyzPointList_forany::_tao_any_destructor,
          SkyworthMsgs::_tc_EdgeXyzPointList,
          _tao_elem.out ()
        );
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_cs.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  /// Copying insertion.
  void operator<<= (
      ::CORBA::Any &_tao_any,
      const ::SkyworthMsgs::ObsData &_tao_elem)
  {
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::ObsData>::insert_copy (
        _tao_any,
        ::SkyworthMsgs::ObsData::_tao_any_destructor,
        ::SkyworthMsgs::_tc_ObsData,
        _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any, ::
    SkyworthMsgs::ObsData *_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::SkyworthMsgs::ObsData>::insert (
      _tao_any,
      ::SkyworthMsgs::ObsData::_tao_any_destructor,
      ::SkyworthMsgs::_tc_ObsData,
      _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    ::SkyworthMsgs::ObsData *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const ::SkyworthMsgs::ObsData *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    const ::SkyworthMsgs::ObsData *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::ObsData>::extract (
        _tao_any,
        ::SkyworthMsgs::ObsData::_tao_any_destructor,
        ::SkyworthMsgs::_tc_ObsData,
        _tao_elem
      );
}
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

/// Copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  const SkyworthMsgs::ObsData &_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::ObsData>::insert_copy (
    _tao_any,
    SkyworthMsgs::ObsData::_tao_any_destructor,
    SkyworthMsgs::_tc_ObsData,
    _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  SkyworthMsgs::ObsData *_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::ObsData>::insert (
    _tao_any,
    SkyworthMsgs::ObsData::_tao_any_destructor,
    SkyworthMsgs::_tc_ObsData,
    _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  SkyworthMsgs::ObsData *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const SkyworthMsgs::ObsData *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  const SkyworthMsgs::ObsData *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T<SkyworthMsgs::ObsData>::extract (
      _tao_any,
      SkyworthMsgs::ObsData::_tao_any_destructor,
      SkyworthMsgs::_tc_ObsData,
      _tao_elem);
}
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_cs.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  /// Copying insertion.
  void operator<<= (
      ::CORBA::Any &_tao_any,
      const ::SkyworthMsgs::CleanerStatus &_tao_elem)
  {
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::CleanerStatus>::insert_copy (
        _tao_any,
        ::SkyworthMsgs::CleanerStatus::_tao_any_destructor,
        ::SkyworthMsgs::_tc_CleanerStatus,
        _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any, ::
    SkyworthMsgs::CleanerStatus *_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::SkyworthMsgs::CleanerStatus>::insert (
      _tao_any,
      ::SkyworthMsgs::CleanerStatus::_tao_any_destructor,
      ::SkyworthMsgs::_tc_CleanerStatus,
      _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    ::SkyworthMsgs::CleanerStatus *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const ::SkyworthMsgs::CleanerStatus *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    const ::SkyworthMsgs::CleanerStatus *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::CleanerStatus>::extract (
        _tao_any,
        ::SkyworthMsgs::CleanerStatus::_tao_any_destructor,
        ::SkyworthMsgs::_tc_CleanerStatus,
        _tao_elem
      );
}
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

/// Copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  const SkyworthMsgs::CleanerStatus &_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::CleanerStatus>::insert_copy (
    _tao_any,
    SkyworthMsgs::CleanerStatus::_tao_any_destructor,
    SkyworthMsgs::_tc_CleanerStatus,
    _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  SkyworthMsgs::CleanerStatus *_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::CleanerStatus>::insert (
    _tao_any,
    SkyworthMsgs::CleanerStatus::_tao_any_destructor,
    SkyworthMsgs::_tc_CleanerStatus,
    _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  SkyworthMsgs::CleanerStatus *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const SkyworthMsgs::CleanerStatus *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  const SkyworthMsgs::CleanerStatus *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T<SkyworthMsgs::CleanerStatus>::extract (
      _tao_any,
      SkyworthMsgs::CleanerStatus::_tao_any_destructor,
      SkyworthMsgs::_tc_CleanerStatus,
      _tao_elem);
}
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_cs.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  /// Copying insertion.
  void operator<<= (
      ::CORBA::Any &_tao_any,
      const ::SkyworthMsgs::CleanerCommand &_tao_elem)
  {
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::CleanerCommand>::insert_copy (
        _tao_any,
        ::SkyworthMsgs::CleanerCommand::_tao_any_destructor,
        ::SkyworthMsgs::_tc_CleanerCommand,
        _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any, ::
    SkyworthMsgs::CleanerCommand *_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::SkyworthMsgs::CleanerCommand>::insert (
      _tao_any,
      ::SkyworthMsgs::CleanerCommand::_tao_any_destructor,
      ::SkyworthMsgs::_tc_CleanerCommand,
      _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    ::SkyworthMsgs::CleanerCommand *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const ::SkyworthMsgs::CleanerCommand *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    const ::SkyworthMsgs::CleanerCommand *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::CleanerCommand>::extract (
        _tao_any,
        ::SkyworthMsgs::CleanerCommand::_tao_any_destructor,
        ::SkyworthMsgs::_tc_CleanerCommand,
        _tao_elem
      );
}
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

/// Copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  const SkyworthMsgs::CleanerCommand &_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::CleanerCommand>::insert_copy (
    _tao_any,
    SkyworthMsgs::CleanerCommand::_tao_any_destructor,
    SkyworthMsgs::_tc_CleanerCommand,
    _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  SkyworthMsgs::CleanerCommand *_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::CleanerCommand>::insert (
    _tao_any,
    SkyworthMsgs::CleanerCommand::_tao_any_destructor,
    SkyworthMsgs::_tc_CleanerCommand,
    _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  SkyworthMsgs::CleanerCommand *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const SkyworthMsgs::CleanerCommand *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  const SkyworthMsgs::CleanerCommand *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T<SkyworthMsgs::CleanerCommand>::extract (
      _tao_any,
      SkyworthMsgs::CleanerCommand::_tao_any_destructor,
      SkyworthMsgs::_tc_CleanerCommand,
      _tao_elem);
}
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_cs.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  /// Copying insertion.
  void operator<<= (
      ::CORBA::Any &_tao_any,
      const ::SkyworthMsgs::ElecQuantity &_tao_elem)
  {
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::ElecQuantity>::insert_copy (
        _tao_any,
        ::SkyworthMsgs::ElecQuantity::_tao_any_destructor,
        ::SkyworthMsgs::_tc_ElecQuantity,
        _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any, ::
    SkyworthMsgs::ElecQuantity *_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::SkyworthMsgs::ElecQuantity>::insert (
      _tao_any,
      ::SkyworthMsgs::ElecQuantity::_tao_any_destructor,
      ::SkyworthMsgs::_tc_ElecQuantity,
      _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    ::SkyworthMsgs::ElecQuantity *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const ::SkyworthMsgs::ElecQuantity *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    const ::SkyworthMsgs::ElecQuantity *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::ElecQuantity>::extract (
        _tao_any,
        ::SkyworthMsgs::ElecQuantity::_tao_any_destructor,
        ::SkyworthMsgs::_tc_ElecQuantity,
        _tao_elem
      );
}
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

/// Copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  const SkyworthMsgs::ElecQuantity &_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::ElecQuantity>::insert_copy (
    _tao_any,
    SkyworthMsgs::ElecQuantity::_tao_any_destructor,
    SkyworthMsgs::_tc_ElecQuantity,
    _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  SkyworthMsgs::ElecQuantity *_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::ElecQuantity>::insert (
    _tao_any,
    SkyworthMsgs::ElecQuantity::_tao_any_destructor,
    SkyworthMsgs::_tc_ElecQuantity,
    _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  SkyworthMsgs::ElecQuantity *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const SkyworthMsgs::ElecQuantity *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  const SkyworthMsgs::ElecQuantity *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T<SkyworthMsgs::ElecQuantity>::extract (
      _tao_any,
      SkyworthMsgs::ElecQuantity::_tao_any_destructor,
      SkyworthMsgs::_tc_ElecQuantity,
      _tao_elem);
}
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_cs.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  /// Copying insertion.
  void operator<<= (
      ::CORBA::Any &_tao_any,
      const ::SkyworthMsgs::EmgStop &_tao_elem)
  {
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::EmgStop>::insert_copy (
        _tao_any,
        ::SkyworthMsgs::EmgStop::_tao_any_destructor,
        ::SkyworthMsgs::_tc_EmgStop,
        _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any, ::
    SkyworthMsgs::EmgStop *_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::SkyworthMsgs::EmgStop>::insert (
      _tao_any,
      ::SkyworthMsgs::EmgStop::_tao_any_destructor,
      ::SkyworthMsgs::_tc_EmgStop,
      _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    ::SkyworthMsgs::EmgStop *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const ::SkyworthMsgs::EmgStop *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    const ::SkyworthMsgs::EmgStop *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::EmgStop>::extract (
        _tao_any,
        ::SkyworthMsgs::EmgStop::_tao_any_destructor,
        ::SkyworthMsgs::_tc_EmgStop,
        _tao_elem
      );
}
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

/// Copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  const SkyworthMsgs::EmgStop &_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::EmgStop>::insert_copy (
    _tao_any,
    SkyworthMsgs::EmgStop::_tao_any_destructor,
    SkyworthMsgs::_tc_EmgStop,
    _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  SkyworthMsgs::EmgStop *_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::EmgStop>::insert (
    _tao_any,
    SkyworthMsgs::EmgStop::_tao_any_destructor,
    SkyworthMsgs::_tc_EmgStop,
    _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  SkyworthMsgs::EmgStop *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const SkyworthMsgs::EmgStop *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  const SkyworthMsgs::EmgStop *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T<SkyworthMsgs::EmgStop>::extract (
      _tao_any,
      SkyworthMsgs::EmgStop::_tao_any_destructor,
      SkyworthMsgs::_tc_EmgStop,
      _tao_elem);
}
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_cs.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  /// Copying insertion.
  void operator<<= (
      ::CORBA::Any &_tao_any,
      const ::SkyworthMsgs::SlamStatus &_tao_elem)
  {
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::SlamStatus>::insert_copy (
        _tao_any,
        ::SkyworthMsgs::SlamStatus::_tao_any_destructor,
        ::SkyworthMsgs::_tc_SlamStatus,
        _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any, ::
    SkyworthMsgs::SlamStatus *_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::SkyworthMsgs::SlamStatus>::insert (
      _tao_any,
      ::SkyworthMsgs::SlamStatus::_tao_any_destructor,
      ::SkyworthMsgs::_tc_SlamStatus,
      _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    ::SkyworthMsgs::SlamStatus *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const ::SkyworthMsgs::SlamStatus *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    const ::SkyworthMsgs::SlamStatus *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::SlamStatus>::extract (
        _tao_any,
        ::SkyworthMsgs::SlamStatus::_tao_any_destructor,
        ::SkyworthMsgs::_tc_SlamStatus,
        _tao_elem
      );
}
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

/// Copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  const SkyworthMsgs::SlamStatus &_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::SlamStatus>::insert_copy (
    _tao_any,
    SkyworthMsgs::SlamStatus::_tao_any_destructor,
    SkyworthMsgs::_tc_SlamStatus,
    _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  SkyworthMsgs::SlamStatus *_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::SlamStatus>::insert (
    _tao_any,
    SkyworthMsgs::SlamStatus::_tao_any_destructor,
    SkyworthMsgs::_tc_SlamStatus,
    _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  SkyworthMsgs::SlamStatus *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const SkyworthMsgs::SlamStatus *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  const SkyworthMsgs::SlamStatus *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T<SkyworthMsgs::SlamStatus>::extract (
      _tao_any,
      SkyworthMsgs::SlamStatus::_tao_any_destructor,
      SkyworthMsgs::_tc_SlamStatus,
      _tao_elem);
}
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_cs.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  /// Copying insertion.
  void operator<<= (
      ::CORBA::Any &_tao_any,
      const ::SkyworthMsgs::SlamCommand &_tao_elem)
  {
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::SlamCommand>::insert_copy (
        _tao_any,
        ::SkyworthMsgs::SlamCommand::_tao_any_destructor,
        ::SkyworthMsgs::_tc_SlamCommand,
        _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any, ::
    SkyworthMsgs::SlamCommand *_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::SkyworthMsgs::SlamCommand>::insert (
      _tao_any,
      ::SkyworthMsgs::SlamCommand::_tao_any_destructor,
      ::SkyworthMsgs::_tc_SlamCommand,
      _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    ::SkyworthMsgs::SlamCommand *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const ::SkyworthMsgs::SlamCommand *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    const ::SkyworthMsgs::SlamCommand *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::SlamCommand>::extract (
        _tao_any,
        ::SkyworthMsgs::SlamCommand::_tao_any_destructor,
        ::SkyworthMsgs::_tc_SlamCommand,
        _tao_elem
      );
}
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

/// Copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  const SkyworthMsgs::SlamCommand &_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::SlamCommand>::insert_copy (
    _tao_any,
    SkyworthMsgs::SlamCommand::_tao_any_destructor,
    SkyworthMsgs::_tc_SlamCommand,
    _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  SkyworthMsgs::SlamCommand *_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::SlamCommand>::insert (
    _tao_any,
    SkyworthMsgs::SlamCommand::_tao_any_destructor,
    SkyworthMsgs::_tc_SlamCommand,
    _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  SkyworthMsgs::SlamCommand *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const SkyworthMsgs::SlamCommand *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  const SkyworthMsgs::SlamCommand *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T<SkyworthMsgs::SlamCommand>::extract (
      _tao_any,
      SkyworthMsgs::SlamCommand::_tao_any_destructor,
      SkyworthMsgs::_tc_SlamCommand,
      _tao_elem);
}
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_cs.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  /// Copying insertion.
  void operator<<= (
      ::CORBA::Any &_tao_any,
      const ::SkyworthMsgs::SlamInteStatus &_tao_elem)
  {
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::SlamInteStatus>::insert_copy (
        _tao_any,
        ::SkyworthMsgs::SlamInteStatus::_tao_any_destructor,
        ::SkyworthMsgs::_tc_SlamInteStatus,
        _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any, ::
    SkyworthMsgs::SlamInteStatus *_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::SkyworthMsgs::SlamInteStatus>::insert (
      _tao_any,
      ::SkyworthMsgs::SlamInteStatus::_tao_any_destructor,
      ::SkyworthMsgs::_tc_SlamInteStatus,
      _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    ::SkyworthMsgs::SlamInteStatus *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const ::SkyworthMsgs::SlamInteStatus *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    const ::SkyworthMsgs::SlamInteStatus *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::SlamInteStatus>::extract (
        _tao_any,
        ::SkyworthMsgs::SlamInteStatus::_tao_any_destructor,
        ::SkyworthMsgs::_tc_SlamInteStatus,
        _tao_elem
      );
}
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

/// Copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  const SkyworthMsgs::SlamInteStatus &_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::SlamInteStatus>::insert_copy (
    _tao_any,
    SkyworthMsgs::SlamInteStatus::_tao_any_destructor,
    SkyworthMsgs::_tc_SlamInteStatus,
    _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  SkyworthMsgs::SlamInteStatus *_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::SlamInteStatus>::insert (
    _tao_any,
    SkyworthMsgs::SlamInteStatus::_tao_any_destructor,
    SkyworthMsgs::_tc_SlamInteStatus,
    _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  SkyworthMsgs::SlamInteStatus *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const SkyworthMsgs::SlamInteStatus *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  const SkyworthMsgs::SlamInteStatus *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T<SkyworthMsgs::SlamInteStatus>::extract (
      _tao_any,
      SkyworthMsgs::SlamInteStatus::_tao_any_destructor,
      SkyworthMsgs::_tc_SlamInteStatus,
      _tao_elem);
}
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_cs.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  /// Copying insertion.
  void operator<<= (
      ::CORBA::Any &_tao_any,
      const ::SkyworthMsgs::SlamInteCommand &_tao_elem)
  {
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::SlamInteCommand>::insert_copy (
        _tao_any,
        ::SkyworthMsgs::SlamInteCommand::_tao_any_destructor,
        ::SkyworthMsgs::_tc_SlamInteCommand,
        _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any, ::
    SkyworthMsgs::SlamInteCommand *_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::SkyworthMsgs::SlamInteCommand>::insert (
      _tao_any,
      ::SkyworthMsgs::SlamInteCommand::_tao_any_destructor,
      ::SkyworthMsgs::_tc_SlamInteCommand,
      _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    ::SkyworthMsgs::SlamInteCommand *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const ::SkyworthMsgs::SlamInteCommand *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    const ::SkyworthMsgs::SlamInteCommand *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::SlamInteCommand>::extract (
        _tao_any,
        ::SkyworthMsgs::SlamInteCommand::_tao_any_destructor,
        ::SkyworthMsgs::_tc_SlamInteCommand,
        _tao_elem
      );
}
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

/// Copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  const SkyworthMsgs::SlamInteCommand &_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::SlamInteCommand>::insert_copy (
    _tao_any,
    SkyworthMsgs::SlamInteCommand::_tao_any_destructor,
    SkyworthMsgs::_tc_SlamInteCommand,
    _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  SkyworthMsgs::SlamInteCommand *_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::SlamInteCommand>::insert (
    _tao_any,
    SkyworthMsgs::SlamInteCommand::_tao_any_destructor,
    SkyworthMsgs::_tc_SlamInteCommand,
    _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  SkyworthMsgs::SlamInteCommand *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const SkyworthMsgs::SlamInteCommand *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  const SkyworthMsgs::SlamInteCommand *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T<SkyworthMsgs::SlamInteCommand>::extract (
      _tao_any,
      SkyworthMsgs::SlamInteCommand::_tao_any_destructor,
      SkyworthMsgs::_tc_SlamInteCommand,
      _tao_elem);
}
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_cs.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  /// Copying insertion.
  void operator<<= (
      ::CORBA::Any &_tao_any,
      const ::SkyworthMsgs::PatrolStatus &_tao_elem)
  {
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::PatrolStatus>::insert_copy (
        _tao_any,
        ::SkyworthMsgs::PatrolStatus::_tao_any_destructor,
        ::SkyworthMsgs::_tc_PatrolStatus,
        _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any, ::
    SkyworthMsgs::PatrolStatus *_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::SkyworthMsgs::PatrolStatus>::insert (
      _tao_any,
      ::SkyworthMsgs::PatrolStatus::_tao_any_destructor,
      ::SkyworthMsgs::_tc_PatrolStatus,
      _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    ::SkyworthMsgs::PatrolStatus *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const ::SkyworthMsgs::PatrolStatus *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    const ::SkyworthMsgs::PatrolStatus *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::PatrolStatus>::extract (
        _tao_any,
        ::SkyworthMsgs::PatrolStatus::_tao_any_destructor,
        ::SkyworthMsgs::_tc_PatrolStatus,
        _tao_elem
      );
}
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

/// Copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  const SkyworthMsgs::PatrolStatus &_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::PatrolStatus>::insert_copy (
    _tao_any,
    SkyworthMsgs::PatrolStatus::_tao_any_destructor,
    SkyworthMsgs::_tc_PatrolStatus,
    _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  SkyworthMsgs::PatrolStatus *_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::PatrolStatus>::insert (
    _tao_any,
    SkyworthMsgs::PatrolStatus::_tao_any_destructor,
    SkyworthMsgs::_tc_PatrolStatus,
    _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  SkyworthMsgs::PatrolStatus *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const SkyworthMsgs::PatrolStatus *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  const SkyworthMsgs::PatrolStatus *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T<SkyworthMsgs::PatrolStatus>::extract (
      _tao_any,
      SkyworthMsgs::PatrolStatus::_tao_any_destructor,
      SkyworthMsgs::_tc_PatrolStatus,
      _tao_elem);
}
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_cs.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  /// Copying insertion.
  void operator<<= (
      ::CORBA::Any &_tao_any,
      const ::SkyworthMsgs::PatrolCommand &_tao_elem)
  {
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::PatrolCommand>::insert_copy (
        _tao_any,
        ::SkyworthMsgs::PatrolCommand::_tao_any_destructor,
        ::SkyworthMsgs::_tc_PatrolCommand,
        _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any, ::
    SkyworthMsgs::PatrolCommand *_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::SkyworthMsgs::PatrolCommand>::insert (
      _tao_any,
      ::SkyworthMsgs::PatrolCommand::_tao_any_destructor,
      ::SkyworthMsgs::_tc_PatrolCommand,
      _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    ::SkyworthMsgs::PatrolCommand *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const ::SkyworthMsgs::PatrolCommand *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    const ::SkyworthMsgs::PatrolCommand *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::PatrolCommand>::extract (
        _tao_any,
        ::SkyworthMsgs::PatrolCommand::_tao_any_destructor,
        ::SkyworthMsgs::_tc_PatrolCommand,
        _tao_elem
      );
}
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

/// Copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  const SkyworthMsgs::PatrolCommand &_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::PatrolCommand>::insert_copy (
    _tao_any,
    SkyworthMsgs::PatrolCommand::_tao_any_destructor,
    SkyworthMsgs::_tc_PatrolCommand,
    _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  SkyworthMsgs::PatrolCommand *_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::PatrolCommand>::insert (
    _tao_any,
    SkyworthMsgs::PatrolCommand::_tao_any_destructor,
    SkyworthMsgs::_tc_PatrolCommand,
    _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  SkyworthMsgs::PatrolCommand *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const SkyworthMsgs::PatrolCommand *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  const SkyworthMsgs::PatrolCommand *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T<SkyworthMsgs::PatrolCommand>::extract (
      _tao_any,
      SkyworthMsgs::PatrolCommand::_tao_any_destructor,
      SkyworthMsgs::_tc_PatrolCommand,
      _tao_elem);
}
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_cs.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  /// Copying insertion.
  void operator<<= (
      ::CORBA::Any &_tao_any,
      const ::SkyworthMsgs::CleanStatus &_tao_elem)
  {
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::CleanStatus>::insert_copy (
        _tao_any,
        ::SkyworthMsgs::CleanStatus::_tao_any_destructor,
        ::SkyworthMsgs::_tc_CleanStatus,
        _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any, ::
    SkyworthMsgs::CleanStatus *_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::SkyworthMsgs::CleanStatus>::insert (
      _tao_any,
      ::SkyworthMsgs::CleanStatus::_tao_any_destructor,
      ::SkyworthMsgs::_tc_CleanStatus,
      _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    ::SkyworthMsgs::CleanStatus *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const ::SkyworthMsgs::CleanStatus *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    const ::SkyworthMsgs::CleanStatus *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::CleanStatus>::extract (
        _tao_any,
        ::SkyworthMsgs::CleanStatus::_tao_any_destructor,
        ::SkyworthMsgs::_tc_CleanStatus,
        _tao_elem
      );
}
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

/// Copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  const SkyworthMsgs::CleanStatus &_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::CleanStatus>::insert_copy (
    _tao_any,
    SkyworthMsgs::CleanStatus::_tao_any_destructor,
    SkyworthMsgs::_tc_CleanStatus,
    _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  SkyworthMsgs::CleanStatus *_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::CleanStatus>::insert (
    _tao_any,
    SkyworthMsgs::CleanStatus::_tao_any_destructor,
    SkyworthMsgs::_tc_CleanStatus,
    _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  SkyworthMsgs::CleanStatus *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const SkyworthMsgs::CleanStatus *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  const SkyworthMsgs::CleanStatus *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T<SkyworthMsgs::CleanStatus>::extract (
      _tao_any,
      SkyworthMsgs::CleanStatus::_tao_any_destructor,
      SkyworthMsgs::_tc_CleanStatus,
      _tao_elem);
}
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_cs.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  /// Copying insertion.
  void operator<<= (
      ::CORBA::Any &_tao_any,
      const ::SkyworthMsgs::CleanCommand &_tao_elem)
  {
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::CleanCommand>::insert_copy (
        _tao_any,
        ::SkyworthMsgs::CleanCommand::_tao_any_destructor,
        ::SkyworthMsgs::_tc_CleanCommand,
        _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any, ::
    SkyworthMsgs::CleanCommand *_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::SkyworthMsgs::CleanCommand>::insert (
      _tao_any,
      ::SkyworthMsgs::CleanCommand::_tao_any_destructor,
      ::SkyworthMsgs::_tc_CleanCommand,
      _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    ::SkyworthMsgs::CleanCommand *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const ::SkyworthMsgs::CleanCommand *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    const ::SkyworthMsgs::CleanCommand *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::CleanCommand>::extract (
        _tao_any,
        ::SkyworthMsgs::CleanCommand::_tao_any_destructor,
        ::SkyworthMsgs::_tc_CleanCommand,
        _tao_elem
      );
}
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

/// Copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  const SkyworthMsgs::CleanCommand &_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::CleanCommand>::insert_copy (
    _tao_any,
    SkyworthMsgs::CleanCommand::_tao_any_destructor,
    SkyworthMsgs::_tc_CleanCommand,
    _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  SkyworthMsgs::CleanCommand *_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::CleanCommand>::insert (
    _tao_any,
    SkyworthMsgs::CleanCommand::_tao_any_destructor,
    SkyworthMsgs::_tc_CleanCommand,
    _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  SkyworthMsgs::CleanCommand *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const SkyworthMsgs::CleanCommand *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  const SkyworthMsgs::CleanCommand *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T<SkyworthMsgs::CleanCommand>::extract (
      _tao_any,
      SkyworthMsgs::CleanCommand::_tao_any_destructor,
      SkyworthMsgs::_tc_CleanCommand,
      _tao_elem);
}
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_array/any_op_cs.cpp:40


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

void operator<<= (
    ::CORBA::Any &_tao_any,
    const SkyworthMsgs::MapPicData_forany &_tao_elem
  )
{
  TAO::Any_Array_Impl_T<
      SkyworthMsgs::MapPicData_slice,
      SkyworthMsgs::MapPicData_forany
    >::insert (
        _tao_any,
        SkyworthMsgs::MapPicData_forany::_tao_any_destructor,
        SkyworthMsgs::_tc_MapPicData,
        _tao_elem.nocopy ()
          ? _tao_elem.ptr ()
          : SkyworthMsgs::MapPicData_dup (_tao_elem.in ())
      );
}

::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::MapPicData_forany &_tao_elem
  )
{
  return
    TAO::Any_Array_Impl_T<
        SkyworthMsgs::MapPicData_slice,
        SkyworthMsgs::MapPicData_forany
      >::extract (
          _tao_any,
          SkyworthMsgs::MapPicData_forany::_tao_any_destructor,
          SkyworthMsgs::_tc_MapPicData,
          _tao_elem.out ()
        );
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_cs.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  /// Copying insertion.
  void operator<<= (
      ::CORBA::Any &_tao_any,
      const ::SkyworthMsgs::MapLiveData &_tao_elem)
  {
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::MapLiveData>::insert_copy (
        _tao_any,
        ::SkyworthMsgs::MapLiveData::_tao_any_destructor,
        ::SkyworthMsgs::_tc_MapLiveData,
        _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any, ::
    SkyworthMsgs::MapLiveData *_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::SkyworthMsgs::MapLiveData>::insert (
      _tao_any,
      ::SkyworthMsgs::MapLiveData::_tao_any_destructor,
      ::SkyworthMsgs::_tc_MapLiveData,
      _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    ::SkyworthMsgs::MapLiveData *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const ::SkyworthMsgs::MapLiveData *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    const ::SkyworthMsgs::MapLiveData *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::MapLiveData>::extract (
        _tao_any,
        ::SkyworthMsgs::MapLiveData::_tao_any_destructor,
        ::SkyworthMsgs::_tc_MapLiveData,
        _tao_elem
      );
}
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

/// Copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  const SkyworthMsgs::MapLiveData &_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::MapLiveData>::insert_copy (
    _tao_any,
    SkyworthMsgs::MapLiveData::_tao_any_destructor,
    SkyworthMsgs::_tc_MapLiveData,
    _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  SkyworthMsgs::MapLiveData *_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::MapLiveData>::insert (
    _tao_any,
    SkyworthMsgs::MapLiveData::_tao_any_destructor,
    SkyworthMsgs::_tc_MapLiveData,
    _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  SkyworthMsgs::MapLiveData *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const SkyworthMsgs::MapLiveData *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  const SkyworthMsgs::MapLiveData *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T<SkyworthMsgs::MapLiveData>::extract (
      _tao_any,
      SkyworthMsgs::MapLiveData::_tao_any_destructor,
      SkyworthMsgs::_tc_MapLiveData,
      _tao_elem);
}
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_cs.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  /// Copying insertion.
  void operator<<= (
      ::CORBA::Any &_tao_any,
      const ::SkyworthMsgs::SlamManageStatus &_tao_elem)
  {
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::SlamManageStatus>::insert_copy (
        _tao_any,
        ::SkyworthMsgs::SlamManageStatus::_tao_any_destructor,
        ::SkyworthMsgs::_tc_SlamManageStatus,
        _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any, ::
    SkyworthMsgs::SlamManageStatus *_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::SkyworthMsgs::SlamManageStatus>::insert (
      _tao_any,
      ::SkyworthMsgs::SlamManageStatus::_tao_any_destructor,
      ::SkyworthMsgs::_tc_SlamManageStatus,
      _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    ::SkyworthMsgs::SlamManageStatus *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const ::SkyworthMsgs::SlamManageStatus *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    const ::SkyworthMsgs::SlamManageStatus *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::SlamManageStatus>::extract (
        _tao_any,
        ::SkyworthMsgs::SlamManageStatus::_tao_any_destructor,
        ::SkyworthMsgs::_tc_SlamManageStatus,
        _tao_elem
      );
}
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

/// Copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  const SkyworthMsgs::SlamManageStatus &_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::SlamManageStatus>::insert_copy (
    _tao_any,
    SkyworthMsgs::SlamManageStatus::_tao_any_destructor,
    SkyworthMsgs::_tc_SlamManageStatus,
    _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  SkyworthMsgs::SlamManageStatus *_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::SlamManageStatus>::insert (
    _tao_any,
    SkyworthMsgs::SlamManageStatus::_tao_any_destructor,
    SkyworthMsgs::_tc_SlamManageStatus,
    _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  SkyworthMsgs::SlamManageStatus *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const SkyworthMsgs::SlamManageStatus *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  const SkyworthMsgs::SlamManageStatus *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T<SkyworthMsgs::SlamManageStatus>::extract (
      _tao_any,
      SkyworthMsgs::SlamManageStatus::_tao_any_destructor,
      SkyworthMsgs::_tc_SlamManageStatus,
      _tao_elem);
}
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_cs.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  /// Copying insertion.
  void operator<<= (
      ::CORBA::Any &_tao_any,
      const ::SkyworthMsgs::SlamManageCmd &_tao_elem)
  {
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::SlamManageCmd>::insert_copy (
        _tao_any,
        ::SkyworthMsgs::SlamManageCmd::_tao_any_destructor,
        ::SkyworthMsgs::_tc_SlamManageCmd,
        _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any, ::
    SkyworthMsgs::SlamManageCmd *_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::SkyworthMsgs::SlamManageCmd>::insert (
      _tao_any,
      ::SkyworthMsgs::SlamManageCmd::_tao_any_destructor,
      ::SkyworthMsgs::_tc_SlamManageCmd,
      _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    ::SkyworthMsgs::SlamManageCmd *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const ::SkyworthMsgs::SlamManageCmd *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    const ::SkyworthMsgs::SlamManageCmd *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::SlamManageCmd>::extract (
        _tao_any,
        ::SkyworthMsgs::SlamManageCmd::_tao_any_destructor,
        ::SkyworthMsgs::_tc_SlamManageCmd,
        _tao_elem
      );
}
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

/// Copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  const SkyworthMsgs::SlamManageCmd &_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::SlamManageCmd>::insert_copy (
    _tao_any,
    SkyworthMsgs::SlamManageCmd::_tao_any_destructor,
    SkyworthMsgs::_tc_SlamManageCmd,
    _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  SkyworthMsgs::SlamManageCmd *_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::SlamManageCmd>::insert (
    _tao_any,
    SkyworthMsgs::SlamManageCmd::_tao_any_destructor,
    SkyworthMsgs::_tc_SlamManageCmd,
    _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  SkyworthMsgs::SlamManageCmd *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const SkyworthMsgs::SlamManageCmd *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  const SkyworthMsgs::SlamManageCmd *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T<SkyworthMsgs::SlamManageCmd>::extract (
      _tao_any,
      SkyworthMsgs::SlamManageCmd::_tao_any_destructor,
      SkyworthMsgs::_tc_SlamManageCmd,
      _tao_elem);
}
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_cs.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  /// Copying insertion.
  void operator<<= (
      ::CORBA::Any &_tao_any,
      const ::SkyworthMsgs::PatrolManageStatus &_tao_elem)
  {
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::PatrolManageStatus>::insert_copy (
        _tao_any,
        ::SkyworthMsgs::PatrolManageStatus::_tao_any_destructor,
        ::SkyworthMsgs::_tc_PatrolManageStatus,
        _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any, ::
    SkyworthMsgs::PatrolManageStatus *_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::SkyworthMsgs::PatrolManageStatus>::insert (
      _tao_any,
      ::SkyworthMsgs::PatrolManageStatus::_tao_any_destructor,
      ::SkyworthMsgs::_tc_PatrolManageStatus,
      _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    ::SkyworthMsgs::PatrolManageStatus *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const ::SkyworthMsgs::PatrolManageStatus *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    const ::SkyworthMsgs::PatrolManageStatus *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::PatrolManageStatus>::extract (
        _tao_any,
        ::SkyworthMsgs::PatrolManageStatus::_tao_any_destructor,
        ::SkyworthMsgs::_tc_PatrolManageStatus,
        _tao_elem
      );
}
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

/// Copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  const SkyworthMsgs::PatrolManageStatus &_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::PatrolManageStatus>::insert_copy (
    _tao_any,
    SkyworthMsgs::PatrolManageStatus::_tao_any_destructor,
    SkyworthMsgs::_tc_PatrolManageStatus,
    _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  SkyworthMsgs::PatrolManageStatus *_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::PatrolManageStatus>::insert (
    _tao_any,
    SkyworthMsgs::PatrolManageStatus::_tao_any_destructor,
    SkyworthMsgs::_tc_PatrolManageStatus,
    _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  SkyworthMsgs::PatrolManageStatus *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const SkyworthMsgs::PatrolManageStatus *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  const SkyworthMsgs::PatrolManageStatus *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T<SkyworthMsgs::PatrolManageStatus>::extract (
      _tao_any,
      SkyworthMsgs::PatrolManageStatus::_tao_any_destructor,
      SkyworthMsgs::_tc_PatrolManageStatus,
      _tao_elem);
}
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_cs.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  /// Copying insertion.
  void operator<<= (
      ::CORBA::Any &_tao_any,
      const ::SkyworthMsgs::PatrolManageCmd &_tao_elem)
  {
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::PatrolManageCmd>::insert_copy (
        _tao_any,
        ::SkyworthMsgs::PatrolManageCmd::_tao_any_destructor,
        ::SkyworthMsgs::_tc_PatrolManageCmd,
        _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any, ::
    SkyworthMsgs::PatrolManageCmd *_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::SkyworthMsgs::PatrolManageCmd>::insert (
      _tao_any,
      ::SkyworthMsgs::PatrolManageCmd::_tao_any_destructor,
      ::SkyworthMsgs::_tc_PatrolManageCmd,
      _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    ::SkyworthMsgs::PatrolManageCmd *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const ::SkyworthMsgs::PatrolManageCmd *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    const ::SkyworthMsgs::PatrolManageCmd *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::PatrolManageCmd>::extract (
        _tao_any,
        ::SkyworthMsgs::PatrolManageCmd::_tao_any_destructor,
        ::SkyworthMsgs::_tc_PatrolManageCmd,
        _tao_elem
      );
}
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

/// Copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  const SkyworthMsgs::PatrolManageCmd &_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::PatrolManageCmd>::insert_copy (
    _tao_any,
    SkyworthMsgs::PatrolManageCmd::_tao_any_destructor,
    SkyworthMsgs::_tc_PatrolManageCmd,
    _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  SkyworthMsgs::PatrolManageCmd *_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::PatrolManageCmd>::insert (
    _tao_any,
    SkyworthMsgs::PatrolManageCmd::_tao_any_destructor,
    SkyworthMsgs::_tc_PatrolManageCmd,
    _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  SkyworthMsgs::PatrolManageCmd *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const SkyworthMsgs::PatrolManageCmd *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  const SkyworthMsgs::PatrolManageCmd *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T<SkyworthMsgs::PatrolManageCmd>::extract (
      _tao_any,
      SkyworthMsgs::PatrolManageCmd::_tao_any_destructor,
      SkyworthMsgs::_tc_PatrolManageCmd,
      _tao_elem);
}
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_cs.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  /// Copying insertion.
  void operator<<= (
      ::CORBA::Any &_tao_any,
      const ::SkyworthMsgs::CleanManageStatus &_tao_elem)
  {
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::CleanManageStatus>::insert_copy (
        _tao_any,
        ::SkyworthMsgs::CleanManageStatus::_tao_any_destructor,
        ::SkyworthMsgs::_tc_CleanManageStatus,
        _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any, ::
    SkyworthMsgs::CleanManageStatus *_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::SkyworthMsgs::CleanManageStatus>::insert (
      _tao_any,
      ::SkyworthMsgs::CleanManageStatus::_tao_any_destructor,
      ::SkyworthMsgs::_tc_CleanManageStatus,
      _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    ::SkyworthMsgs::CleanManageStatus *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const ::SkyworthMsgs::CleanManageStatus *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    const ::SkyworthMsgs::CleanManageStatus *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::CleanManageStatus>::extract (
        _tao_any,
        ::SkyworthMsgs::CleanManageStatus::_tao_any_destructor,
        ::SkyworthMsgs::_tc_CleanManageStatus,
        _tao_elem
      );
}
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

/// Copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  const SkyworthMsgs::CleanManageStatus &_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::CleanManageStatus>::insert_copy (
    _tao_any,
    SkyworthMsgs::CleanManageStatus::_tao_any_destructor,
    SkyworthMsgs::_tc_CleanManageStatus,
    _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  SkyworthMsgs::CleanManageStatus *_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::CleanManageStatus>::insert (
    _tao_any,
    SkyworthMsgs::CleanManageStatus::_tao_any_destructor,
    SkyworthMsgs::_tc_CleanManageStatus,
    _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  SkyworthMsgs::CleanManageStatus *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const SkyworthMsgs::CleanManageStatus *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  const SkyworthMsgs::CleanManageStatus *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T<SkyworthMsgs::CleanManageStatus>::extract (
      _tao_any,
      SkyworthMsgs::CleanManageStatus::_tao_any_destructor,
      SkyworthMsgs::_tc_CleanManageStatus,
      _tao_elem);
}
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_cs.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  /// Copying insertion.
  void operator<<= (
      ::CORBA::Any &_tao_any,
      const ::SkyworthMsgs::CleanManageCmd &_tao_elem)
  {
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::CleanManageCmd>::insert_copy (
        _tao_any,
        ::SkyworthMsgs::CleanManageCmd::_tao_any_destructor,
        ::SkyworthMsgs::_tc_CleanManageCmd,
        _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any, ::
    SkyworthMsgs::CleanManageCmd *_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::SkyworthMsgs::CleanManageCmd>::insert (
      _tao_any,
      ::SkyworthMsgs::CleanManageCmd::_tao_any_destructor,
      ::SkyworthMsgs::_tc_CleanManageCmd,
      _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    ::SkyworthMsgs::CleanManageCmd *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const ::SkyworthMsgs::CleanManageCmd *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    const ::SkyworthMsgs::CleanManageCmd *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::CleanManageCmd>::extract (
        _tao_any,
        ::SkyworthMsgs::CleanManageCmd::_tao_any_destructor,
        ::SkyworthMsgs::_tc_CleanManageCmd,
        _tao_elem
      );
}
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

/// Copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  const SkyworthMsgs::CleanManageCmd &_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::CleanManageCmd>::insert_copy (
    _tao_any,
    SkyworthMsgs::CleanManageCmd::_tao_any_destructor,
    SkyworthMsgs::_tc_CleanManageCmd,
    _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  SkyworthMsgs::CleanManageCmd *_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::CleanManageCmd>::insert (
    _tao_any,
    SkyworthMsgs::CleanManageCmd::_tao_any_destructor,
    SkyworthMsgs::_tc_CleanManageCmd,
    _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  SkyworthMsgs::CleanManageCmd *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const SkyworthMsgs::CleanManageCmd *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  const SkyworthMsgs::CleanManageCmd *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T<SkyworthMsgs::CleanManageCmd>::extract (
      _tao_any,
      SkyworthMsgs::CleanManageCmd::_tao_any_destructor,
      SkyworthMsgs::_tc_CleanManageCmd,
      _tao_elem);
}
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_cs.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  /// Copying insertion.
  void operator<<= (
      ::CORBA::Any &_tao_any,
      const ::SkyworthMsgs::MapLiveCmd &_tao_elem)
  {
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::MapLiveCmd>::insert_copy (
        _tao_any,
        ::SkyworthMsgs::MapLiveCmd::_tao_any_destructor,
        ::SkyworthMsgs::_tc_MapLiveCmd,
        _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any, ::
    SkyworthMsgs::MapLiveCmd *_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::SkyworthMsgs::MapLiveCmd>::insert (
      _tao_any,
      ::SkyworthMsgs::MapLiveCmd::_tao_any_destructor,
      ::SkyworthMsgs::_tc_MapLiveCmd,
      _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    ::SkyworthMsgs::MapLiveCmd *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const ::SkyworthMsgs::MapLiveCmd *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    const ::SkyworthMsgs::MapLiveCmd *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::MapLiveCmd>::extract (
        _tao_any,
        ::SkyworthMsgs::MapLiveCmd::_tao_any_destructor,
        ::SkyworthMsgs::_tc_MapLiveCmd,
        _tao_elem
      );
}
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

/// Copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  const SkyworthMsgs::MapLiveCmd &_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::MapLiveCmd>::insert_copy (
    _tao_any,
    SkyworthMsgs::MapLiveCmd::_tao_any_destructor,
    SkyworthMsgs::_tc_MapLiveCmd,
    _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  SkyworthMsgs::MapLiveCmd *_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::MapLiveCmd>::insert (
    _tao_any,
    SkyworthMsgs::MapLiveCmd::_tao_any_destructor,
    SkyworthMsgs::_tc_MapLiveCmd,
    _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  SkyworthMsgs::MapLiveCmd *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const SkyworthMsgs::MapLiveCmd *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  const SkyworthMsgs::MapLiveCmd *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T<SkyworthMsgs::MapLiveCmd>::extract (
      _tao_any,
      SkyworthMsgs::MapLiveCmd::_tao_any_destructor,
      SkyworthMsgs::_tc_MapLiveCmd,
      _tao_elem);
}
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_cs.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  /// Copying insertion.
  void operator<<= (
      ::CORBA::Any &_tao_any,
      const ::SkyworthMsgs::CleanRouterStatus &_tao_elem)
  {
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::CleanRouterStatus>::insert_copy (
        _tao_any,
        ::SkyworthMsgs::CleanRouterStatus::_tao_any_destructor,
        ::SkyworthMsgs::_tc_CleanRouterStatus,
        _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any, ::
    SkyworthMsgs::CleanRouterStatus *_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::SkyworthMsgs::CleanRouterStatus>::insert (
      _tao_any,
      ::SkyworthMsgs::CleanRouterStatus::_tao_any_destructor,
      ::SkyworthMsgs::_tc_CleanRouterStatus,
      _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    ::SkyworthMsgs::CleanRouterStatus *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const ::SkyworthMsgs::CleanRouterStatus *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    const ::SkyworthMsgs::CleanRouterStatus *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::CleanRouterStatus>::extract (
        _tao_any,
        ::SkyworthMsgs::CleanRouterStatus::_tao_any_destructor,
        ::SkyworthMsgs::_tc_CleanRouterStatus,
        _tao_elem
      );
}
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

/// Copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  const SkyworthMsgs::CleanRouterStatus &_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::CleanRouterStatus>::insert_copy (
    _tao_any,
    SkyworthMsgs::CleanRouterStatus::_tao_any_destructor,
    SkyworthMsgs::_tc_CleanRouterStatus,
    _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  SkyworthMsgs::CleanRouterStatus *_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::CleanRouterStatus>::insert (
    _tao_any,
    SkyworthMsgs::CleanRouterStatus::_tao_any_destructor,
    SkyworthMsgs::_tc_CleanRouterStatus,
    _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  SkyworthMsgs::CleanRouterStatus *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const SkyworthMsgs::CleanRouterStatus *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  const SkyworthMsgs::CleanRouterStatus *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T<SkyworthMsgs::CleanRouterStatus>::extract (
      _tao_any,
      SkyworthMsgs::CleanRouterStatus::_tao_any_destructor,
      SkyworthMsgs::_tc_CleanRouterStatus,
      _tao_elem);
}
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_cs.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  /// Copying insertion.
  void operator<<= (
      ::CORBA::Any &_tao_any,
      const ::SkyworthMsgs::CleanRouterCmd &_tao_elem)
  {
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::CleanRouterCmd>::insert_copy (
        _tao_any,
        ::SkyworthMsgs::CleanRouterCmd::_tao_any_destructor,
        ::SkyworthMsgs::_tc_CleanRouterCmd,
        _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any, ::
    SkyworthMsgs::CleanRouterCmd *_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::SkyworthMsgs::CleanRouterCmd>::insert (
      _tao_any,
      ::SkyworthMsgs::CleanRouterCmd::_tao_any_destructor,
      ::SkyworthMsgs::_tc_CleanRouterCmd,
      _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    ::SkyworthMsgs::CleanRouterCmd *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const ::SkyworthMsgs::CleanRouterCmd *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    const ::SkyworthMsgs::CleanRouterCmd *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T< ::SkyworthMsgs::CleanRouterCmd>::extract (
        _tao_any,
        ::SkyworthMsgs::CleanRouterCmd::_tao_any_destructor,
        ::SkyworthMsgs::_tc_CleanRouterCmd,
        _tao_elem
      );
}
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

/// Copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  const SkyworthMsgs::CleanRouterCmd &_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::CleanRouterCmd>::insert_copy (
    _tao_any,
    SkyworthMsgs::CleanRouterCmd::_tao_any_destructor,
    SkyworthMsgs::_tc_CleanRouterCmd,
    _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  SkyworthMsgs::CleanRouterCmd *_tao_elem)
{
  TAO::Any_Dual_Impl_T<SkyworthMsgs::CleanRouterCmd>::insert (
    _tao_any,
    SkyworthMsgs::CleanRouterCmd::_tao_any_destructor,
    SkyworthMsgs::_tc_CleanRouterCmd,
    _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  SkyworthMsgs::CleanRouterCmd *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const SkyworthMsgs::CleanRouterCmd *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  const SkyworthMsgs::CleanRouterCmd *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T<SkyworthMsgs::CleanRouterCmd>::extract (
      _tao_any,
      SkyworthMsgs::CleanRouterCmd::_tao_any_destructor,
      SkyworthMsgs::_tc_CleanRouterCmd,
      _tao_elem);
}
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const SkyworthMsgs::EdgePolorPoint &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.angle) &&
    (strm << _tao_aggregate.distance);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    SkyworthMsgs::EdgePolorPoint &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.angle) &&
    (strm >> _tao_aggregate.distance);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const SkyworthMsgs::EdgeXyzPoint &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.x) &&
    (strm << _tao_aggregate.y) &&
    (strm << _tao_aggregate.z);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    SkyworthMsgs::EdgeXyzPoint &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.x) &&
    (strm >> _tao_aggregate.y) &&
    (strm >> _tao_aggregate.z);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const SkyworthMsgs::DestXyzPoint &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.x) &&
    (strm << _tao_aggregate.y) &&
    (strm << _tao_aggregate.z) &&
    (strm << _tao_aggregate.angle);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    SkyworthMsgs::DestXyzPoint &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.x) &&
    (strm >> _tao_aggregate.y) &&
    (strm >> _tao_aggregate.z) &&
    (strm >> _tao_aggregate.angle);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_cs.cpp:166


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const SkyworthMsgs::EdgePolorPointList_forany &_tao_array)
{
  CORBA::Boolean _tao_marshal_flag = true;
  
  for ( ::CORBA::ULong i0 = 0; i0 < 360 && _tao_marshal_flag; ++i0)
    {
      _tao_marshal_flag = (strm << _tao_array [i0]);
    }

  return _tao_marshal_flag;
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    SkyworthMsgs::EdgePolorPointList_forany &_tao_array)
{
  CORBA::Boolean _tao_marshal_flag = true;
  
  for ( ::CORBA::ULong i0 = 0; i0 < 360 && _tao_marshal_flag; ++i0)
    {
      _tao_marshal_flag = (strm >> _tao_array [i0]);
    }

  return _tao_marshal_flag;
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const SkyworthMsgs::DepthEdgeData &_tao_aggregate)
{
  SkyworthMsgs::EdgePolorPointList_forany _tao_aggregate_pointList
      #if defined __IBMCPP__ && __IBMCPP__ <= 800
      ((SkyworthMsgs::EdgePolorPointList_slice*) (
      #else
      (const_cast<
          SkyworthMsgs::EdgePolorPointList_slice*> (
      #endif
          _tao_aggregate.pointList
        )
    );
  return
    (strm << _tao_aggregate_pointList);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    SkyworthMsgs::DepthEdgeData &_tao_aggregate)
{
  SkyworthMsgs::EdgePolorPointList_forany _tao_aggregate_pointList
      #if defined __IBMCPP__ && __IBMCPP__ <= 800
      ((SkyworthMsgs::EdgePolorPointList_slice*) (
      #else
      (const_cast<
          SkyworthMsgs::EdgePolorPointList_slice*> (
      #endif
          _tao_aggregate.pointList
        )
    );
  return
    (strm >> _tao_aggregate_pointList);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const SkyworthMsgs::UltraTouchData &_tao_aggregate)
{
  SkyworthMsgs::EdgePolorPointList_forany _tao_aggregate_pointList
      #if defined __IBMCPP__ && __IBMCPP__ <= 800
      ((SkyworthMsgs::EdgePolorPointList_slice*) (
      #else
      (const_cast<
          SkyworthMsgs::EdgePolorPointList_slice*> (
      #endif
          _tao_aggregate.pointList
        )
    );
  return
    (strm << _tao_aggregate_pointList);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    SkyworthMsgs::UltraTouchData &_tao_aggregate)
{
  SkyworthMsgs::EdgePolorPointList_forany _tao_aggregate_pointList
      #if defined __IBMCPP__ && __IBMCPP__ <= 800
      ((SkyworthMsgs::EdgePolorPointList_slice*) (
      #else
      (const_cast<
          SkyworthMsgs::EdgePolorPointList_slice*> (
      #endif
          _tao_aggregate.pointList
        )
    );
  return
    (strm >> _tao_aggregate_pointList);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_cs.cpp:166


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const SkyworthMsgs::RgbPicData_forany &_tao_array)
{
  return
    strm.write_char_array (
        reinterpret_cast <const ACE_CDR::Char *> (_tao_array.in ()),
        230400);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    SkyworthMsgs::RgbPicData_forany &_tao_array)
{
  return
    strm.read_char_array (
        reinterpret_cast <ACE_CDR::Char *> (_tao_array.out ()),
        230400);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const SkyworthMsgs::RgbPic &_tao_aggregate)
{
  SkyworthMsgs::RgbPicData_forany _tao_aggregate_data
      #if defined __IBMCPP__ && __IBMCPP__ <= 800
      ((SkyworthMsgs::RgbPicData_slice*) (
      #else
      (const_cast<
          SkyworthMsgs::RgbPicData_slice*> (
      #endif
          _tao_aggregate.data
        )
    );
  return
    (strm << _tao_aggregate_data);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    SkyworthMsgs::RgbPic &_tao_aggregate)
{
  SkyworthMsgs::RgbPicData_forany _tao_aggregate_data
      #if defined __IBMCPP__ && __IBMCPP__ <= 800
      ((SkyworthMsgs::RgbPicData_slice*) (
      #else
      (const_cast<
          SkyworthMsgs::RgbPicData_slice*> (
      #endif
          _tao_aggregate.data
        )
    );
  return
    (strm >> _tao_aggregate_data);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_cs.cpp:166


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const SkyworthMsgs::EdgeXyzPointList_forany &_tao_array)
{
  CORBA::Boolean _tao_marshal_flag = true;
  
  for ( ::CORBA::ULong i0 = 0; i0 < 360 && _tao_marshal_flag; ++i0)
    {
      _tao_marshal_flag = (strm << _tao_array [i0]);
    }

  return _tao_marshal_flag;
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    SkyworthMsgs::EdgeXyzPointList_forany &_tao_array)
{
  CORBA::Boolean _tao_marshal_flag = true;
  
  for ( ::CORBA::ULong i0 = 0; i0 < 360 && _tao_marshal_flag; ++i0)
    {
      _tao_marshal_flag = (strm >> _tao_array [i0]);
    }

  return _tao_marshal_flag;
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const SkyworthMsgs::ObsData &_tao_aggregate)
{
  SkyworthMsgs::EdgeXyzPointList_forany _tao_aggregate_pointList
      #if defined __IBMCPP__ && __IBMCPP__ <= 800
      ((SkyworthMsgs::EdgeXyzPointList_slice*) (
      #else
      (const_cast<
          SkyworthMsgs::EdgeXyzPointList_slice*> (
      #endif
          _tao_aggregate.pointList
        )
    );
  return
    (strm << _tao_aggregate_pointList);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    SkyworthMsgs::ObsData &_tao_aggregate)
{
  SkyworthMsgs::EdgeXyzPointList_forany _tao_aggregate_pointList
      #if defined __IBMCPP__ && __IBMCPP__ <= 800
      ((SkyworthMsgs::EdgeXyzPointList_slice*) (
      #else
      (const_cast<
          SkyworthMsgs::EdgeXyzPointList_slice*> (
      #endif
          _tao_aggregate.pointList
        )
    );
  return
    (strm >> _tao_aggregate_pointList);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const SkyworthMsgs::CleanerStatus &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.status);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    SkyworthMsgs::CleanerStatus &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.status);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const SkyworthMsgs::CleanerCommand &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.cleanType.in ()) &&
    (strm << ::ACE_OutputCDR::from_char (_tao_aggregate.cleanCommand));
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    SkyworthMsgs::CleanerCommand &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.cleanType.out ()) &&
    (strm >> ::ACE_InputCDR::to_char (_tao_aggregate.cleanCommand));
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const SkyworthMsgs::ElecQuantity &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.batteryType.in ()) &&
    (strm << _tao_aggregate.quantity);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    SkyworthMsgs::ElecQuantity &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.batteryType.out ()) &&
    (strm >> _tao_aggregate.quantity);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const SkyworthMsgs::EmgStop &_tao_aggregate)
{
  return
    (strm << ::ACE_OutputCDR::from_char (_tao_aggregate.emgStopCommand));
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    SkyworthMsgs::EmgStop &_tao_aggregate)
{
  return
    (strm >> ::ACE_InputCDR::to_char (_tao_aggregate.emgStopCommand));
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const SkyworthMsgs::SlamStatus &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.statusType.in ()) &&
    (strm << _tao_aggregate.status);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    SkyworthMsgs::SlamStatus &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.statusType.out ()) &&
    (strm >> _tao_aggregate.status);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const SkyworthMsgs::SlamCommand &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.commandType.in ()) &&
    (strm << ::ACE_OutputCDR::from_char (_tao_aggregate.command)) &&
    (strm << _tao_aggregate.distance) &&
    (strm << _tao_aggregate.angle) &&
    (strm << _tao_aggregate.destPoint);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    SkyworthMsgs::SlamCommand &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.commandType.out ()) &&
    (strm >> ::ACE_InputCDR::to_char (_tao_aggregate.command)) &&
    (strm >> _tao_aggregate.distance) &&
    (strm >> _tao_aggregate.angle) &&
    (strm >> _tao_aggregate.destPoint);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const SkyworthMsgs::SlamInteStatus &_tao_aggregate)
{
  SkyworthMsgs::EdgeXyzPointList_forany _tao_aggregate_obsData
      #if defined __IBMCPP__ && __IBMCPP__ <= 800
      ((SkyworthMsgs::EdgeXyzPointList_slice*) (
      #else
      (const_cast<
          SkyworthMsgs::EdgeXyzPointList_slice*> (
      #endif
          _tao_aggregate.obsData
        )
    );
  return
    (strm << _tao_aggregate.statusType.in ()) &&
    (strm << ::ACE_OutputCDR::from_char (_tao_aggregate.status)) &&
    (strm << _tao_aggregate.machingDegree) &&
    (strm << _tao_aggregate_obsData);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    SkyworthMsgs::SlamInteStatus &_tao_aggregate)
{
  SkyworthMsgs::EdgeXyzPointList_forany _tao_aggregate_obsData
      #if defined __IBMCPP__ && __IBMCPP__ <= 800
      ((SkyworthMsgs::EdgeXyzPointList_slice*) (
      #else
      (const_cast<
          SkyworthMsgs::EdgeXyzPointList_slice*> (
      #endif
          _tao_aggregate.obsData
        )
    );
  return
    (strm >> _tao_aggregate.statusType.out ()) &&
    (strm >> ::ACE_InputCDR::to_char (_tao_aggregate.status)) &&
    (strm >> _tao_aggregate.machingDegree) &&
    (strm >> _tao_aggregate_obsData);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const SkyworthMsgs::SlamInteCommand &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.commandType.in ()) &&
    (strm << ::ACE_OutputCDR::from_char (_tao_aggregate.command)) &&
    (strm << _tao_aggregate.destPoint);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    SkyworthMsgs::SlamInteCommand &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.commandType.out ()) &&
    (strm >> ::ACE_InputCDR::to_char (_tao_aggregate.command)) &&
    (strm >> _tao_aggregate.destPoint);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const SkyworthMsgs::PatrolStatus &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.statusType.in ()) &&
    (strm << ::ACE_OutputCDR::from_char (_tao_aggregate.status));
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    SkyworthMsgs::PatrolStatus &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.statusType.out ()) &&
    (strm >> ::ACE_InputCDR::to_char (_tao_aggregate.status));
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const SkyworthMsgs::PatrolCommand &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.commandType.in ()) &&
    (strm << ::ACE_OutputCDR::from_char (_tao_aggregate.command)) &&
    (strm << _tao_aggregate.destPoint);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    SkyworthMsgs::PatrolCommand &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.commandType.out ()) &&
    (strm >> ::ACE_InputCDR::to_char (_tao_aggregate.command)) &&
    (strm >> _tao_aggregate.destPoint);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const SkyworthMsgs::CleanStatus &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.statusType.in ()) &&
    (strm << ::ACE_OutputCDR::from_char (_tao_aggregate.status));
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    SkyworthMsgs::CleanStatus &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.statusType.out ()) &&
    (strm >> ::ACE_InputCDR::to_char (_tao_aggregate.status));
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const SkyworthMsgs::CleanCommand &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.commandType.in ()) &&
    (strm << ::ACE_OutputCDR::from_char (_tao_aggregate.command)) &&
    (strm << _tao_aggregate.distance) &&
    (strm << _tao_aggregate.angle);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    SkyworthMsgs::CleanCommand &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.commandType.out ()) &&
    (strm >> ::ACE_InputCDR::to_char (_tao_aggregate.command)) &&
    (strm >> _tao_aggregate.distance) &&
    (strm >> _tao_aggregate.angle);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_cs.cpp:166


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const SkyworthMsgs::MapPicData_forany &_tao_array)
{
  return
    strm.write_char_array (
        reinterpret_cast <const ACE_CDR::Char *> (_tao_array.in ()),
        230400);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    SkyworthMsgs::MapPicData_forany &_tao_array)
{
  return
    strm.read_char_array (
        reinterpret_cast <ACE_CDR::Char *> (_tao_array.out ()),
        230400);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const SkyworthMsgs::MapLiveData &_tao_aggregate)
{
  SkyworthMsgs::MapPicData_forany _tao_aggregate_data
      #if defined __IBMCPP__ && __IBMCPP__ <= 800
      ((SkyworthMsgs::MapPicData_slice*) (
      #else
      (const_cast<
          SkyworthMsgs::MapPicData_slice*> (
      #endif
          _tao_aggregate.data
        )
    );
  return
    (strm << _tao_aggregate_data);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    SkyworthMsgs::MapLiveData &_tao_aggregate)
{
  SkyworthMsgs::MapPicData_forany _tao_aggregate_data
      #if defined __IBMCPP__ && __IBMCPP__ <= 800
      ((SkyworthMsgs::MapPicData_slice*) (
      #else
      (const_cast<
          SkyworthMsgs::MapPicData_slice*> (
      #endif
          _tao_aggregate.data
        )
    );
  return
    (strm >> _tao_aggregate_data);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const SkyworthMsgs::SlamManageStatus &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.statusType.in ()) &&
    (strm << ::ACE_OutputCDR::from_char (_tao_aggregate.status));
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    SkyworthMsgs::SlamManageStatus &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.statusType.out ()) &&
    (strm >> ::ACE_InputCDR::to_char (_tao_aggregate.status));
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const SkyworthMsgs::SlamManageCmd &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.commandType.in ()) &&
    (strm << ::ACE_OutputCDR::from_char (_tao_aggregate.command)) &&
    (strm << _tao_aggregate.distance) &&
    (strm << _tao_aggregate.angle) &&
    (strm << _tao_aggregate.destPoint);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    SkyworthMsgs::SlamManageCmd &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.commandType.out ()) &&
    (strm >> ::ACE_InputCDR::to_char (_tao_aggregate.command)) &&
    (strm >> _tao_aggregate.distance) &&
    (strm >> _tao_aggregate.angle) &&
    (strm >> _tao_aggregate.destPoint);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const SkyworthMsgs::PatrolManageStatus &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.area.in ()) &&
    (strm << _tao_aggregate.statusType.in ()) &&
    (strm << ::ACE_OutputCDR::from_char (_tao_aggregate.status));
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    SkyworthMsgs::PatrolManageStatus &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.area.out ()) &&
    (strm >> _tao_aggregate.statusType.out ()) &&
    (strm >> ::ACE_InputCDR::to_char (_tao_aggregate.status));
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const SkyworthMsgs::PatrolManageCmd &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.area.in ()) &&
    (strm << _tao_aggregate.commandType.in ()) &&
    (strm << ::ACE_OutputCDR::from_char (_tao_aggregate.command));
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    SkyworthMsgs::PatrolManageCmd &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.area.out ()) &&
    (strm >> _tao_aggregate.commandType.out ()) &&
    (strm >> ::ACE_InputCDR::to_char (_tao_aggregate.command));
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const SkyworthMsgs::CleanManageStatus &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.statusType.in ()) &&
    (strm << ::ACE_OutputCDR::from_char (_tao_aggregate.status));
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    SkyworthMsgs::CleanManageStatus &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.statusType.out ()) &&
    (strm >> ::ACE_InputCDR::to_char (_tao_aggregate.status));
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const SkyworthMsgs::CleanManageCmd &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.point1) &&
    (strm << _tao_aggregate.point2) &&
    (strm << _tao_aggregate.point3) &&
    (strm << _tao_aggregate.point4) &&
    (strm << _tao_aggregate.commandType.in ()) &&
    (strm << ::ACE_OutputCDR::from_char (_tao_aggregate.command));
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    SkyworthMsgs::CleanManageCmd &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.point1) &&
    (strm >> _tao_aggregate.point2) &&
    (strm >> _tao_aggregate.point3) &&
    (strm >> _tao_aggregate.point4) &&
    (strm >> _tao_aggregate.commandType.out ()) &&
    (strm >> ::ACE_InputCDR::to_char (_tao_aggregate.command));
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const SkyworthMsgs::MapLiveCmd &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.commandType.in ()) &&
    (strm << ::ACE_OutputCDR::from_char (_tao_aggregate.command));
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    SkyworthMsgs::MapLiveCmd &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.commandType.out ()) &&
    (strm >> ::ACE_InputCDR::to_char (_tao_aggregate.command));
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const SkyworthMsgs::CleanRouterStatus &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.statusType.in ()) &&
    (strm << ::ACE_OutputCDR::from_char (_tao_aggregate.status));
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    SkyworthMsgs::CleanRouterStatus &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.statusType.out ()) &&
    (strm >> ::ACE_InputCDR::to_char (_tao_aggregate.status));
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const SkyworthMsgs::CleanRouterCmd &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.point1) &&
    (strm << _tao_aggregate.point2) &&
    (strm << _tao_aggregate.point3) &&
    (strm << _tao_aggregate.point4) &&
    (strm << _tao_aggregate.area.in ()) &&
    (strm << _tao_aggregate.commandType.in ()) &&
    (strm << ::ACE_OutputCDR::from_char (_tao_aggregate.command));
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    SkyworthMsgs::CleanRouterCmd &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.point1) &&
    (strm >> _tao_aggregate.point2) &&
    (strm >> _tao_aggregate.point3) &&
    (strm >> _tao_aggregate.point4) &&
    (strm >> _tao_aggregate.area.out ()) &&
    (strm >> _tao_aggregate.commandType.out ()) &&
    (strm >> ::ACE_InputCDR::to_char (_tao_aggregate.command));
}

TAO_END_VERSIONED_NAMESPACE_DECL



