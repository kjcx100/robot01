// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p15
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:376


#include "SkyworthMsgsTypeSupportC.h"
#include "tao/AnyTypeCode/Null_RefCount_Policy.h"
#include "tao/AnyTypeCode/TypeCode_Constants.h"
#include "tao/AnyTypeCode/Alias_TypeCode_Static.h"
#include "tao/AnyTypeCode/Objref_TypeCode_Static.h"
#include "tao/AnyTypeCode/Sequence_TypeCode_Static.h"
#include "tao/CDR.h"
#include "tao/CDR.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/AnyTypeCode/Any_Impl_T.h"
#include "tao/AnyTypeCode/Any_Dual_Impl_T.h"
#include "ace/OS_NS_string.h"

#if !defined (__ACE_INLINE__)
#include "SkyworthMsgsTypeSupportC.inl"
#endif /* !defined INLINE */

// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:51



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:464


#ifndef _TAO_TYPECODE_SkyworthMsgs_EdgePolorPointSeq_GUARD
#define _TAO_TYPECODE_SkyworthMsgs_EdgePolorPointSeq_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        SkyworthMsgs_EdgePolorPointSeq_0 (
          ::CORBA::tk_sequence,
          &SkyworthMsgs::_tc_EdgePolorPoint,
          0U);
        
      ::CORBA::TypeCode_ptr const tc_SkyworthMsgs_EdgePolorPointSeq_0 =
        &SkyworthMsgs_EdgePolorPointSeq_0;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_SkyworthMsgs_EdgePolorPointSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_EdgePolorPointSeq (
    ::CORBA::tk_alias,
    "IDL:SkyworthMsgs/EdgePolorPointSeq:1.0",
    "EdgePolorPointSeq",
    &TAO::TypeCode::tc_SkyworthMsgs_EdgePolorPointSeq_0);
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_EdgePolorPointSeq =
    &_tao_tc_SkyworthMsgs_EdgePolorPointSeq;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::EdgePolorPointTypeSupport.

SkyworthMsgs::EdgePolorPointTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::EdgePolorPointTypeSupport>::duplicate (
    SkyworthMsgs::EdgePolorPointTypeSupport_ptr p)
{
  return SkyworthMsgs::EdgePolorPointTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::EdgePolorPointTypeSupport>::release (
    SkyworthMsgs::EdgePolorPointTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::EdgePolorPointTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::EdgePolorPointTypeSupport>::nil (void)
{
  return SkyworthMsgs::EdgePolorPointTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::EdgePolorPointTypeSupport>::marshal (
    const SkyworthMsgs::EdgePolorPointTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::EdgePolorPointTypeSupport::EdgePolorPointTypeSupport (void)
{}

SkyworthMsgs::EdgePolorPointTypeSupport::~EdgePolorPointTypeSupport (void)
{
}

void
SkyworthMsgs::EdgePolorPointTypeSupport::_tao_any_destructor (void *_tao_void_pointer)
{
  EdgePolorPointTypeSupport *_tao_tmp_pointer =
    static_cast<EdgePolorPointTypeSupport *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::EdgePolorPointTypeSupport_ptr
SkyworthMsgs::EdgePolorPointTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return EdgePolorPointTypeSupport::_duplicate (
      dynamic_cast<EdgePolorPointTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::EdgePolorPointTypeSupport_ptr
SkyworthMsgs::EdgePolorPointTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return EdgePolorPointTypeSupport::_duplicate (
      dynamic_cast<EdgePolorPointTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::EdgePolorPointTypeSupport_ptr
SkyworthMsgs::EdgePolorPointTypeSupport::_nil (void)
{
  return 0;
}

SkyworthMsgs::EdgePolorPointTypeSupport_ptr
SkyworthMsgs::EdgePolorPointTypeSupport::_duplicate (EdgePolorPointTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::EdgePolorPointTypeSupport::_tao_release (EdgePolorPointTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::EdgePolorPointTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/EdgePolorPointTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::EdgePolorPointTypeSupport::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/EdgePolorPointTypeSupport:1.0";
}

::CORBA::Boolean
SkyworthMsgs::EdgePolorPointTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_EdgePolorPointTypeSupport (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/EdgePolorPointTypeSupport:1.0",
    "EdgePolorPointTypeSupport");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_EdgePolorPointTypeSupport =
    &_tao_tc_SkyworthMsgs_EdgePolorPointTypeSupport;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::EdgePolorPointDataWriter.

SkyworthMsgs::EdgePolorPointDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::EdgePolorPointDataWriter>::duplicate (
    SkyworthMsgs::EdgePolorPointDataWriter_ptr p)
{
  return SkyworthMsgs::EdgePolorPointDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::EdgePolorPointDataWriter>::release (
    SkyworthMsgs::EdgePolorPointDataWriter_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::EdgePolorPointDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::EdgePolorPointDataWriter>::nil (void)
{
  return SkyworthMsgs::EdgePolorPointDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::EdgePolorPointDataWriter>::marshal (
    const SkyworthMsgs::EdgePolorPointDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::EdgePolorPointDataWriter::EdgePolorPointDataWriter (void)
{}

SkyworthMsgs::EdgePolorPointDataWriter::~EdgePolorPointDataWriter (void)
{
}

void
SkyworthMsgs::EdgePolorPointDataWriter::_tao_any_destructor (void *_tao_void_pointer)
{
  EdgePolorPointDataWriter *_tao_tmp_pointer =
    static_cast<EdgePolorPointDataWriter *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::EdgePolorPointDataWriter_ptr
SkyworthMsgs::EdgePolorPointDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return EdgePolorPointDataWriter::_duplicate (
      dynamic_cast<EdgePolorPointDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::EdgePolorPointDataWriter_ptr
SkyworthMsgs::EdgePolorPointDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return EdgePolorPointDataWriter::_duplicate (
      dynamic_cast<EdgePolorPointDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::EdgePolorPointDataWriter_ptr
SkyworthMsgs::EdgePolorPointDataWriter::_nil (void)
{
  return 0;
}

SkyworthMsgs::EdgePolorPointDataWriter_ptr
SkyworthMsgs::EdgePolorPointDataWriter::_duplicate (EdgePolorPointDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::EdgePolorPointDataWriter::_tao_release (EdgePolorPointDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::EdgePolorPointDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/EdgePolorPointDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::EdgePolorPointDataWriter::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/EdgePolorPointDataWriter:1.0";
}

::CORBA::Boolean
SkyworthMsgs::EdgePolorPointDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_EdgePolorPointDataWriter (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/EdgePolorPointDataWriter:1.0",
    "EdgePolorPointDataWriter");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_EdgePolorPointDataWriter =
    &_tao_tc_SkyworthMsgs_EdgePolorPointDataWriter;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::EdgePolorPointDataReader.

SkyworthMsgs::EdgePolorPointDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::EdgePolorPointDataReader>::duplicate (
    SkyworthMsgs::EdgePolorPointDataReader_ptr p)
{
  return SkyworthMsgs::EdgePolorPointDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::EdgePolorPointDataReader>::release (
    SkyworthMsgs::EdgePolorPointDataReader_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::EdgePolorPointDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::EdgePolorPointDataReader>::nil (void)
{
  return SkyworthMsgs::EdgePolorPointDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::EdgePolorPointDataReader>::marshal (
    const SkyworthMsgs::EdgePolorPointDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::EdgePolorPointDataReader::EdgePolorPointDataReader (void)
{}

SkyworthMsgs::EdgePolorPointDataReader::~EdgePolorPointDataReader (void)
{
}

void
SkyworthMsgs::EdgePolorPointDataReader::_tao_any_destructor (void *_tao_void_pointer)
{
  EdgePolorPointDataReader *_tao_tmp_pointer =
    static_cast<EdgePolorPointDataReader *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::EdgePolorPointDataReader_ptr
SkyworthMsgs::EdgePolorPointDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return EdgePolorPointDataReader::_duplicate (
      dynamic_cast<EdgePolorPointDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::EdgePolorPointDataReader_ptr
SkyworthMsgs::EdgePolorPointDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return EdgePolorPointDataReader::_duplicate (
      dynamic_cast<EdgePolorPointDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::EdgePolorPointDataReader_ptr
SkyworthMsgs::EdgePolorPointDataReader::_nil (void)
{
  return 0;
}

SkyworthMsgs::EdgePolorPointDataReader_ptr
SkyworthMsgs::EdgePolorPointDataReader::_duplicate (EdgePolorPointDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::EdgePolorPointDataReader::_tao_release (EdgePolorPointDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::EdgePolorPointDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/EdgePolorPointDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::EdgePolorPointDataReader::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/EdgePolorPointDataReader:1.0";
}

::CORBA::Boolean
SkyworthMsgs::EdgePolorPointDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_EdgePolorPointDataReader (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/EdgePolorPointDataReader:1.0",
    "EdgePolorPointDataReader");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_EdgePolorPointDataReader =
    &_tao_tc_SkyworthMsgs_EdgePolorPointDataReader;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:51



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:464


#ifndef _TAO_TYPECODE_SkyworthMsgs_EdgeXyzPointSeq_GUARD
#define _TAO_TYPECODE_SkyworthMsgs_EdgeXyzPointSeq_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        SkyworthMsgs_EdgeXyzPointSeq_0 (
          ::CORBA::tk_sequence,
          &SkyworthMsgs::_tc_EdgeXyzPoint,
          0U);
        
      ::CORBA::TypeCode_ptr const tc_SkyworthMsgs_EdgeXyzPointSeq_0 =
        &SkyworthMsgs_EdgeXyzPointSeq_0;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_SkyworthMsgs_EdgeXyzPointSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_EdgeXyzPointSeq (
    ::CORBA::tk_alias,
    "IDL:SkyworthMsgs/EdgeXyzPointSeq:1.0",
    "EdgeXyzPointSeq",
    &TAO::TypeCode::tc_SkyworthMsgs_EdgeXyzPointSeq_0);
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_EdgeXyzPointSeq =
    &_tao_tc_SkyworthMsgs_EdgeXyzPointSeq;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::EdgeXyzPointTypeSupport.

SkyworthMsgs::EdgeXyzPointTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::EdgeXyzPointTypeSupport>::duplicate (
    SkyworthMsgs::EdgeXyzPointTypeSupport_ptr p)
{
  return SkyworthMsgs::EdgeXyzPointTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::EdgeXyzPointTypeSupport>::release (
    SkyworthMsgs::EdgeXyzPointTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::EdgeXyzPointTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::EdgeXyzPointTypeSupport>::nil (void)
{
  return SkyworthMsgs::EdgeXyzPointTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::EdgeXyzPointTypeSupport>::marshal (
    const SkyworthMsgs::EdgeXyzPointTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::EdgeXyzPointTypeSupport::EdgeXyzPointTypeSupport (void)
{}

SkyworthMsgs::EdgeXyzPointTypeSupport::~EdgeXyzPointTypeSupport (void)
{
}

void
SkyworthMsgs::EdgeXyzPointTypeSupport::_tao_any_destructor (void *_tao_void_pointer)
{
  EdgeXyzPointTypeSupport *_tao_tmp_pointer =
    static_cast<EdgeXyzPointTypeSupport *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::EdgeXyzPointTypeSupport_ptr
SkyworthMsgs::EdgeXyzPointTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return EdgeXyzPointTypeSupport::_duplicate (
      dynamic_cast<EdgeXyzPointTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::EdgeXyzPointTypeSupport_ptr
SkyworthMsgs::EdgeXyzPointTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return EdgeXyzPointTypeSupport::_duplicate (
      dynamic_cast<EdgeXyzPointTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::EdgeXyzPointTypeSupport_ptr
SkyworthMsgs::EdgeXyzPointTypeSupport::_nil (void)
{
  return 0;
}

SkyworthMsgs::EdgeXyzPointTypeSupport_ptr
SkyworthMsgs::EdgeXyzPointTypeSupport::_duplicate (EdgeXyzPointTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::EdgeXyzPointTypeSupport::_tao_release (EdgeXyzPointTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::EdgeXyzPointTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/EdgeXyzPointTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::EdgeXyzPointTypeSupport::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/EdgeXyzPointTypeSupport:1.0";
}

::CORBA::Boolean
SkyworthMsgs::EdgeXyzPointTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_EdgeXyzPointTypeSupport (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/EdgeXyzPointTypeSupport:1.0",
    "EdgeXyzPointTypeSupport");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_EdgeXyzPointTypeSupport =
    &_tao_tc_SkyworthMsgs_EdgeXyzPointTypeSupport;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::EdgeXyzPointDataWriter.

SkyworthMsgs::EdgeXyzPointDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::EdgeXyzPointDataWriter>::duplicate (
    SkyworthMsgs::EdgeXyzPointDataWriter_ptr p)
{
  return SkyworthMsgs::EdgeXyzPointDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::EdgeXyzPointDataWriter>::release (
    SkyworthMsgs::EdgeXyzPointDataWriter_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::EdgeXyzPointDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::EdgeXyzPointDataWriter>::nil (void)
{
  return SkyworthMsgs::EdgeXyzPointDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::EdgeXyzPointDataWriter>::marshal (
    const SkyworthMsgs::EdgeXyzPointDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::EdgeXyzPointDataWriter::EdgeXyzPointDataWriter (void)
{}

SkyworthMsgs::EdgeXyzPointDataWriter::~EdgeXyzPointDataWriter (void)
{
}

void
SkyworthMsgs::EdgeXyzPointDataWriter::_tao_any_destructor (void *_tao_void_pointer)
{
  EdgeXyzPointDataWriter *_tao_tmp_pointer =
    static_cast<EdgeXyzPointDataWriter *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::EdgeXyzPointDataWriter_ptr
SkyworthMsgs::EdgeXyzPointDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return EdgeXyzPointDataWriter::_duplicate (
      dynamic_cast<EdgeXyzPointDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::EdgeXyzPointDataWriter_ptr
SkyworthMsgs::EdgeXyzPointDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return EdgeXyzPointDataWriter::_duplicate (
      dynamic_cast<EdgeXyzPointDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::EdgeXyzPointDataWriter_ptr
SkyworthMsgs::EdgeXyzPointDataWriter::_nil (void)
{
  return 0;
}

SkyworthMsgs::EdgeXyzPointDataWriter_ptr
SkyworthMsgs::EdgeXyzPointDataWriter::_duplicate (EdgeXyzPointDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::EdgeXyzPointDataWriter::_tao_release (EdgeXyzPointDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::EdgeXyzPointDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/EdgeXyzPointDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::EdgeXyzPointDataWriter::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/EdgeXyzPointDataWriter:1.0";
}

::CORBA::Boolean
SkyworthMsgs::EdgeXyzPointDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_EdgeXyzPointDataWriter (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/EdgeXyzPointDataWriter:1.0",
    "EdgeXyzPointDataWriter");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_EdgeXyzPointDataWriter =
    &_tao_tc_SkyworthMsgs_EdgeXyzPointDataWriter;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::EdgeXyzPointDataReader.

SkyworthMsgs::EdgeXyzPointDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::EdgeXyzPointDataReader>::duplicate (
    SkyworthMsgs::EdgeXyzPointDataReader_ptr p)
{
  return SkyworthMsgs::EdgeXyzPointDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::EdgeXyzPointDataReader>::release (
    SkyworthMsgs::EdgeXyzPointDataReader_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::EdgeXyzPointDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::EdgeXyzPointDataReader>::nil (void)
{
  return SkyworthMsgs::EdgeXyzPointDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::EdgeXyzPointDataReader>::marshal (
    const SkyworthMsgs::EdgeXyzPointDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::EdgeXyzPointDataReader::EdgeXyzPointDataReader (void)
{}

SkyworthMsgs::EdgeXyzPointDataReader::~EdgeXyzPointDataReader (void)
{
}

void
SkyworthMsgs::EdgeXyzPointDataReader::_tao_any_destructor (void *_tao_void_pointer)
{
  EdgeXyzPointDataReader *_tao_tmp_pointer =
    static_cast<EdgeXyzPointDataReader *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::EdgeXyzPointDataReader_ptr
SkyworthMsgs::EdgeXyzPointDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return EdgeXyzPointDataReader::_duplicate (
      dynamic_cast<EdgeXyzPointDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::EdgeXyzPointDataReader_ptr
SkyworthMsgs::EdgeXyzPointDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return EdgeXyzPointDataReader::_duplicate (
      dynamic_cast<EdgeXyzPointDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::EdgeXyzPointDataReader_ptr
SkyworthMsgs::EdgeXyzPointDataReader::_nil (void)
{
  return 0;
}

SkyworthMsgs::EdgeXyzPointDataReader_ptr
SkyworthMsgs::EdgeXyzPointDataReader::_duplicate (EdgeXyzPointDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::EdgeXyzPointDataReader::_tao_release (EdgeXyzPointDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::EdgeXyzPointDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/EdgeXyzPointDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::EdgeXyzPointDataReader::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/EdgeXyzPointDataReader:1.0";
}

::CORBA::Boolean
SkyworthMsgs::EdgeXyzPointDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_EdgeXyzPointDataReader (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/EdgeXyzPointDataReader:1.0",
    "EdgeXyzPointDataReader");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_EdgeXyzPointDataReader =
    &_tao_tc_SkyworthMsgs_EdgeXyzPointDataReader;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:51



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:464


#ifndef _TAO_TYPECODE_SkyworthMsgs_DestXyzPointSeq_GUARD
#define _TAO_TYPECODE_SkyworthMsgs_DestXyzPointSeq_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        SkyworthMsgs_DestXyzPointSeq_0 (
          ::CORBA::tk_sequence,
          &SkyworthMsgs::_tc_DestXyzPoint,
          0U);
        
      ::CORBA::TypeCode_ptr const tc_SkyworthMsgs_DestXyzPointSeq_0 =
        &SkyworthMsgs_DestXyzPointSeq_0;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_SkyworthMsgs_DestXyzPointSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_DestXyzPointSeq (
    ::CORBA::tk_alias,
    "IDL:SkyworthMsgs/DestXyzPointSeq:1.0",
    "DestXyzPointSeq",
    &TAO::TypeCode::tc_SkyworthMsgs_DestXyzPointSeq_0);
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_DestXyzPointSeq =
    &_tao_tc_SkyworthMsgs_DestXyzPointSeq;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::DestXyzPointTypeSupport.

SkyworthMsgs::DestXyzPointTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::DestXyzPointTypeSupport>::duplicate (
    SkyworthMsgs::DestXyzPointTypeSupport_ptr p)
{
  return SkyworthMsgs::DestXyzPointTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::DestXyzPointTypeSupport>::release (
    SkyworthMsgs::DestXyzPointTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::DestXyzPointTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::DestXyzPointTypeSupport>::nil (void)
{
  return SkyworthMsgs::DestXyzPointTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::DestXyzPointTypeSupport>::marshal (
    const SkyworthMsgs::DestXyzPointTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::DestXyzPointTypeSupport::DestXyzPointTypeSupport (void)
{}

SkyworthMsgs::DestXyzPointTypeSupport::~DestXyzPointTypeSupport (void)
{
}

void
SkyworthMsgs::DestXyzPointTypeSupport::_tao_any_destructor (void *_tao_void_pointer)
{
  DestXyzPointTypeSupport *_tao_tmp_pointer =
    static_cast<DestXyzPointTypeSupport *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::DestXyzPointTypeSupport_ptr
SkyworthMsgs::DestXyzPointTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return DestXyzPointTypeSupport::_duplicate (
      dynamic_cast<DestXyzPointTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::DestXyzPointTypeSupport_ptr
SkyworthMsgs::DestXyzPointTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return DestXyzPointTypeSupport::_duplicate (
      dynamic_cast<DestXyzPointTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::DestXyzPointTypeSupport_ptr
SkyworthMsgs::DestXyzPointTypeSupport::_nil (void)
{
  return 0;
}

SkyworthMsgs::DestXyzPointTypeSupport_ptr
SkyworthMsgs::DestXyzPointTypeSupport::_duplicate (DestXyzPointTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::DestXyzPointTypeSupport::_tao_release (DestXyzPointTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::DestXyzPointTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/DestXyzPointTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::DestXyzPointTypeSupport::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/DestXyzPointTypeSupport:1.0";
}

::CORBA::Boolean
SkyworthMsgs::DestXyzPointTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_DestXyzPointTypeSupport (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/DestXyzPointTypeSupport:1.0",
    "DestXyzPointTypeSupport");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_DestXyzPointTypeSupport =
    &_tao_tc_SkyworthMsgs_DestXyzPointTypeSupport;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::DestXyzPointDataWriter.

SkyworthMsgs::DestXyzPointDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::DestXyzPointDataWriter>::duplicate (
    SkyworthMsgs::DestXyzPointDataWriter_ptr p)
{
  return SkyworthMsgs::DestXyzPointDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::DestXyzPointDataWriter>::release (
    SkyworthMsgs::DestXyzPointDataWriter_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::DestXyzPointDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::DestXyzPointDataWriter>::nil (void)
{
  return SkyworthMsgs::DestXyzPointDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::DestXyzPointDataWriter>::marshal (
    const SkyworthMsgs::DestXyzPointDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::DestXyzPointDataWriter::DestXyzPointDataWriter (void)
{}

SkyworthMsgs::DestXyzPointDataWriter::~DestXyzPointDataWriter (void)
{
}

void
SkyworthMsgs::DestXyzPointDataWriter::_tao_any_destructor (void *_tao_void_pointer)
{
  DestXyzPointDataWriter *_tao_tmp_pointer =
    static_cast<DestXyzPointDataWriter *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::DestXyzPointDataWriter_ptr
SkyworthMsgs::DestXyzPointDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return DestXyzPointDataWriter::_duplicate (
      dynamic_cast<DestXyzPointDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::DestXyzPointDataWriter_ptr
SkyworthMsgs::DestXyzPointDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return DestXyzPointDataWriter::_duplicate (
      dynamic_cast<DestXyzPointDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::DestXyzPointDataWriter_ptr
SkyworthMsgs::DestXyzPointDataWriter::_nil (void)
{
  return 0;
}

SkyworthMsgs::DestXyzPointDataWriter_ptr
SkyworthMsgs::DestXyzPointDataWriter::_duplicate (DestXyzPointDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::DestXyzPointDataWriter::_tao_release (DestXyzPointDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::DestXyzPointDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/DestXyzPointDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::DestXyzPointDataWriter::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/DestXyzPointDataWriter:1.0";
}

::CORBA::Boolean
SkyworthMsgs::DestXyzPointDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_DestXyzPointDataWriter (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/DestXyzPointDataWriter:1.0",
    "DestXyzPointDataWriter");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_DestXyzPointDataWriter =
    &_tao_tc_SkyworthMsgs_DestXyzPointDataWriter;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::DestXyzPointDataReader.

SkyworthMsgs::DestXyzPointDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::DestXyzPointDataReader>::duplicate (
    SkyworthMsgs::DestXyzPointDataReader_ptr p)
{
  return SkyworthMsgs::DestXyzPointDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::DestXyzPointDataReader>::release (
    SkyworthMsgs::DestXyzPointDataReader_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::DestXyzPointDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::DestXyzPointDataReader>::nil (void)
{
  return SkyworthMsgs::DestXyzPointDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::DestXyzPointDataReader>::marshal (
    const SkyworthMsgs::DestXyzPointDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::DestXyzPointDataReader::DestXyzPointDataReader (void)
{}

SkyworthMsgs::DestXyzPointDataReader::~DestXyzPointDataReader (void)
{
}

void
SkyworthMsgs::DestXyzPointDataReader::_tao_any_destructor (void *_tao_void_pointer)
{
  DestXyzPointDataReader *_tao_tmp_pointer =
    static_cast<DestXyzPointDataReader *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::DestXyzPointDataReader_ptr
SkyworthMsgs::DestXyzPointDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return DestXyzPointDataReader::_duplicate (
      dynamic_cast<DestXyzPointDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::DestXyzPointDataReader_ptr
SkyworthMsgs::DestXyzPointDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return DestXyzPointDataReader::_duplicate (
      dynamic_cast<DestXyzPointDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::DestXyzPointDataReader_ptr
SkyworthMsgs::DestXyzPointDataReader::_nil (void)
{
  return 0;
}

SkyworthMsgs::DestXyzPointDataReader_ptr
SkyworthMsgs::DestXyzPointDataReader::_duplicate (DestXyzPointDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::DestXyzPointDataReader::_tao_release (DestXyzPointDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::DestXyzPointDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/DestXyzPointDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::DestXyzPointDataReader::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/DestXyzPointDataReader:1.0";
}

::CORBA::Boolean
SkyworthMsgs::DestXyzPointDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_DestXyzPointDataReader (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/DestXyzPointDataReader:1.0",
    "DestXyzPointDataReader");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_DestXyzPointDataReader =
    &_tao_tc_SkyworthMsgs_DestXyzPointDataReader;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:51



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:464


#ifndef _TAO_TYPECODE_SkyworthMsgs_DepthEdgeDataSeq_GUARD
#define _TAO_TYPECODE_SkyworthMsgs_DepthEdgeDataSeq_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        SkyworthMsgs_DepthEdgeDataSeq_0 (
          ::CORBA::tk_sequence,
          &SkyworthMsgs::_tc_DepthEdgeData,
          0U);
        
      ::CORBA::TypeCode_ptr const tc_SkyworthMsgs_DepthEdgeDataSeq_0 =
        &SkyworthMsgs_DepthEdgeDataSeq_0;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_SkyworthMsgs_DepthEdgeDataSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_DepthEdgeDataSeq (
    ::CORBA::tk_alias,
    "IDL:SkyworthMsgs/DepthEdgeDataSeq:1.0",
    "DepthEdgeDataSeq",
    &TAO::TypeCode::tc_SkyworthMsgs_DepthEdgeDataSeq_0);
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_DepthEdgeDataSeq =
    &_tao_tc_SkyworthMsgs_DepthEdgeDataSeq;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::DepthEdgeDataTypeSupport.

SkyworthMsgs::DepthEdgeDataTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::DepthEdgeDataTypeSupport>::duplicate (
    SkyworthMsgs::DepthEdgeDataTypeSupport_ptr p)
{
  return SkyworthMsgs::DepthEdgeDataTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::DepthEdgeDataTypeSupport>::release (
    SkyworthMsgs::DepthEdgeDataTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::DepthEdgeDataTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::DepthEdgeDataTypeSupport>::nil (void)
{
  return SkyworthMsgs::DepthEdgeDataTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::DepthEdgeDataTypeSupport>::marshal (
    const SkyworthMsgs::DepthEdgeDataTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::DepthEdgeDataTypeSupport::DepthEdgeDataTypeSupport (void)
{}

SkyworthMsgs::DepthEdgeDataTypeSupport::~DepthEdgeDataTypeSupport (void)
{
}

void
SkyworthMsgs::DepthEdgeDataTypeSupport::_tao_any_destructor (void *_tao_void_pointer)
{
  DepthEdgeDataTypeSupport *_tao_tmp_pointer =
    static_cast<DepthEdgeDataTypeSupport *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::DepthEdgeDataTypeSupport_ptr
SkyworthMsgs::DepthEdgeDataTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return DepthEdgeDataTypeSupport::_duplicate (
      dynamic_cast<DepthEdgeDataTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::DepthEdgeDataTypeSupport_ptr
SkyworthMsgs::DepthEdgeDataTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return DepthEdgeDataTypeSupport::_duplicate (
      dynamic_cast<DepthEdgeDataTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::DepthEdgeDataTypeSupport_ptr
SkyworthMsgs::DepthEdgeDataTypeSupport::_nil (void)
{
  return 0;
}

SkyworthMsgs::DepthEdgeDataTypeSupport_ptr
SkyworthMsgs::DepthEdgeDataTypeSupport::_duplicate (DepthEdgeDataTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::DepthEdgeDataTypeSupport::_tao_release (DepthEdgeDataTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::DepthEdgeDataTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/DepthEdgeDataTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::DepthEdgeDataTypeSupport::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/DepthEdgeDataTypeSupport:1.0";
}

::CORBA::Boolean
SkyworthMsgs::DepthEdgeDataTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_DepthEdgeDataTypeSupport (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/DepthEdgeDataTypeSupport:1.0",
    "DepthEdgeDataTypeSupport");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_DepthEdgeDataTypeSupport =
    &_tao_tc_SkyworthMsgs_DepthEdgeDataTypeSupport;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::DepthEdgeDataDataWriter.

SkyworthMsgs::DepthEdgeDataDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::DepthEdgeDataDataWriter>::duplicate (
    SkyworthMsgs::DepthEdgeDataDataWriter_ptr p)
{
  return SkyworthMsgs::DepthEdgeDataDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::DepthEdgeDataDataWriter>::release (
    SkyworthMsgs::DepthEdgeDataDataWriter_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::DepthEdgeDataDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::DepthEdgeDataDataWriter>::nil (void)
{
  return SkyworthMsgs::DepthEdgeDataDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::DepthEdgeDataDataWriter>::marshal (
    const SkyworthMsgs::DepthEdgeDataDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::DepthEdgeDataDataWriter::DepthEdgeDataDataWriter (void)
{}

SkyworthMsgs::DepthEdgeDataDataWriter::~DepthEdgeDataDataWriter (void)
{
}

void
SkyworthMsgs::DepthEdgeDataDataWriter::_tao_any_destructor (void *_tao_void_pointer)
{
  DepthEdgeDataDataWriter *_tao_tmp_pointer =
    static_cast<DepthEdgeDataDataWriter *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::DepthEdgeDataDataWriter_ptr
SkyworthMsgs::DepthEdgeDataDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return DepthEdgeDataDataWriter::_duplicate (
      dynamic_cast<DepthEdgeDataDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::DepthEdgeDataDataWriter_ptr
SkyworthMsgs::DepthEdgeDataDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return DepthEdgeDataDataWriter::_duplicate (
      dynamic_cast<DepthEdgeDataDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::DepthEdgeDataDataWriter_ptr
SkyworthMsgs::DepthEdgeDataDataWriter::_nil (void)
{
  return 0;
}

SkyworthMsgs::DepthEdgeDataDataWriter_ptr
SkyworthMsgs::DepthEdgeDataDataWriter::_duplicate (DepthEdgeDataDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::DepthEdgeDataDataWriter::_tao_release (DepthEdgeDataDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::DepthEdgeDataDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/DepthEdgeDataDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::DepthEdgeDataDataWriter::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/DepthEdgeDataDataWriter:1.0";
}

::CORBA::Boolean
SkyworthMsgs::DepthEdgeDataDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_DepthEdgeDataDataWriter (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/DepthEdgeDataDataWriter:1.0",
    "DepthEdgeDataDataWriter");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_DepthEdgeDataDataWriter =
    &_tao_tc_SkyworthMsgs_DepthEdgeDataDataWriter;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::DepthEdgeDataDataReader.

SkyworthMsgs::DepthEdgeDataDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::DepthEdgeDataDataReader>::duplicate (
    SkyworthMsgs::DepthEdgeDataDataReader_ptr p)
{
  return SkyworthMsgs::DepthEdgeDataDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::DepthEdgeDataDataReader>::release (
    SkyworthMsgs::DepthEdgeDataDataReader_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::DepthEdgeDataDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::DepthEdgeDataDataReader>::nil (void)
{
  return SkyworthMsgs::DepthEdgeDataDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::DepthEdgeDataDataReader>::marshal (
    const SkyworthMsgs::DepthEdgeDataDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::DepthEdgeDataDataReader::DepthEdgeDataDataReader (void)
{}

SkyworthMsgs::DepthEdgeDataDataReader::~DepthEdgeDataDataReader (void)
{
}

void
SkyworthMsgs::DepthEdgeDataDataReader::_tao_any_destructor (void *_tao_void_pointer)
{
  DepthEdgeDataDataReader *_tao_tmp_pointer =
    static_cast<DepthEdgeDataDataReader *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::DepthEdgeDataDataReader_ptr
SkyworthMsgs::DepthEdgeDataDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return DepthEdgeDataDataReader::_duplicate (
      dynamic_cast<DepthEdgeDataDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::DepthEdgeDataDataReader_ptr
SkyworthMsgs::DepthEdgeDataDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return DepthEdgeDataDataReader::_duplicate (
      dynamic_cast<DepthEdgeDataDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::DepthEdgeDataDataReader_ptr
SkyworthMsgs::DepthEdgeDataDataReader::_nil (void)
{
  return 0;
}

SkyworthMsgs::DepthEdgeDataDataReader_ptr
SkyworthMsgs::DepthEdgeDataDataReader::_duplicate (DepthEdgeDataDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::DepthEdgeDataDataReader::_tao_release (DepthEdgeDataDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::DepthEdgeDataDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/DepthEdgeDataDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::DepthEdgeDataDataReader::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/DepthEdgeDataDataReader:1.0";
}

::CORBA::Boolean
SkyworthMsgs::DepthEdgeDataDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_DepthEdgeDataDataReader (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/DepthEdgeDataDataReader:1.0",
    "DepthEdgeDataDataReader");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_DepthEdgeDataDataReader =
    &_tao_tc_SkyworthMsgs_DepthEdgeDataDataReader;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:51



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:464


#ifndef _TAO_TYPECODE_SkyworthMsgs_UltraTouchDataSeq_GUARD
#define _TAO_TYPECODE_SkyworthMsgs_UltraTouchDataSeq_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        SkyworthMsgs_UltraTouchDataSeq_0 (
          ::CORBA::tk_sequence,
          &SkyworthMsgs::_tc_UltraTouchData,
          0U);
        
      ::CORBA::TypeCode_ptr const tc_SkyworthMsgs_UltraTouchDataSeq_0 =
        &SkyworthMsgs_UltraTouchDataSeq_0;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_SkyworthMsgs_UltraTouchDataSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_UltraTouchDataSeq (
    ::CORBA::tk_alias,
    "IDL:SkyworthMsgs/UltraTouchDataSeq:1.0",
    "UltraTouchDataSeq",
    &TAO::TypeCode::tc_SkyworthMsgs_UltraTouchDataSeq_0);
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_UltraTouchDataSeq =
    &_tao_tc_SkyworthMsgs_UltraTouchDataSeq;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::UltraTouchDataTypeSupport.

SkyworthMsgs::UltraTouchDataTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::UltraTouchDataTypeSupport>::duplicate (
    SkyworthMsgs::UltraTouchDataTypeSupport_ptr p)
{
  return SkyworthMsgs::UltraTouchDataTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::UltraTouchDataTypeSupport>::release (
    SkyworthMsgs::UltraTouchDataTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::UltraTouchDataTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::UltraTouchDataTypeSupport>::nil (void)
{
  return SkyworthMsgs::UltraTouchDataTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::UltraTouchDataTypeSupport>::marshal (
    const SkyworthMsgs::UltraTouchDataTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::UltraTouchDataTypeSupport::UltraTouchDataTypeSupport (void)
{}

SkyworthMsgs::UltraTouchDataTypeSupport::~UltraTouchDataTypeSupport (void)
{
}

void
SkyworthMsgs::UltraTouchDataTypeSupport::_tao_any_destructor (void *_tao_void_pointer)
{
  UltraTouchDataTypeSupport *_tao_tmp_pointer =
    static_cast<UltraTouchDataTypeSupport *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::UltraTouchDataTypeSupport_ptr
SkyworthMsgs::UltraTouchDataTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return UltraTouchDataTypeSupport::_duplicate (
      dynamic_cast<UltraTouchDataTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::UltraTouchDataTypeSupport_ptr
SkyworthMsgs::UltraTouchDataTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return UltraTouchDataTypeSupport::_duplicate (
      dynamic_cast<UltraTouchDataTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::UltraTouchDataTypeSupport_ptr
SkyworthMsgs::UltraTouchDataTypeSupport::_nil (void)
{
  return 0;
}

SkyworthMsgs::UltraTouchDataTypeSupport_ptr
SkyworthMsgs::UltraTouchDataTypeSupport::_duplicate (UltraTouchDataTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::UltraTouchDataTypeSupport::_tao_release (UltraTouchDataTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::UltraTouchDataTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/UltraTouchDataTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::UltraTouchDataTypeSupport::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/UltraTouchDataTypeSupport:1.0";
}

::CORBA::Boolean
SkyworthMsgs::UltraTouchDataTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_UltraTouchDataTypeSupport (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/UltraTouchDataTypeSupport:1.0",
    "UltraTouchDataTypeSupport");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_UltraTouchDataTypeSupport =
    &_tao_tc_SkyworthMsgs_UltraTouchDataTypeSupport;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::UltraTouchDataDataWriter.

SkyworthMsgs::UltraTouchDataDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::UltraTouchDataDataWriter>::duplicate (
    SkyworthMsgs::UltraTouchDataDataWriter_ptr p)
{
  return SkyworthMsgs::UltraTouchDataDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::UltraTouchDataDataWriter>::release (
    SkyworthMsgs::UltraTouchDataDataWriter_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::UltraTouchDataDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::UltraTouchDataDataWriter>::nil (void)
{
  return SkyworthMsgs::UltraTouchDataDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::UltraTouchDataDataWriter>::marshal (
    const SkyworthMsgs::UltraTouchDataDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::UltraTouchDataDataWriter::UltraTouchDataDataWriter (void)
{}

SkyworthMsgs::UltraTouchDataDataWriter::~UltraTouchDataDataWriter (void)
{
}

void
SkyworthMsgs::UltraTouchDataDataWriter::_tao_any_destructor (void *_tao_void_pointer)
{
  UltraTouchDataDataWriter *_tao_tmp_pointer =
    static_cast<UltraTouchDataDataWriter *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::UltraTouchDataDataWriter_ptr
SkyworthMsgs::UltraTouchDataDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return UltraTouchDataDataWriter::_duplicate (
      dynamic_cast<UltraTouchDataDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::UltraTouchDataDataWriter_ptr
SkyworthMsgs::UltraTouchDataDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return UltraTouchDataDataWriter::_duplicate (
      dynamic_cast<UltraTouchDataDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::UltraTouchDataDataWriter_ptr
SkyworthMsgs::UltraTouchDataDataWriter::_nil (void)
{
  return 0;
}

SkyworthMsgs::UltraTouchDataDataWriter_ptr
SkyworthMsgs::UltraTouchDataDataWriter::_duplicate (UltraTouchDataDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::UltraTouchDataDataWriter::_tao_release (UltraTouchDataDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::UltraTouchDataDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/UltraTouchDataDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::UltraTouchDataDataWriter::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/UltraTouchDataDataWriter:1.0";
}

::CORBA::Boolean
SkyworthMsgs::UltraTouchDataDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_UltraTouchDataDataWriter (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/UltraTouchDataDataWriter:1.0",
    "UltraTouchDataDataWriter");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_UltraTouchDataDataWriter =
    &_tao_tc_SkyworthMsgs_UltraTouchDataDataWriter;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::UltraTouchDataDataReader.

SkyworthMsgs::UltraTouchDataDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::UltraTouchDataDataReader>::duplicate (
    SkyworthMsgs::UltraTouchDataDataReader_ptr p)
{
  return SkyworthMsgs::UltraTouchDataDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::UltraTouchDataDataReader>::release (
    SkyworthMsgs::UltraTouchDataDataReader_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::UltraTouchDataDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::UltraTouchDataDataReader>::nil (void)
{
  return SkyworthMsgs::UltraTouchDataDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::UltraTouchDataDataReader>::marshal (
    const SkyworthMsgs::UltraTouchDataDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::UltraTouchDataDataReader::UltraTouchDataDataReader (void)
{}

SkyworthMsgs::UltraTouchDataDataReader::~UltraTouchDataDataReader (void)
{
}

void
SkyworthMsgs::UltraTouchDataDataReader::_tao_any_destructor (void *_tao_void_pointer)
{
  UltraTouchDataDataReader *_tao_tmp_pointer =
    static_cast<UltraTouchDataDataReader *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::UltraTouchDataDataReader_ptr
SkyworthMsgs::UltraTouchDataDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return UltraTouchDataDataReader::_duplicate (
      dynamic_cast<UltraTouchDataDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::UltraTouchDataDataReader_ptr
SkyworthMsgs::UltraTouchDataDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return UltraTouchDataDataReader::_duplicate (
      dynamic_cast<UltraTouchDataDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::UltraTouchDataDataReader_ptr
SkyworthMsgs::UltraTouchDataDataReader::_nil (void)
{
  return 0;
}

SkyworthMsgs::UltraTouchDataDataReader_ptr
SkyworthMsgs::UltraTouchDataDataReader::_duplicate (UltraTouchDataDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::UltraTouchDataDataReader::_tao_release (UltraTouchDataDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::UltraTouchDataDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/UltraTouchDataDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::UltraTouchDataDataReader::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/UltraTouchDataDataReader:1.0";
}

::CORBA::Boolean
SkyworthMsgs::UltraTouchDataDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_UltraTouchDataDataReader (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/UltraTouchDataDataReader:1.0",
    "UltraTouchDataDataReader");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_UltraTouchDataDataReader =
    &_tao_tc_SkyworthMsgs_UltraTouchDataDataReader;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:51



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:464


#ifndef _TAO_TYPECODE_SkyworthMsgs_RgbPicSeq_GUARD
#define _TAO_TYPECODE_SkyworthMsgs_RgbPicSeq_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        SkyworthMsgs_RgbPicSeq_0 (
          ::CORBA::tk_sequence,
          &SkyworthMsgs::_tc_RgbPic,
          0U);
        
      ::CORBA::TypeCode_ptr const tc_SkyworthMsgs_RgbPicSeq_0 =
        &SkyworthMsgs_RgbPicSeq_0;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_SkyworthMsgs_RgbPicSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_RgbPicSeq (
    ::CORBA::tk_alias,
    "IDL:SkyworthMsgs/RgbPicSeq:1.0",
    "RgbPicSeq",
    &TAO::TypeCode::tc_SkyworthMsgs_RgbPicSeq_0);
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_RgbPicSeq =
    &_tao_tc_SkyworthMsgs_RgbPicSeq;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::RgbPicTypeSupport.

SkyworthMsgs::RgbPicTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::RgbPicTypeSupport>::duplicate (
    SkyworthMsgs::RgbPicTypeSupport_ptr p)
{
  return SkyworthMsgs::RgbPicTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::RgbPicTypeSupport>::release (
    SkyworthMsgs::RgbPicTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::RgbPicTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::RgbPicTypeSupport>::nil (void)
{
  return SkyworthMsgs::RgbPicTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::RgbPicTypeSupport>::marshal (
    const SkyworthMsgs::RgbPicTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::RgbPicTypeSupport::RgbPicTypeSupport (void)
{}

SkyworthMsgs::RgbPicTypeSupport::~RgbPicTypeSupport (void)
{
}

void
SkyworthMsgs::RgbPicTypeSupport::_tao_any_destructor (void *_tao_void_pointer)
{
  RgbPicTypeSupport *_tao_tmp_pointer =
    static_cast<RgbPicTypeSupport *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::RgbPicTypeSupport_ptr
SkyworthMsgs::RgbPicTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return RgbPicTypeSupport::_duplicate (
      dynamic_cast<RgbPicTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::RgbPicTypeSupport_ptr
SkyworthMsgs::RgbPicTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return RgbPicTypeSupport::_duplicate (
      dynamic_cast<RgbPicTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::RgbPicTypeSupport_ptr
SkyworthMsgs::RgbPicTypeSupport::_nil (void)
{
  return 0;
}

SkyworthMsgs::RgbPicTypeSupport_ptr
SkyworthMsgs::RgbPicTypeSupport::_duplicate (RgbPicTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::RgbPicTypeSupport::_tao_release (RgbPicTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::RgbPicTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/RgbPicTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::RgbPicTypeSupport::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/RgbPicTypeSupport:1.0";
}

::CORBA::Boolean
SkyworthMsgs::RgbPicTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_RgbPicTypeSupport (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/RgbPicTypeSupport:1.0",
    "RgbPicTypeSupport");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_RgbPicTypeSupport =
    &_tao_tc_SkyworthMsgs_RgbPicTypeSupport;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::RgbPicDataWriter.

SkyworthMsgs::RgbPicDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::RgbPicDataWriter>::duplicate (
    SkyworthMsgs::RgbPicDataWriter_ptr p)
{
  return SkyworthMsgs::RgbPicDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::RgbPicDataWriter>::release (
    SkyworthMsgs::RgbPicDataWriter_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::RgbPicDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::RgbPicDataWriter>::nil (void)
{
  return SkyworthMsgs::RgbPicDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::RgbPicDataWriter>::marshal (
    const SkyworthMsgs::RgbPicDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::RgbPicDataWriter::RgbPicDataWriter (void)
{}

SkyworthMsgs::RgbPicDataWriter::~RgbPicDataWriter (void)
{
}

void
SkyworthMsgs::RgbPicDataWriter::_tao_any_destructor (void *_tao_void_pointer)
{
  RgbPicDataWriter *_tao_tmp_pointer =
    static_cast<RgbPicDataWriter *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::RgbPicDataWriter_ptr
SkyworthMsgs::RgbPicDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return RgbPicDataWriter::_duplicate (
      dynamic_cast<RgbPicDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::RgbPicDataWriter_ptr
SkyworthMsgs::RgbPicDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return RgbPicDataWriter::_duplicate (
      dynamic_cast<RgbPicDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::RgbPicDataWriter_ptr
SkyworthMsgs::RgbPicDataWriter::_nil (void)
{
  return 0;
}

SkyworthMsgs::RgbPicDataWriter_ptr
SkyworthMsgs::RgbPicDataWriter::_duplicate (RgbPicDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::RgbPicDataWriter::_tao_release (RgbPicDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::RgbPicDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/RgbPicDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::RgbPicDataWriter::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/RgbPicDataWriter:1.0";
}

::CORBA::Boolean
SkyworthMsgs::RgbPicDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_RgbPicDataWriter (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/RgbPicDataWriter:1.0",
    "RgbPicDataWriter");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_RgbPicDataWriter =
    &_tao_tc_SkyworthMsgs_RgbPicDataWriter;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::RgbPicDataReader.

SkyworthMsgs::RgbPicDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::RgbPicDataReader>::duplicate (
    SkyworthMsgs::RgbPicDataReader_ptr p)
{
  return SkyworthMsgs::RgbPicDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::RgbPicDataReader>::release (
    SkyworthMsgs::RgbPicDataReader_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::RgbPicDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::RgbPicDataReader>::nil (void)
{
  return SkyworthMsgs::RgbPicDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::RgbPicDataReader>::marshal (
    const SkyworthMsgs::RgbPicDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::RgbPicDataReader::RgbPicDataReader (void)
{}

SkyworthMsgs::RgbPicDataReader::~RgbPicDataReader (void)
{
}

void
SkyworthMsgs::RgbPicDataReader::_tao_any_destructor (void *_tao_void_pointer)
{
  RgbPicDataReader *_tao_tmp_pointer =
    static_cast<RgbPicDataReader *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::RgbPicDataReader_ptr
SkyworthMsgs::RgbPicDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return RgbPicDataReader::_duplicate (
      dynamic_cast<RgbPicDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::RgbPicDataReader_ptr
SkyworthMsgs::RgbPicDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return RgbPicDataReader::_duplicate (
      dynamic_cast<RgbPicDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::RgbPicDataReader_ptr
SkyworthMsgs::RgbPicDataReader::_nil (void)
{
  return 0;
}

SkyworthMsgs::RgbPicDataReader_ptr
SkyworthMsgs::RgbPicDataReader::_duplicate (RgbPicDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::RgbPicDataReader::_tao_release (RgbPicDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::RgbPicDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/RgbPicDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::RgbPicDataReader::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/RgbPicDataReader:1.0";
}

::CORBA::Boolean
SkyworthMsgs::RgbPicDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_RgbPicDataReader (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/RgbPicDataReader:1.0",
    "RgbPicDataReader");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_RgbPicDataReader =
    &_tao_tc_SkyworthMsgs_RgbPicDataReader;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:51



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:464


#ifndef _TAO_TYPECODE_SkyworthMsgs_ObsDataSeq_GUARD
#define _TAO_TYPECODE_SkyworthMsgs_ObsDataSeq_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        SkyworthMsgs_ObsDataSeq_0 (
          ::CORBA::tk_sequence,
          &SkyworthMsgs::_tc_ObsData,
          0U);
        
      ::CORBA::TypeCode_ptr const tc_SkyworthMsgs_ObsDataSeq_0 =
        &SkyworthMsgs_ObsDataSeq_0;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_SkyworthMsgs_ObsDataSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_ObsDataSeq (
    ::CORBA::tk_alias,
    "IDL:SkyworthMsgs/ObsDataSeq:1.0",
    "ObsDataSeq",
    &TAO::TypeCode::tc_SkyworthMsgs_ObsDataSeq_0);
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_ObsDataSeq =
    &_tao_tc_SkyworthMsgs_ObsDataSeq;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::ObsDataTypeSupport.

SkyworthMsgs::ObsDataTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::ObsDataTypeSupport>::duplicate (
    SkyworthMsgs::ObsDataTypeSupport_ptr p)
{
  return SkyworthMsgs::ObsDataTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::ObsDataTypeSupport>::release (
    SkyworthMsgs::ObsDataTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::ObsDataTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::ObsDataTypeSupport>::nil (void)
{
  return SkyworthMsgs::ObsDataTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::ObsDataTypeSupport>::marshal (
    const SkyworthMsgs::ObsDataTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::ObsDataTypeSupport::ObsDataTypeSupport (void)
{}

SkyworthMsgs::ObsDataTypeSupport::~ObsDataTypeSupport (void)
{
}

void
SkyworthMsgs::ObsDataTypeSupport::_tao_any_destructor (void *_tao_void_pointer)
{
  ObsDataTypeSupport *_tao_tmp_pointer =
    static_cast<ObsDataTypeSupport *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::ObsDataTypeSupport_ptr
SkyworthMsgs::ObsDataTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return ObsDataTypeSupport::_duplicate (
      dynamic_cast<ObsDataTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::ObsDataTypeSupport_ptr
SkyworthMsgs::ObsDataTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return ObsDataTypeSupport::_duplicate (
      dynamic_cast<ObsDataTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::ObsDataTypeSupport_ptr
SkyworthMsgs::ObsDataTypeSupport::_nil (void)
{
  return 0;
}

SkyworthMsgs::ObsDataTypeSupport_ptr
SkyworthMsgs::ObsDataTypeSupport::_duplicate (ObsDataTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::ObsDataTypeSupport::_tao_release (ObsDataTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::ObsDataTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/ObsDataTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::ObsDataTypeSupport::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/ObsDataTypeSupport:1.0";
}

::CORBA::Boolean
SkyworthMsgs::ObsDataTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_ObsDataTypeSupport (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/ObsDataTypeSupport:1.0",
    "ObsDataTypeSupport");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_ObsDataTypeSupport =
    &_tao_tc_SkyworthMsgs_ObsDataTypeSupport;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::ObsDataDataWriter.

SkyworthMsgs::ObsDataDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::ObsDataDataWriter>::duplicate (
    SkyworthMsgs::ObsDataDataWriter_ptr p)
{
  return SkyworthMsgs::ObsDataDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::ObsDataDataWriter>::release (
    SkyworthMsgs::ObsDataDataWriter_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::ObsDataDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::ObsDataDataWriter>::nil (void)
{
  return SkyworthMsgs::ObsDataDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::ObsDataDataWriter>::marshal (
    const SkyworthMsgs::ObsDataDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::ObsDataDataWriter::ObsDataDataWriter (void)
{}

SkyworthMsgs::ObsDataDataWriter::~ObsDataDataWriter (void)
{
}

void
SkyworthMsgs::ObsDataDataWriter::_tao_any_destructor (void *_tao_void_pointer)
{
  ObsDataDataWriter *_tao_tmp_pointer =
    static_cast<ObsDataDataWriter *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::ObsDataDataWriter_ptr
SkyworthMsgs::ObsDataDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return ObsDataDataWriter::_duplicate (
      dynamic_cast<ObsDataDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::ObsDataDataWriter_ptr
SkyworthMsgs::ObsDataDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return ObsDataDataWriter::_duplicate (
      dynamic_cast<ObsDataDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::ObsDataDataWriter_ptr
SkyworthMsgs::ObsDataDataWriter::_nil (void)
{
  return 0;
}

SkyworthMsgs::ObsDataDataWriter_ptr
SkyworthMsgs::ObsDataDataWriter::_duplicate (ObsDataDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::ObsDataDataWriter::_tao_release (ObsDataDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::ObsDataDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/ObsDataDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::ObsDataDataWriter::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/ObsDataDataWriter:1.0";
}

::CORBA::Boolean
SkyworthMsgs::ObsDataDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_ObsDataDataWriter (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/ObsDataDataWriter:1.0",
    "ObsDataDataWriter");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_ObsDataDataWriter =
    &_tao_tc_SkyworthMsgs_ObsDataDataWriter;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::ObsDataDataReader.

SkyworthMsgs::ObsDataDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::ObsDataDataReader>::duplicate (
    SkyworthMsgs::ObsDataDataReader_ptr p)
{
  return SkyworthMsgs::ObsDataDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::ObsDataDataReader>::release (
    SkyworthMsgs::ObsDataDataReader_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::ObsDataDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::ObsDataDataReader>::nil (void)
{
  return SkyworthMsgs::ObsDataDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::ObsDataDataReader>::marshal (
    const SkyworthMsgs::ObsDataDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::ObsDataDataReader::ObsDataDataReader (void)
{}

SkyworthMsgs::ObsDataDataReader::~ObsDataDataReader (void)
{
}

void
SkyworthMsgs::ObsDataDataReader::_tao_any_destructor (void *_tao_void_pointer)
{
  ObsDataDataReader *_tao_tmp_pointer =
    static_cast<ObsDataDataReader *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::ObsDataDataReader_ptr
SkyworthMsgs::ObsDataDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return ObsDataDataReader::_duplicate (
      dynamic_cast<ObsDataDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::ObsDataDataReader_ptr
SkyworthMsgs::ObsDataDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return ObsDataDataReader::_duplicate (
      dynamic_cast<ObsDataDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::ObsDataDataReader_ptr
SkyworthMsgs::ObsDataDataReader::_nil (void)
{
  return 0;
}

SkyworthMsgs::ObsDataDataReader_ptr
SkyworthMsgs::ObsDataDataReader::_duplicate (ObsDataDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::ObsDataDataReader::_tao_release (ObsDataDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::ObsDataDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/ObsDataDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::ObsDataDataReader::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/ObsDataDataReader:1.0";
}

::CORBA::Boolean
SkyworthMsgs::ObsDataDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_ObsDataDataReader (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/ObsDataDataReader:1.0",
    "ObsDataDataReader");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_ObsDataDataReader =
    &_tao_tc_SkyworthMsgs_ObsDataDataReader;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:51



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:464


#ifndef _TAO_TYPECODE_SkyworthMsgs_CleanerStatusSeq_GUARD
#define _TAO_TYPECODE_SkyworthMsgs_CleanerStatusSeq_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        SkyworthMsgs_CleanerStatusSeq_0 (
          ::CORBA::tk_sequence,
          &SkyworthMsgs::_tc_CleanerStatus,
          0U);
        
      ::CORBA::TypeCode_ptr const tc_SkyworthMsgs_CleanerStatusSeq_0 =
        &SkyworthMsgs_CleanerStatusSeq_0;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_SkyworthMsgs_CleanerStatusSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_CleanerStatusSeq (
    ::CORBA::tk_alias,
    "IDL:SkyworthMsgs/CleanerStatusSeq:1.0",
    "CleanerStatusSeq",
    &TAO::TypeCode::tc_SkyworthMsgs_CleanerStatusSeq_0);
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_CleanerStatusSeq =
    &_tao_tc_SkyworthMsgs_CleanerStatusSeq;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::CleanerStatusTypeSupport.

SkyworthMsgs::CleanerStatusTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::CleanerStatusTypeSupport>::duplicate (
    SkyworthMsgs::CleanerStatusTypeSupport_ptr p)
{
  return SkyworthMsgs::CleanerStatusTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::CleanerStatusTypeSupport>::release (
    SkyworthMsgs::CleanerStatusTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::CleanerStatusTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::CleanerStatusTypeSupport>::nil (void)
{
  return SkyworthMsgs::CleanerStatusTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::CleanerStatusTypeSupport>::marshal (
    const SkyworthMsgs::CleanerStatusTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::CleanerStatusTypeSupport::CleanerStatusTypeSupport (void)
{}

SkyworthMsgs::CleanerStatusTypeSupport::~CleanerStatusTypeSupport (void)
{
}

void
SkyworthMsgs::CleanerStatusTypeSupport::_tao_any_destructor (void *_tao_void_pointer)
{
  CleanerStatusTypeSupport *_tao_tmp_pointer =
    static_cast<CleanerStatusTypeSupport *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::CleanerStatusTypeSupport_ptr
SkyworthMsgs::CleanerStatusTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return CleanerStatusTypeSupport::_duplicate (
      dynamic_cast<CleanerStatusTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::CleanerStatusTypeSupport_ptr
SkyworthMsgs::CleanerStatusTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return CleanerStatusTypeSupport::_duplicate (
      dynamic_cast<CleanerStatusTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::CleanerStatusTypeSupport_ptr
SkyworthMsgs::CleanerStatusTypeSupport::_nil (void)
{
  return 0;
}

SkyworthMsgs::CleanerStatusTypeSupport_ptr
SkyworthMsgs::CleanerStatusTypeSupport::_duplicate (CleanerStatusTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::CleanerStatusTypeSupport::_tao_release (CleanerStatusTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::CleanerStatusTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/CleanerStatusTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::CleanerStatusTypeSupport::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/CleanerStatusTypeSupport:1.0";
}

::CORBA::Boolean
SkyworthMsgs::CleanerStatusTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_CleanerStatusTypeSupport (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/CleanerStatusTypeSupport:1.0",
    "CleanerStatusTypeSupport");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_CleanerStatusTypeSupport =
    &_tao_tc_SkyworthMsgs_CleanerStatusTypeSupport;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::CleanerStatusDataWriter.

SkyworthMsgs::CleanerStatusDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::CleanerStatusDataWriter>::duplicate (
    SkyworthMsgs::CleanerStatusDataWriter_ptr p)
{
  return SkyworthMsgs::CleanerStatusDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::CleanerStatusDataWriter>::release (
    SkyworthMsgs::CleanerStatusDataWriter_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::CleanerStatusDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::CleanerStatusDataWriter>::nil (void)
{
  return SkyworthMsgs::CleanerStatusDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::CleanerStatusDataWriter>::marshal (
    const SkyworthMsgs::CleanerStatusDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::CleanerStatusDataWriter::CleanerStatusDataWriter (void)
{}

SkyworthMsgs::CleanerStatusDataWriter::~CleanerStatusDataWriter (void)
{
}

void
SkyworthMsgs::CleanerStatusDataWriter::_tao_any_destructor (void *_tao_void_pointer)
{
  CleanerStatusDataWriter *_tao_tmp_pointer =
    static_cast<CleanerStatusDataWriter *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::CleanerStatusDataWriter_ptr
SkyworthMsgs::CleanerStatusDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return CleanerStatusDataWriter::_duplicate (
      dynamic_cast<CleanerStatusDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::CleanerStatusDataWriter_ptr
SkyworthMsgs::CleanerStatusDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return CleanerStatusDataWriter::_duplicate (
      dynamic_cast<CleanerStatusDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::CleanerStatusDataWriter_ptr
SkyworthMsgs::CleanerStatusDataWriter::_nil (void)
{
  return 0;
}

SkyworthMsgs::CleanerStatusDataWriter_ptr
SkyworthMsgs::CleanerStatusDataWriter::_duplicate (CleanerStatusDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::CleanerStatusDataWriter::_tao_release (CleanerStatusDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::CleanerStatusDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/CleanerStatusDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::CleanerStatusDataWriter::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/CleanerStatusDataWriter:1.0";
}

::CORBA::Boolean
SkyworthMsgs::CleanerStatusDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_CleanerStatusDataWriter (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/CleanerStatusDataWriter:1.0",
    "CleanerStatusDataWriter");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_CleanerStatusDataWriter =
    &_tao_tc_SkyworthMsgs_CleanerStatusDataWriter;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::CleanerStatusDataReader.

SkyworthMsgs::CleanerStatusDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::CleanerStatusDataReader>::duplicate (
    SkyworthMsgs::CleanerStatusDataReader_ptr p)
{
  return SkyworthMsgs::CleanerStatusDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::CleanerStatusDataReader>::release (
    SkyworthMsgs::CleanerStatusDataReader_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::CleanerStatusDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::CleanerStatusDataReader>::nil (void)
{
  return SkyworthMsgs::CleanerStatusDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::CleanerStatusDataReader>::marshal (
    const SkyworthMsgs::CleanerStatusDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::CleanerStatusDataReader::CleanerStatusDataReader (void)
{}

SkyworthMsgs::CleanerStatusDataReader::~CleanerStatusDataReader (void)
{
}

void
SkyworthMsgs::CleanerStatusDataReader::_tao_any_destructor (void *_tao_void_pointer)
{
  CleanerStatusDataReader *_tao_tmp_pointer =
    static_cast<CleanerStatusDataReader *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::CleanerStatusDataReader_ptr
SkyworthMsgs::CleanerStatusDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return CleanerStatusDataReader::_duplicate (
      dynamic_cast<CleanerStatusDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::CleanerStatusDataReader_ptr
SkyworthMsgs::CleanerStatusDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return CleanerStatusDataReader::_duplicate (
      dynamic_cast<CleanerStatusDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::CleanerStatusDataReader_ptr
SkyworthMsgs::CleanerStatusDataReader::_nil (void)
{
  return 0;
}

SkyworthMsgs::CleanerStatusDataReader_ptr
SkyworthMsgs::CleanerStatusDataReader::_duplicate (CleanerStatusDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::CleanerStatusDataReader::_tao_release (CleanerStatusDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::CleanerStatusDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/CleanerStatusDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::CleanerStatusDataReader::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/CleanerStatusDataReader:1.0";
}

::CORBA::Boolean
SkyworthMsgs::CleanerStatusDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_CleanerStatusDataReader (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/CleanerStatusDataReader:1.0",
    "CleanerStatusDataReader");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_CleanerStatusDataReader =
    &_tao_tc_SkyworthMsgs_CleanerStatusDataReader;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:51



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:464


#ifndef _TAO_TYPECODE_SkyworthMsgs_CleanerCommandSeq_GUARD
#define _TAO_TYPECODE_SkyworthMsgs_CleanerCommandSeq_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        SkyworthMsgs_CleanerCommandSeq_0 (
          ::CORBA::tk_sequence,
          &SkyworthMsgs::_tc_CleanerCommand,
          0U);
        
      ::CORBA::TypeCode_ptr const tc_SkyworthMsgs_CleanerCommandSeq_0 =
        &SkyworthMsgs_CleanerCommandSeq_0;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_SkyworthMsgs_CleanerCommandSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_CleanerCommandSeq (
    ::CORBA::tk_alias,
    "IDL:SkyworthMsgs/CleanerCommandSeq:1.0",
    "CleanerCommandSeq",
    &TAO::TypeCode::tc_SkyworthMsgs_CleanerCommandSeq_0);
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_CleanerCommandSeq =
    &_tao_tc_SkyworthMsgs_CleanerCommandSeq;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::CleanerCommandTypeSupport.

SkyworthMsgs::CleanerCommandTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::CleanerCommandTypeSupport>::duplicate (
    SkyworthMsgs::CleanerCommandTypeSupport_ptr p)
{
  return SkyworthMsgs::CleanerCommandTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::CleanerCommandTypeSupport>::release (
    SkyworthMsgs::CleanerCommandTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::CleanerCommandTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::CleanerCommandTypeSupport>::nil (void)
{
  return SkyworthMsgs::CleanerCommandTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::CleanerCommandTypeSupport>::marshal (
    const SkyworthMsgs::CleanerCommandTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::CleanerCommandTypeSupport::CleanerCommandTypeSupport (void)
{}

SkyworthMsgs::CleanerCommandTypeSupport::~CleanerCommandTypeSupport (void)
{
}

void
SkyworthMsgs::CleanerCommandTypeSupport::_tao_any_destructor (void *_tao_void_pointer)
{
  CleanerCommandTypeSupport *_tao_tmp_pointer =
    static_cast<CleanerCommandTypeSupport *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::CleanerCommandTypeSupport_ptr
SkyworthMsgs::CleanerCommandTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return CleanerCommandTypeSupport::_duplicate (
      dynamic_cast<CleanerCommandTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::CleanerCommandTypeSupport_ptr
SkyworthMsgs::CleanerCommandTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return CleanerCommandTypeSupport::_duplicate (
      dynamic_cast<CleanerCommandTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::CleanerCommandTypeSupport_ptr
SkyworthMsgs::CleanerCommandTypeSupport::_nil (void)
{
  return 0;
}

SkyworthMsgs::CleanerCommandTypeSupport_ptr
SkyworthMsgs::CleanerCommandTypeSupport::_duplicate (CleanerCommandTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::CleanerCommandTypeSupport::_tao_release (CleanerCommandTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::CleanerCommandTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/CleanerCommandTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::CleanerCommandTypeSupport::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/CleanerCommandTypeSupport:1.0";
}

::CORBA::Boolean
SkyworthMsgs::CleanerCommandTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_CleanerCommandTypeSupport (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/CleanerCommandTypeSupport:1.0",
    "CleanerCommandTypeSupport");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_CleanerCommandTypeSupport =
    &_tao_tc_SkyworthMsgs_CleanerCommandTypeSupport;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::CleanerCommandDataWriter.

SkyworthMsgs::CleanerCommandDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::CleanerCommandDataWriter>::duplicate (
    SkyworthMsgs::CleanerCommandDataWriter_ptr p)
{
  return SkyworthMsgs::CleanerCommandDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::CleanerCommandDataWriter>::release (
    SkyworthMsgs::CleanerCommandDataWriter_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::CleanerCommandDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::CleanerCommandDataWriter>::nil (void)
{
  return SkyworthMsgs::CleanerCommandDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::CleanerCommandDataWriter>::marshal (
    const SkyworthMsgs::CleanerCommandDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::CleanerCommandDataWriter::CleanerCommandDataWriter (void)
{}

SkyworthMsgs::CleanerCommandDataWriter::~CleanerCommandDataWriter (void)
{
}

void
SkyworthMsgs::CleanerCommandDataWriter::_tao_any_destructor (void *_tao_void_pointer)
{
  CleanerCommandDataWriter *_tao_tmp_pointer =
    static_cast<CleanerCommandDataWriter *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::CleanerCommandDataWriter_ptr
SkyworthMsgs::CleanerCommandDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return CleanerCommandDataWriter::_duplicate (
      dynamic_cast<CleanerCommandDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::CleanerCommandDataWriter_ptr
SkyworthMsgs::CleanerCommandDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return CleanerCommandDataWriter::_duplicate (
      dynamic_cast<CleanerCommandDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::CleanerCommandDataWriter_ptr
SkyworthMsgs::CleanerCommandDataWriter::_nil (void)
{
  return 0;
}

SkyworthMsgs::CleanerCommandDataWriter_ptr
SkyworthMsgs::CleanerCommandDataWriter::_duplicate (CleanerCommandDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::CleanerCommandDataWriter::_tao_release (CleanerCommandDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::CleanerCommandDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/CleanerCommandDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::CleanerCommandDataWriter::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/CleanerCommandDataWriter:1.0";
}

::CORBA::Boolean
SkyworthMsgs::CleanerCommandDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_CleanerCommandDataWriter (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/CleanerCommandDataWriter:1.0",
    "CleanerCommandDataWriter");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_CleanerCommandDataWriter =
    &_tao_tc_SkyworthMsgs_CleanerCommandDataWriter;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::CleanerCommandDataReader.

SkyworthMsgs::CleanerCommandDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::CleanerCommandDataReader>::duplicate (
    SkyworthMsgs::CleanerCommandDataReader_ptr p)
{
  return SkyworthMsgs::CleanerCommandDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::CleanerCommandDataReader>::release (
    SkyworthMsgs::CleanerCommandDataReader_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::CleanerCommandDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::CleanerCommandDataReader>::nil (void)
{
  return SkyworthMsgs::CleanerCommandDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::CleanerCommandDataReader>::marshal (
    const SkyworthMsgs::CleanerCommandDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::CleanerCommandDataReader::CleanerCommandDataReader (void)
{}

SkyworthMsgs::CleanerCommandDataReader::~CleanerCommandDataReader (void)
{
}

void
SkyworthMsgs::CleanerCommandDataReader::_tao_any_destructor (void *_tao_void_pointer)
{
  CleanerCommandDataReader *_tao_tmp_pointer =
    static_cast<CleanerCommandDataReader *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::CleanerCommandDataReader_ptr
SkyworthMsgs::CleanerCommandDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return CleanerCommandDataReader::_duplicate (
      dynamic_cast<CleanerCommandDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::CleanerCommandDataReader_ptr
SkyworthMsgs::CleanerCommandDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return CleanerCommandDataReader::_duplicate (
      dynamic_cast<CleanerCommandDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::CleanerCommandDataReader_ptr
SkyworthMsgs::CleanerCommandDataReader::_nil (void)
{
  return 0;
}

SkyworthMsgs::CleanerCommandDataReader_ptr
SkyworthMsgs::CleanerCommandDataReader::_duplicate (CleanerCommandDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::CleanerCommandDataReader::_tao_release (CleanerCommandDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::CleanerCommandDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/CleanerCommandDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::CleanerCommandDataReader::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/CleanerCommandDataReader:1.0";
}

::CORBA::Boolean
SkyworthMsgs::CleanerCommandDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_CleanerCommandDataReader (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/CleanerCommandDataReader:1.0",
    "CleanerCommandDataReader");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_CleanerCommandDataReader =
    &_tao_tc_SkyworthMsgs_CleanerCommandDataReader;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:51



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:464


#ifndef _TAO_TYPECODE_SkyworthMsgs_ElecQuantitySeq_GUARD
#define _TAO_TYPECODE_SkyworthMsgs_ElecQuantitySeq_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        SkyworthMsgs_ElecQuantitySeq_0 (
          ::CORBA::tk_sequence,
          &SkyworthMsgs::_tc_ElecQuantity,
          0U);
        
      ::CORBA::TypeCode_ptr const tc_SkyworthMsgs_ElecQuantitySeq_0 =
        &SkyworthMsgs_ElecQuantitySeq_0;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_SkyworthMsgs_ElecQuantitySeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_ElecQuantitySeq (
    ::CORBA::tk_alias,
    "IDL:SkyworthMsgs/ElecQuantitySeq:1.0",
    "ElecQuantitySeq",
    &TAO::TypeCode::tc_SkyworthMsgs_ElecQuantitySeq_0);
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_ElecQuantitySeq =
    &_tao_tc_SkyworthMsgs_ElecQuantitySeq;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::ElecQuantityTypeSupport.

SkyworthMsgs::ElecQuantityTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::ElecQuantityTypeSupport>::duplicate (
    SkyworthMsgs::ElecQuantityTypeSupport_ptr p)
{
  return SkyworthMsgs::ElecQuantityTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::ElecQuantityTypeSupport>::release (
    SkyworthMsgs::ElecQuantityTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::ElecQuantityTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::ElecQuantityTypeSupport>::nil (void)
{
  return SkyworthMsgs::ElecQuantityTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::ElecQuantityTypeSupport>::marshal (
    const SkyworthMsgs::ElecQuantityTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::ElecQuantityTypeSupport::ElecQuantityTypeSupport (void)
{}

SkyworthMsgs::ElecQuantityTypeSupport::~ElecQuantityTypeSupport (void)
{
}

void
SkyworthMsgs::ElecQuantityTypeSupport::_tao_any_destructor (void *_tao_void_pointer)
{
  ElecQuantityTypeSupport *_tao_tmp_pointer =
    static_cast<ElecQuantityTypeSupport *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::ElecQuantityTypeSupport_ptr
SkyworthMsgs::ElecQuantityTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return ElecQuantityTypeSupport::_duplicate (
      dynamic_cast<ElecQuantityTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::ElecQuantityTypeSupport_ptr
SkyworthMsgs::ElecQuantityTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return ElecQuantityTypeSupport::_duplicate (
      dynamic_cast<ElecQuantityTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::ElecQuantityTypeSupport_ptr
SkyworthMsgs::ElecQuantityTypeSupport::_nil (void)
{
  return 0;
}

SkyworthMsgs::ElecQuantityTypeSupport_ptr
SkyworthMsgs::ElecQuantityTypeSupport::_duplicate (ElecQuantityTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::ElecQuantityTypeSupport::_tao_release (ElecQuantityTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::ElecQuantityTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/ElecQuantityTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::ElecQuantityTypeSupport::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/ElecQuantityTypeSupport:1.0";
}

::CORBA::Boolean
SkyworthMsgs::ElecQuantityTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_ElecQuantityTypeSupport (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/ElecQuantityTypeSupport:1.0",
    "ElecQuantityTypeSupport");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_ElecQuantityTypeSupport =
    &_tao_tc_SkyworthMsgs_ElecQuantityTypeSupport;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::ElecQuantityDataWriter.

SkyworthMsgs::ElecQuantityDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::ElecQuantityDataWriter>::duplicate (
    SkyworthMsgs::ElecQuantityDataWriter_ptr p)
{
  return SkyworthMsgs::ElecQuantityDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::ElecQuantityDataWriter>::release (
    SkyworthMsgs::ElecQuantityDataWriter_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::ElecQuantityDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::ElecQuantityDataWriter>::nil (void)
{
  return SkyworthMsgs::ElecQuantityDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::ElecQuantityDataWriter>::marshal (
    const SkyworthMsgs::ElecQuantityDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::ElecQuantityDataWriter::ElecQuantityDataWriter (void)
{}

SkyworthMsgs::ElecQuantityDataWriter::~ElecQuantityDataWriter (void)
{
}

void
SkyworthMsgs::ElecQuantityDataWriter::_tao_any_destructor (void *_tao_void_pointer)
{
  ElecQuantityDataWriter *_tao_tmp_pointer =
    static_cast<ElecQuantityDataWriter *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::ElecQuantityDataWriter_ptr
SkyworthMsgs::ElecQuantityDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return ElecQuantityDataWriter::_duplicate (
      dynamic_cast<ElecQuantityDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::ElecQuantityDataWriter_ptr
SkyworthMsgs::ElecQuantityDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return ElecQuantityDataWriter::_duplicate (
      dynamic_cast<ElecQuantityDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::ElecQuantityDataWriter_ptr
SkyworthMsgs::ElecQuantityDataWriter::_nil (void)
{
  return 0;
}

SkyworthMsgs::ElecQuantityDataWriter_ptr
SkyworthMsgs::ElecQuantityDataWriter::_duplicate (ElecQuantityDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::ElecQuantityDataWriter::_tao_release (ElecQuantityDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::ElecQuantityDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/ElecQuantityDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::ElecQuantityDataWriter::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/ElecQuantityDataWriter:1.0";
}

::CORBA::Boolean
SkyworthMsgs::ElecQuantityDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_ElecQuantityDataWriter (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/ElecQuantityDataWriter:1.0",
    "ElecQuantityDataWriter");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_ElecQuantityDataWriter =
    &_tao_tc_SkyworthMsgs_ElecQuantityDataWriter;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::ElecQuantityDataReader.

SkyworthMsgs::ElecQuantityDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::ElecQuantityDataReader>::duplicate (
    SkyworthMsgs::ElecQuantityDataReader_ptr p)
{
  return SkyworthMsgs::ElecQuantityDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::ElecQuantityDataReader>::release (
    SkyworthMsgs::ElecQuantityDataReader_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::ElecQuantityDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::ElecQuantityDataReader>::nil (void)
{
  return SkyworthMsgs::ElecQuantityDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::ElecQuantityDataReader>::marshal (
    const SkyworthMsgs::ElecQuantityDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::ElecQuantityDataReader::ElecQuantityDataReader (void)
{}

SkyworthMsgs::ElecQuantityDataReader::~ElecQuantityDataReader (void)
{
}

void
SkyworthMsgs::ElecQuantityDataReader::_tao_any_destructor (void *_tao_void_pointer)
{
  ElecQuantityDataReader *_tao_tmp_pointer =
    static_cast<ElecQuantityDataReader *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::ElecQuantityDataReader_ptr
SkyworthMsgs::ElecQuantityDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return ElecQuantityDataReader::_duplicate (
      dynamic_cast<ElecQuantityDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::ElecQuantityDataReader_ptr
SkyworthMsgs::ElecQuantityDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return ElecQuantityDataReader::_duplicate (
      dynamic_cast<ElecQuantityDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::ElecQuantityDataReader_ptr
SkyworthMsgs::ElecQuantityDataReader::_nil (void)
{
  return 0;
}

SkyworthMsgs::ElecQuantityDataReader_ptr
SkyworthMsgs::ElecQuantityDataReader::_duplicate (ElecQuantityDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::ElecQuantityDataReader::_tao_release (ElecQuantityDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::ElecQuantityDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/ElecQuantityDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::ElecQuantityDataReader::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/ElecQuantityDataReader:1.0";
}

::CORBA::Boolean
SkyworthMsgs::ElecQuantityDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_ElecQuantityDataReader (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/ElecQuantityDataReader:1.0",
    "ElecQuantityDataReader");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_ElecQuantityDataReader =
    &_tao_tc_SkyworthMsgs_ElecQuantityDataReader;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:51



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:464


#ifndef _TAO_TYPECODE_SkyworthMsgs_EmgStopSeq_GUARD
#define _TAO_TYPECODE_SkyworthMsgs_EmgStopSeq_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        SkyworthMsgs_EmgStopSeq_0 (
          ::CORBA::tk_sequence,
          &SkyworthMsgs::_tc_EmgStop,
          0U);
        
      ::CORBA::TypeCode_ptr const tc_SkyworthMsgs_EmgStopSeq_0 =
        &SkyworthMsgs_EmgStopSeq_0;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_SkyworthMsgs_EmgStopSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_EmgStopSeq (
    ::CORBA::tk_alias,
    "IDL:SkyworthMsgs/EmgStopSeq:1.0",
    "EmgStopSeq",
    &TAO::TypeCode::tc_SkyworthMsgs_EmgStopSeq_0);
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_EmgStopSeq =
    &_tao_tc_SkyworthMsgs_EmgStopSeq;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::EmgStopTypeSupport.

SkyworthMsgs::EmgStopTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::EmgStopTypeSupport>::duplicate (
    SkyworthMsgs::EmgStopTypeSupport_ptr p)
{
  return SkyworthMsgs::EmgStopTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::EmgStopTypeSupport>::release (
    SkyworthMsgs::EmgStopTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::EmgStopTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::EmgStopTypeSupport>::nil (void)
{
  return SkyworthMsgs::EmgStopTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::EmgStopTypeSupport>::marshal (
    const SkyworthMsgs::EmgStopTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::EmgStopTypeSupport::EmgStopTypeSupport (void)
{}

SkyworthMsgs::EmgStopTypeSupport::~EmgStopTypeSupport (void)
{
}

void
SkyworthMsgs::EmgStopTypeSupport::_tao_any_destructor (void *_tao_void_pointer)
{
  EmgStopTypeSupport *_tao_tmp_pointer =
    static_cast<EmgStopTypeSupport *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::EmgStopTypeSupport_ptr
SkyworthMsgs::EmgStopTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return EmgStopTypeSupport::_duplicate (
      dynamic_cast<EmgStopTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::EmgStopTypeSupport_ptr
SkyworthMsgs::EmgStopTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return EmgStopTypeSupport::_duplicate (
      dynamic_cast<EmgStopTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::EmgStopTypeSupport_ptr
SkyworthMsgs::EmgStopTypeSupport::_nil (void)
{
  return 0;
}

SkyworthMsgs::EmgStopTypeSupport_ptr
SkyworthMsgs::EmgStopTypeSupport::_duplicate (EmgStopTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::EmgStopTypeSupport::_tao_release (EmgStopTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::EmgStopTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/EmgStopTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::EmgStopTypeSupport::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/EmgStopTypeSupport:1.0";
}

::CORBA::Boolean
SkyworthMsgs::EmgStopTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_EmgStopTypeSupport (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/EmgStopTypeSupport:1.0",
    "EmgStopTypeSupport");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_EmgStopTypeSupport =
    &_tao_tc_SkyworthMsgs_EmgStopTypeSupport;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::EmgStopDataWriter.

SkyworthMsgs::EmgStopDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::EmgStopDataWriter>::duplicate (
    SkyworthMsgs::EmgStopDataWriter_ptr p)
{
  return SkyworthMsgs::EmgStopDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::EmgStopDataWriter>::release (
    SkyworthMsgs::EmgStopDataWriter_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::EmgStopDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::EmgStopDataWriter>::nil (void)
{
  return SkyworthMsgs::EmgStopDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::EmgStopDataWriter>::marshal (
    const SkyworthMsgs::EmgStopDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::EmgStopDataWriter::EmgStopDataWriter (void)
{}

SkyworthMsgs::EmgStopDataWriter::~EmgStopDataWriter (void)
{
}

void
SkyworthMsgs::EmgStopDataWriter::_tao_any_destructor (void *_tao_void_pointer)
{
  EmgStopDataWriter *_tao_tmp_pointer =
    static_cast<EmgStopDataWriter *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::EmgStopDataWriter_ptr
SkyworthMsgs::EmgStopDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return EmgStopDataWriter::_duplicate (
      dynamic_cast<EmgStopDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::EmgStopDataWriter_ptr
SkyworthMsgs::EmgStopDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return EmgStopDataWriter::_duplicate (
      dynamic_cast<EmgStopDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::EmgStopDataWriter_ptr
SkyworthMsgs::EmgStopDataWriter::_nil (void)
{
  return 0;
}

SkyworthMsgs::EmgStopDataWriter_ptr
SkyworthMsgs::EmgStopDataWriter::_duplicate (EmgStopDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::EmgStopDataWriter::_tao_release (EmgStopDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::EmgStopDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/EmgStopDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::EmgStopDataWriter::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/EmgStopDataWriter:1.0";
}

::CORBA::Boolean
SkyworthMsgs::EmgStopDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_EmgStopDataWriter (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/EmgStopDataWriter:1.0",
    "EmgStopDataWriter");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_EmgStopDataWriter =
    &_tao_tc_SkyworthMsgs_EmgStopDataWriter;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::EmgStopDataReader.

SkyworthMsgs::EmgStopDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::EmgStopDataReader>::duplicate (
    SkyworthMsgs::EmgStopDataReader_ptr p)
{
  return SkyworthMsgs::EmgStopDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::EmgStopDataReader>::release (
    SkyworthMsgs::EmgStopDataReader_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::EmgStopDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::EmgStopDataReader>::nil (void)
{
  return SkyworthMsgs::EmgStopDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::EmgStopDataReader>::marshal (
    const SkyworthMsgs::EmgStopDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::EmgStopDataReader::EmgStopDataReader (void)
{}

SkyworthMsgs::EmgStopDataReader::~EmgStopDataReader (void)
{
}

void
SkyworthMsgs::EmgStopDataReader::_tao_any_destructor (void *_tao_void_pointer)
{
  EmgStopDataReader *_tao_tmp_pointer =
    static_cast<EmgStopDataReader *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::EmgStopDataReader_ptr
SkyworthMsgs::EmgStopDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return EmgStopDataReader::_duplicate (
      dynamic_cast<EmgStopDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::EmgStopDataReader_ptr
SkyworthMsgs::EmgStopDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return EmgStopDataReader::_duplicate (
      dynamic_cast<EmgStopDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::EmgStopDataReader_ptr
SkyworthMsgs::EmgStopDataReader::_nil (void)
{
  return 0;
}

SkyworthMsgs::EmgStopDataReader_ptr
SkyworthMsgs::EmgStopDataReader::_duplicate (EmgStopDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::EmgStopDataReader::_tao_release (EmgStopDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::EmgStopDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/EmgStopDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::EmgStopDataReader::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/EmgStopDataReader:1.0";
}

::CORBA::Boolean
SkyworthMsgs::EmgStopDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_EmgStopDataReader (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/EmgStopDataReader:1.0",
    "EmgStopDataReader");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_EmgStopDataReader =
    &_tao_tc_SkyworthMsgs_EmgStopDataReader;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:51



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:464


#ifndef _TAO_TYPECODE_SkyworthMsgs_SlamStatusSeq_GUARD
#define _TAO_TYPECODE_SkyworthMsgs_SlamStatusSeq_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        SkyworthMsgs_SlamStatusSeq_0 (
          ::CORBA::tk_sequence,
          &SkyworthMsgs::_tc_SlamStatus,
          0U);
        
      ::CORBA::TypeCode_ptr const tc_SkyworthMsgs_SlamStatusSeq_0 =
        &SkyworthMsgs_SlamStatusSeq_0;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_SkyworthMsgs_SlamStatusSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_SlamStatusSeq (
    ::CORBA::tk_alias,
    "IDL:SkyworthMsgs/SlamStatusSeq:1.0",
    "SlamStatusSeq",
    &TAO::TypeCode::tc_SkyworthMsgs_SlamStatusSeq_0);
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_SlamStatusSeq =
    &_tao_tc_SkyworthMsgs_SlamStatusSeq;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::SlamStatusTypeSupport.

SkyworthMsgs::SlamStatusTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::SlamStatusTypeSupport>::duplicate (
    SkyworthMsgs::SlamStatusTypeSupport_ptr p)
{
  return SkyworthMsgs::SlamStatusTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::SlamStatusTypeSupport>::release (
    SkyworthMsgs::SlamStatusTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::SlamStatusTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::SlamStatusTypeSupport>::nil (void)
{
  return SkyworthMsgs::SlamStatusTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::SlamStatusTypeSupport>::marshal (
    const SkyworthMsgs::SlamStatusTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::SlamStatusTypeSupport::SlamStatusTypeSupport (void)
{}

SkyworthMsgs::SlamStatusTypeSupport::~SlamStatusTypeSupport (void)
{
}

void
SkyworthMsgs::SlamStatusTypeSupport::_tao_any_destructor (void *_tao_void_pointer)
{
  SlamStatusTypeSupport *_tao_tmp_pointer =
    static_cast<SlamStatusTypeSupport *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::SlamStatusTypeSupport_ptr
SkyworthMsgs::SlamStatusTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SlamStatusTypeSupport::_duplicate (
      dynamic_cast<SlamStatusTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::SlamStatusTypeSupport_ptr
SkyworthMsgs::SlamStatusTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SlamStatusTypeSupport::_duplicate (
      dynamic_cast<SlamStatusTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::SlamStatusTypeSupport_ptr
SkyworthMsgs::SlamStatusTypeSupport::_nil (void)
{
  return 0;
}

SkyworthMsgs::SlamStatusTypeSupport_ptr
SkyworthMsgs::SlamStatusTypeSupport::_duplicate (SlamStatusTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::SlamStatusTypeSupport::_tao_release (SlamStatusTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::SlamStatusTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/SlamStatusTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::SlamStatusTypeSupport::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/SlamStatusTypeSupport:1.0";
}

::CORBA::Boolean
SkyworthMsgs::SlamStatusTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_SlamStatusTypeSupport (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/SlamStatusTypeSupport:1.0",
    "SlamStatusTypeSupport");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_SlamStatusTypeSupport =
    &_tao_tc_SkyworthMsgs_SlamStatusTypeSupport;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::SlamStatusDataWriter.

SkyworthMsgs::SlamStatusDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::SlamStatusDataWriter>::duplicate (
    SkyworthMsgs::SlamStatusDataWriter_ptr p)
{
  return SkyworthMsgs::SlamStatusDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::SlamStatusDataWriter>::release (
    SkyworthMsgs::SlamStatusDataWriter_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::SlamStatusDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::SlamStatusDataWriter>::nil (void)
{
  return SkyworthMsgs::SlamStatusDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::SlamStatusDataWriter>::marshal (
    const SkyworthMsgs::SlamStatusDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::SlamStatusDataWriter::SlamStatusDataWriter (void)
{}

SkyworthMsgs::SlamStatusDataWriter::~SlamStatusDataWriter (void)
{
}

void
SkyworthMsgs::SlamStatusDataWriter::_tao_any_destructor (void *_tao_void_pointer)
{
  SlamStatusDataWriter *_tao_tmp_pointer =
    static_cast<SlamStatusDataWriter *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::SlamStatusDataWriter_ptr
SkyworthMsgs::SlamStatusDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SlamStatusDataWriter::_duplicate (
      dynamic_cast<SlamStatusDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::SlamStatusDataWriter_ptr
SkyworthMsgs::SlamStatusDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SlamStatusDataWriter::_duplicate (
      dynamic_cast<SlamStatusDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::SlamStatusDataWriter_ptr
SkyworthMsgs::SlamStatusDataWriter::_nil (void)
{
  return 0;
}

SkyworthMsgs::SlamStatusDataWriter_ptr
SkyworthMsgs::SlamStatusDataWriter::_duplicate (SlamStatusDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::SlamStatusDataWriter::_tao_release (SlamStatusDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::SlamStatusDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/SlamStatusDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::SlamStatusDataWriter::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/SlamStatusDataWriter:1.0";
}

::CORBA::Boolean
SkyworthMsgs::SlamStatusDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_SlamStatusDataWriter (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/SlamStatusDataWriter:1.0",
    "SlamStatusDataWriter");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_SlamStatusDataWriter =
    &_tao_tc_SkyworthMsgs_SlamStatusDataWriter;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::SlamStatusDataReader.

SkyworthMsgs::SlamStatusDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::SlamStatusDataReader>::duplicate (
    SkyworthMsgs::SlamStatusDataReader_ptr p)
{
  return SkyworthMsgs::SlamStatusDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::SlamStatusDataReader>::release (
    SkyworthMsgs::SlamStatusDataReader_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::SlamStatusDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::SlamStatusDataReader>::nil (void)
{
  return SkyworthMsgs::SlamStatusDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::SlamStatusDataReader>::marshal (
    const SkyworthMsgs::SlamStatusDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::SlamStatusDataReader::SlamStatusDataReader (void)
{}

SkyworthMsgs::SlamStatusDataReader::~SlamStatusDataReader (void)
{
}

void
SkyworthMsgs::SlamStatusDataReader::_tao_any_destructor (void *_tao_void_pointer)
{
  SlamStatusDataReader *_tao_tmp_pointer =
    static_cast<SlamStatusDataReader *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::SlamStatusDataReader_ptr
SkyworthMsgs::SlamStatusDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SlamStatusDataReader::_duplicate (
      dynamic_cast<SlamStatusDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::SlamStatusDataReader_ptr
SkyworthMsgs::SlamStatusDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SlamStatusDataReader::_duplicate (
      dynamic_cast<SlamStatusDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::SlamStatusDataReader_ptr
SkyworthMsgs::SlamStatusDataReader::_nil (void)
{
  return 0;
}

SkyworthMsgs::SlamStatusDataReader_ptr
SkyworthMsgs::SlamStatusDataReader::_duplicate (SlamStatusDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::SlamStatusDataReader::_tao_release (SlamStatusDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::SlamStatusDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/SlamStatusDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::SlamStatusDataReader::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/SlamStatusDataReader:1.0";
}

::CORBA::Boolean
SkyworthMsgs::SlamStatusDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_SlamStatusDataReader (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/SlamStatusDataReader:1.0",
    "SlamStatusDataReader");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_SlamStatusDataReader =
    &_tao_tc_SkyworthMsgs_SlamStatusDataReader;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:51



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:464


#ifndef _TAO_TYPECODE_SkyworthMsgs_SlamCommandSeq_GUARD
#define _TAO_TYPECODE_SkyworthMsgs_SlamCommandSeq_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        SkyworthMsgs_SlamCommandSeq_0 (
          ::CORBA::tk_sequence,
          &SkyworthMsgs::_tc_SlamCommand,
          0U);
        
      ::CORBA::TypeCode_ptr const tc_SkyworthMsgs_SlamCommandSeq_0 =
        &SkyworthMsgs_SlamCommandSeq_0;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_SkyworthMsgs_SlamCommandSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_SlamCommandSeq (
    ::CORBA::tk_alias,
    "IDL:SkyworthMsgs/SlamCommandSeq:1.0",
    "SlamCommandSeq",
    &TAO::TypeCode::tc_SkyworthMsgs_SlamCommandSeq_0);
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_SlamCommandSeq =
    &_tao_tc_SkyworthMsgs_SlamCommandSeq;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::SlamCommandTypeSupport.

SkyworthMsgs::SlamCommandTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::SlamCommandTypeSupport>::duplicate (
    SkyworthMsgs::SlamCommandTypeSupport_ptr p)
{
  return SkyworthMsgs::SlamCommandTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::SlamCommandTypeSupport>::release (
    SkyworthMsgs::SlamCommandTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::SlamCommandTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::SlamCommandTypeSupport>::nil (void)
{
  return SkyworthMsgs::SlamCommandTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::SlamCommandTypeSupport>::marshal (
    const SkyworthMsgs::SlamCommandTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::SlamCommandTypeSupport::SlamCommandTypeSupport (void)
{}

SkyworthMsgs::SlamCommandTypeSupport::~SlamCommandTypeSupport (void)
{
}

void
SkyworthMsgs::SlamCommandTypeSupport::_tao_any_destructor (void *_tao_void_pointer)
{
  SlamCommandTypeSupport *_tao_tmp_pointer =
    static_cast<SlamCommandTypeSupport *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::SlamCommandTypeSupport_ptr
SkyworthMsgs::SlamCommandTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SlamCommandTypeSupport::_duplicate (
      dynamic_cast<SlamCommandTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::SlamCommandTypeSupport_ptr
SkyworthMsgs::SlamCommandTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SlamCommandTypeSupport::_duplicate (
      dynamic_cast<SlamCommandTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::SlamCommandTypeSupport_ptr
SkyworthMsgs::SlamCommandTypeSupport::_nil (void)
{
  return 0;
}

SkyworthMsgs::SlamCommandTypeSupport_ptr
SkyworthMsgs::SlamCommandTypeSupport::_duplicate (SlamCommandTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::SlamCommandTypeSupport::_tao_release (SlamCommandTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::SlamCommandTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/SlamCommandTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::SlamCommandTypeSupport::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/SlamCommandTypeSupport:1.0";
}

::CORBA::Boolean
SkyworthMsgs::SlamCommandTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_SlamCommandTypeSupport (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/SlamCommandTypeSupport:1.0",
    "SlamCommandTypeSupport");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_SlamCommandTypeSupport =
    &_tao_tc_SkyworthMsgs_SlamCommandTypeSupport;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::SlamCommandDataWriter.

SkyworthMsgs::SlamCommandDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::SlamCommandDataWriter>::duplicate (
    SkyworthMsgs::SlamCommandDataWriter_ptr p)
{
  return SkyworthMsgs::SlamCommandDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::SlamCommandDataWriter>::release (
    SkyworthMsgs::SlamCommandDataWriter_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::SlamCommandDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::SlamCommandDataWriter>::nil (void)
{
  return SkyworthMsgs::SlamCommandDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::SlamCommandDataWriter>::marshal (
    const SkyworthMsgs::SlamCommandDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::SlamCommandDataWriter::SlamCommandDataWriter (void)
{}

SkyworthMsgs::SlamCommandDataWriter::~SlamCommandDataWriter (void)
{
}

void
SkyworthMsgs::SlamCommandDataWriter::_tao_any_destructor (void *_tao_void_pointer)
{
  SlamCommandDataWriter *_tao_tmp_pointer =
    static_cast<SlamCommandDataWriter *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::SlamCommandDataWriter_ptr
SkyworthMsgs::SlamCommandDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SlamCommandDataWriter::_duplicate (
      dynamic_cast<SlamCommandDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::SlamCommandDataWriter_ptr
SkyworthMsgs::SlamCommandDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SlamCommandDataWriter::_duplicate (
      dynamic_cast<SlamCommandDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::SlamCommandDataWriter_ptr
SkyworthMsgs::SlamCommandDataWriter::_nil (void)
{
  return 0;
}

SkyworthMsgs::SlamCommandDataWriter_ptr
SkyworthMsgs::SlamCommandDataWriter::_duplicate (SlamCommandDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::SlamCommandDataWriter::_tao_release (SlamCommandDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::SlamCommandDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/SlamCommandDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::SlamCommandDataWriter::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/SlamCommandDataWriter:1.0";
}

::CORBA::Boolean
SkyworthMsgs::SlamCommandDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_SlamCommandDataWriter (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/SlamCommandDataWriter:1.0",
    "SlamCommandDataWriter");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_SlamCommandDataWriter =
    &_tao_tc_SkyworthMsgs_SlamCommandDataWriter;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::SlamCommandDataReader.

SkyworthMsgs::SlamCommandDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::SlamCommandDataReader>::duplicate (
    SkyworthMsgs::SlamCommandDataReader_ptr p)
{
  return SkyworthMsgs::SlamCommandDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::SlamCommandDataReader>::release (
    SkyworthMsgs::SlamCommandDataReader_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::SlamCommandDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::SlamCommandDataReader>::nil (void)
{
  return SkyworthMsgs::SlamCommandDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::SlamCommandDataReader>::marshal (
    const SkyworthMsgs::SlamCommandDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::SlamCommandDataReader::SlamCommandDataReader (void)
{}

SkyworthMsgs::SlamCommandDataReader::~SlamCommandDataReader (void)
{
}

void
SkyworthMsgs::SlamCommandDataReader::_tao_any_destructor (void *_tao_void_pointer)
{
  SlamCommandDataReader *_tao_tmp_pointer =
    static_cast<SlamCommandDataReader *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::SlamCommandDataReader_ptr
SkyworthMsgs::SlamCommandDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SlamCommandDataReader::_duplicate (
      dynamic_cast<SlamCommandDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::SlamCommandDataReader_ptr
SkyworthMsgs::SlamCommandDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SlamCommandDataReader::_duplicate (
      dynamic_cast<SlamCommandDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::SlamCommandDataReader_ptr
SkyworthMsgs::SlamCommandDataReader::_nil (void)
{
  return 0;
}

SkyworthMsgs::SlamCommandDataReader_ptr
SkyworthMsgs::SlamCommandDataReader::_duplicate (SlamCommandDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::SlamCommandDataReader::_tao_release (SlamCommandDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::SlamCommandDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/SlamCommandDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::SlamCommandDataReader::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/SlamCommandDataReader:1.0";
}

::CORBA::Boolean
SkyworthMsgs::SlamCommandDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_SlamCommandDataReader (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/SlamCommandDataReader:1.0",
    "SlamCommandDataReader");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_SlamCommandDataReader =
    &_tao_tc_SkyworthMsgs_SlamCommandDataReader;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:51



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:464


#ifndef _TAO_TYPECODE_SkyworthMsgs_SlamInteStatusSeq_GUARD
#define _TAO_TYPECODE_SkyworthMsgs_SlamInteStatusSeq_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        SkyworthMsgs_SlamInteStatusSeq_0 (
          ::CORBA::tk_sequence,
          &SkyworthMsgs::_tc_SlamInteStatus,
          0U);
        
      ::CORBA::TypeCode_ptr const tc_SkyworthMsgs_SlamInteStatusSeq_0 =
        &SkyworthMsgs_SlamInteStatusSeq_0;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_SkyworthMsgs_SlamInteStatusSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_SlamInteStatusSeq (
    ::CORBA::tk_alias,
    "IDL:SkyworthMsgs/SlamInteStatusSeq:1.0",
    "SlamInteStatusSeq",
    &TAO::TypeCode::tc_SkyworthMsgs_SlamInteStatusSeq_0);
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_SlamInteStatusSeq =
    &_tao_tc_SkyworthMsgs_SlamInteStatusSeq;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::SlamInteStatusTypeSupport.

SkyworthMsgs::SlamInteStatusTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::SlamInteStatusTypeSupport>::duplicate (
    SkyworthMsgs::SlamInteStatusTypeSupport_ptr p)
{
  return SkyworthMsgs::SlamInteStatusTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::SlamInteStatusTypeSupport>::release (
    SkyworthMsgs::SlamInteStatusTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::SlamInteStatusTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::SlamInteStatusTypeSupport>::nil (void)
{
  return SkyworthMsgs::SlamInteStatusTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::SlamInteStatusTypeSupport>::marshal (
    const SkyworthMsgs::SlamInteStatusTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::SlamInteStatusTypeSupport::SlamInteStatusTypeSupport (void)
{}

SkyworthMsgs::SlamInteStatusTypeSupport::~SlamInteStatusTypeSupport (void)
{
}

void
SkyworthMsgs::SlamInteStatusTypeSupport::_tao_any_destructor (void *_tao_void_pointer)
{
  SlamInteStatusTypeSupport *_tao_tmp_pointer =
    static_cast<SlamInteStatusTypeSupport *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::SlamInteStatusTypeSupport_ptr
SkyworthMsgs::SlamInteStatusTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SlamInteStatusTypeSupport::_duplicate (
      dynamic_cast<SlamInteStatusTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::SlamInteStatusTypeSupport_ptr
SkyworthMsgs::SlamInteStatusTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SlamInteStatusTypeSupport::_duplicate (
      dynamic_cast<SlamInteStatusTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::SlamInteStatusTypeSupport_ptr
SkyworthMsgs::SlamInteStatusTypeSupport::_nil (void)
{
  return 0;
}

SkyworthMsgs::SlamInteStatusTypeSupport_ptr
SkyworthMsgs::SlamInteStatusTypeSupport::_duplicate (SlamInteStatusTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::SlamInteStatusTypeSupport::_tao_release (SlamInteStatusTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::SlamInteStatusTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/SlamInteStatusTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::SlamInteStatusTypeSupport::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/SlamInteStatusTypeSupport:1.0";
}

::CORBA::Boolean
SkyworthMsgs::SlamInteStatusTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_SlamInteStatusTypeSupport (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/SlamInteStatusTypeSupport:1.0",
    "SlamInteStatusTypeSupport");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_SlamInteStatusTypeSupport =
    &_tao_tc_SkyworthMsgs_SlamInteStatusTypeSupport;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::SlamInteStatusDataWriter.

SkyworthMsgs::SlamInteStatusDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::SlamInteStatusDataWriter>::duplicate (
    SkyworthMsgs::SlamInteStatusDataWriter_ptr p)
{
  return SkyworthMsgs::SlamInteStatusDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::SlamInteStatusDataWriter>::release (
    SkyworthMsgs::SlamInteStatusDataWriter_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::SlamInteStatusDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::SlamInteStatusDataWriter>::nil (void)
{
  return SkyworthMsgs::SlamInteStatusDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::SlamInteStatusDataWriter>::marshal (
    const SkyworthMsgs::SlamInteStatusDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::SlamInteStatusDataWriter::SlamInteStatusDataWriter (void)
{}

SkyworthMsgs::SlamInteStatusDataWriter::~SlamInteStatusDataWriter (void)
{
}

void
SkyworthMsgs::SlamInteStatusDataWriter::_tao_any_destructor (void *_tao_void_pointer)
{
  SlamInteStatusDataWriter *_tao_tmp_pointer =
    static_cast<SlamInteStatusDataWriter *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::SlamInteStatusDataWriter_ptr
SkyworthMsgs::SlamInteStatusDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SlamInteStatusDataWriter::_duplicate (
      dynamic_cast<SlamInteStatusDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::SlamInteStatusDataWriter_ptr
SkyworthMsgs::SlamInteStatusDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SlamInteStatusDataWriter::_duplicate (
      dynamic_cast<SlamInteStatusDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::SlamInteStatusDataWriter_ptr
SkyworthMsgs::SlamInteStatusDataWriter::_nil (void)
{
  return 0;
}

SkyworthMsgs::SlamInteStatusDataWriter_ptr
SkyworthMsgs::SlamInteStatusDataWriter::_duplicate (SlamInteStatusDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::SlamInteStatusDataWriter::_tao_release (SlamInteStatusDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::SlamInteStatusDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/SlamInteStatusDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::SlamInteStatusDataWriter::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/SlamInteStatusDataWriter:1.0";
}

::CORBA::Boolean
SkyworthMsgs::SlamInteStatusDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_SlamInteStatusDataWriter (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/SlamInteStatusDataWriter:1.0",
    "SlamInteStatusDataWriter");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_SlamInteStatusDataWriter =
    &_tao_tc_SkyworthMsgs_SlamInteStatusDataWriter;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::SlamInteStatusDataReader.

SkyworthMsgs::SlamInteStatusDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::SlamInteStatusDataReader>::duplicate (
    SkyworthMsgs::SlamInteStatusDataReader_ptr p)
{
  return SkyworthMsgs::SlamInteStatusDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::SlamInteStatusDataReader>::release (
    SkyworthMsgs::SlamInteStatusDataReader_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::SlamInteStatusDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::SlamInteStatusDataReader>::nil (void)
{
  return SkyworthMsgs::SlamInteStatusDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::SlamInteStatusDataReader>::marshal (
    const SkyworthMsgs::SlamInteStatusDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::SlamInteStatusDataReader::SlamInteStatusDataReader (void)
{}

SkyworthMsgs::SlamInteStatusDataReader::~SlamInteStatusDataReader (void)
{
}

void
SkyworthMsgs::SlamInteStatusDataReader::_tao_any_destructor (void *_tao_void_pointer)
{
  SlamInteStatusDataReader *_tao_tmp_pointer =
    static_cast<SlamInteStatusDataReader *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::SlamInteStatusDataReader_ptr
SkyworthMsgs::SlamInteStatusDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SlamInteStatusDataReader::_duplicate (
      dynamic_cast<SlamInteStatusDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::SlamInteStatusDataReader_ptr
SkyworthMsgs::SlamInteStatusDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SlamInteStatusDataReader::_duplicate (
      dynamic_cast<SlamInteStatusDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::SlamInteStatusDataReader_ptr
SkyworthMsgs::SlamInteStatusDataReader::_nil (void)
{
  return 0;
}

SkyworthMsgs::SlamInteStatusDataReader_ptr
SkyworthMsgs::SlamInteStatusDataReader::_duplicate (SlamInteStatusDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::SlamInteStatusDataReader::_tao_release (SlamInteStatusDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::SlamInteStatusDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/SlamInteStatusDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::SlamInteStatusDataReader::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/SlamInteStatusDataReader:1.0";
}

::CORBA::Boolean
SkyworthMsgs::SlamInteStatusDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_SlamInteStatusDataReader (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/SlamInteStatusDataReader:1.0",
    "SlamInteStatusDataReader");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_SlamInteStatusDataReader =
    &_tao_tc_SkyworthMsgs_SlamInteStatusDataReader;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:51



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:464


#ifndef _TAO_TYPECODE_SkyworthMsgs_SlamInteCommandSeq_GUARD
#define _TAO_TYPECODE_SkyworthMsgs_SlamInteCommandSeq_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        SkyworthMsgs_SlamInteCommandSeq_0 (
          ::CORBA::tk_sequence,
          &SkyworthMsgs::_tc_SlamInteCommand,
          0U);
        
      ::CORBA::TypeCode_ptr const tc_SkyworthMsgs_SlamInteCommandSeq_0 =
        &SkyworthMsgs_SlamInteCommandSeq_0;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_SkyworthMsgs_SlamInteCommandSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_SlamInteCommandSeq (
    ::CORBA::tk_alias,
    "IDL:SkyworthMsgs/SlamInteCommandSeq:1.0",
    "SlamInteCommandSeq",
    &TAO::TypeCode::tc_SkyworthMsgs_SlamInteCommandSeq_0);
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_SlamInteCommandSeq =
    &_tao_tc_SkyworthMsgs_SlamInteCommandSeq;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::SlamInteCommandTypeSupport.

SkyworthMsgs::SlamInteCommandTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::SlamInteCommandTypeSupport>::duplicate (
    SkyworthMsgs::SlamInteCommandTypeSupport_ptr p)
{
  return SkyworthMsgs::SlamInteCommandTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::SlamInteCommandTypeSupport>::release (
    SkyworthMsgs::SlamInteCommandTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::SlamInteCommandTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::SlamInteCommandTypeSupport>::nil (void)
{
  return SkyworthMsgs::SlamInteCommandTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::SlamInteCommandTypeSupport>::marshal (
    const SkyworthMsgs::SlamInteCommandTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::SlamInteCommandTypeSupport::SlamInteCommandTypeSupport (void)
{}

SkyworthMsgs::SlamInteCommandTypeSupport::~SlamInteCommandTypeSupport (void)
{
}

void
SkyworthMsgs::SlamInteCommandTypeSupport::_tao_any_destructor (void *_tao_void_pointer)
{
  SlamInteCommandTypeSupport *_tao_tmp_pointer =
    static_cast<SlamInteCommandTypeSupport *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::SlamInteCommandTypeSupport_ptr
SkyworthMsgs::SlamInteCommandTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SlamInteCommandTypeSupport::_duplicate (
      dynamic_cast<SlamInteCommandTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::SlamInteCommandTypeSupport_ptr
SkyworthMsgs::SlamInteCommandTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SlamInteCommandTypeSupport::_duplicate (
      dynamic_cast<SlamInteCommandTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::SlamInteCommandTypeSupport_ptr
SkyworthMsgs::SlamInteCommandTypeSupport::_nil (void)
{
  return 0;
}

SkyworthMsgs::SlamInteCommandTypeSupport_ptr
SkyworthMsgs::SlamInteCommandTypeSupport::_duplicate (SlamInteCommandTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::SlamInteCommandTypeSupport::_tao_release (SlamInteCommandTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::SlamInteCommandTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/SlamInteCommandTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::SlamInteCommandTypeSupport::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/SlamInteCommandTypeSupport:1.0";
}

::CORBA::Boolean
SkyworthMsgs::SlamInteCommandTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_SlamInteCommandTypeSupport (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/SlamInteCommandTypeSupport:1.0",
    "SlamInteCommandTypeSupport");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_SlamInteCommandTypeSupport =
    &_tao_tc_SkyworthMsgs_SlamInteCommandTypeSupport;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::SlamInteCommandDataWriter.

SkyworthMsgs::SlamInteCommandDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::SlamInteCommandDataWriter>::duplicate (
    SkyworthMsgs::SlamInteCommandDataWriter_ptr p)
{
  return SkyworthMsgs::SlamInteCommandDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::SlamInteCommandDataWriter>::release (
    SkyworthMsgs::SlamInteCommandDataWriter_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::SlamInteCommandDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::SlamInteCommandDataWriter>::nil (void)
{
  return SkyworthMsgs::SlamInteCommandDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::SlamInteCommandDataWriter>::marshal (
    const SkyworthMsgs::SlamInteCommandDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::SlamInteCommandDataWriter::SlamInteCommandDataWriter (void)
{}

SkyworthMsgs::SlamInteCommandDataWriter::~SlamInteCommandDataWriter (void)
{
}

void
SkyworthMsgs::SlamInteCommandDataWriter::_tao_any_destructor (void *_tao_void_pointer)
{
  SlamInteCommandDataWriter *_tao_tmp_pointer =
    static_cast<SlamInteCommandDataWriter *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::SlamInteCommandDataWriter_ptr
SkyworthMsgs::SlamInteCommandDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SlamInteCommandDataWriter::_duplicate (
      dynamic_cast<SlamInteCommandDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::SlamInteCommandDataWriter_ptr
SkyworthMsgs::SlamInteCommandDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SlamInteCommandDataWriter::_duplicate (
      dynamic_cast<SlamInteCommandDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::SlamInteCommandDataWriter_ptr
SkyworthMsgs::SlamInteCommandDataWriter::_nil (void)
{
  return 0;
}

SkyworthMsgs::SlamInteCommandDataWriter_ptr
SkyworthMsgs::SlamInteCommandDataWriter::_duplicate (SlamInteCommandDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::SlamInteCommandDataWriter::_tao_release (SlamInteCommandDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::SlamInteCommandDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/SlamInteCommandDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::SlamInteCommandDataWriter::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/SlamInteCommandDataWriter:1.0";
}

::CORBA::Boolean
SkyworthMsgs::SlamInteCommandDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_SlamInteCommandDataWriter (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/SlamInteCommandDataWriter:1.0",
    "SlamInteCommandDataWriter");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_SlamInteCommandDataWriter =
    &_tao_tc_SkyworthMsgs_SlamInteCommandDataWriter;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::SlamInteCommandDataReader.

SkyworthMsgs::SlamInteCommandDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::SlamInteCommandDataReader>::duplicate (
    SkyworthMsgs::SlamInteCommandDataReader_ptr p)
{
  return SkyworthMsgs::SlamInteCommandDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::SlamInteCommandDataReader>::release (
    SkyworthMsgs::SlamInteCommandDataReader_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::SlamInteCommandDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::SlamInteCommandDataReader>::nil (void)
{
  return SkyworthMsgs::SlamInteCommandDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::SlamInteCommandDataReader>::marshal (
    const SkyworthMsgs::SlamInteCommandDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::SlamInteCommandDataReader::SlamInteCommandDataReader (void)
{}

SkyworthMsgs::SlamInteCommandDataReader::~SlamInteCommandDataReader (void)
{
}

void
SkyworthMsgs::SlamInteCommandDataReader::_tao_any_destructor (void *_tao_void_pointer)
{
  SlamInteCommandDataReader *_tao_tmp_pointer =
    static_cast<SlamInteCommandDataReader *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::SlamInteCommandDataReader_ptr
SkyworthMsgs::SlamInteCommandDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SlamInteCommandDataReader::_duplicate (
      dynamic_cast<SlamInteCommandDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::SlamInteCommandDataReader_ptr
SkyworthMsgs::SlamInteCommandDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SlamInteCommandDataReader::_duplicate (
      dynamic_cast<SlamInteCommandDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::SlamInteCommandDataReader_ptr
SkyworthMsgs::SlamInteCommandDataReader::_nil (void)
{
  return 0;
}

SkyworthMsgs::SlamInteCommandDataReader_ptr
SkyworthMsgs::SlamInteCommandDataReader::_duplicate (SlamInteCommandDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::SlamInteCommandDataReader::_tao_release (SlamInteCommandDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::SlamInteCommandDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/SlamInteCommandDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::SlamInteCommandDataReader::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/SlamInteCommandDataReader:1.0";
}

::CORBA::Boolean
SkyworthMsgs::SlamInteCommandDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_SlamInteCommandDataReader (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/SlamInteCommandDataReader:1.0",
    "SlamInteCommandDataReader");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_SlamInteCommandDataReader =
    &_tao_tc_SkyworthMsgs_SlamInteCommandDataReader;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:51



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:464


#ifndef _TAO_TYPECODE_SkyworthMsgs_PatrolStatusSeq_GUARD
#define _TAO_TYPECODE_SkyworthMsgs_PatrolStatusSeq_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        SkyworthMsgs_PatrolStatusSeq_0 (
          ::CORBA::tk_sequence,
          &SkyworthMsgs::_tc_PatrolStatus,
          0U);
        
      ::CORBA::TypeCode_ptr const tc_SkyworthMsgs_PatrolStatusSeq_0 =
        &SkyworthMsgs_PatrolStatusSeq_0;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_SkyworthMsgs_PatrolStatusSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_PatrolStatusSeq (
    ::CORBA::tk_alias,
    "IDL:SkyworthMsgs/PatrolStatusSeq:1.0",
    "PatrolStatusSeq",
    &TAO::TypeCode::tc_SkyworthMsgs_PatrolStatusSeq_0);
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_PatrolStatusSeq =
    &_tao_tc_SkyworthMsgs_PatrolStatusSeq;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::PatrolStatusTypeSupport.

SkyworthMsgs::PatrolStatusTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::PatrolStatusTypeSupport>::duplicate (
    SkyworthMsgs::PatrolStatusTypeSupport_ptr p)
{
  return SkyworthMsgs::PatrolStatusTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::PatrolStatusTypeSupport>::release (
    SkyworthMsgs::PatrolStatusTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::PatrolStatusTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::PatrolStatusTypeSupport>::nil (void)
{
  return SkyworthMsgs::PatrolStatusTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::PatrolStatusTypeSupport>::marshal (
    const SkyworthMsgs::PatrolStatusTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::PatrolStatusTypeSupport::PatrolStatusTypeSupport (void)
{}

SkyworthMsgs::PatrolStatusTypeSupport::~PatrolStatusTypeSupport (void)
{
}

void
SkyworthMsgs::PatrolStatusTypeSupport::_tao_any_destructor (void *_tao_void_pointer)
{
  PatrolStatusTypeSupport *_tao_tmp_pointer =
    static_cast<PatrolStatusTypeSupport *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::PatrolStatusTypeSupport_ptr
SkyworthMsgs::PatrolStatusTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PatrolStatusTypeSupport::_duplicate (
      dynamic_cast<PatrolStatusTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::PatrolStatusTypeSupport_ptr
SkyworthMsgs::PatrolStatusTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PatrolStatusTypeSupport::_duplicate (
      dynamic_cast<PatrolStatusTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::PatrolStatusTypeSupport_ptr
SkyworthMsgs::PatrolStatusTypeSupport::_nil (void)
{
  return 0;
}

SkyworthMsgs::PatrolStatusTypeSupport_ptr
SkyworthMsgs::PatrolStatusTypeSupport::_duplicate (PatrolStatusTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::PatrolStatusTypeSupport::_tao_release (PatrolStatusTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::PatrolStatusTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/PatrolStatusTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::PatrolStatusTypeSupport::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/PatrolStatusTypeSupport:1.0";
}

::CORBA::Boolean
SkyworthMsgs::PatrolStatusTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_PatrolStatusTypeSupport (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/PatrolStatusTypeSupport:1.0",
    "PatrolStatusTypeSupport");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_PatrolStatusTypeSupport =
    &_tao_tc_SkyworthMsgs_PatrolStatusTypeSupport;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::PatrolStatusDataWriter.

SkyworthMsgs::PatrolStatusDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::PatrolStatusDataWriter>::duplicate (
    SkyworthMsgs::PatrolStatusDataWriter_ptr p)
{
  return SkyworthMsgs::PatrolStatusDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::PatrolStatusDataWriter>::release (
    SkyworthMsgs::PatrolStatusDataWriter_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::PatrolStatusDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::PatrolStatusDataWriter>::nil (void)
{
  return SkyworthMsgs::PatrolStatusDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::PatrolStatusDataWriter>::marshal (
    const SkyworthMsgs::PatrolStatusDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::PatrolStatusDataWriter::PatrolStatusDataWriter (void)
{}

SkyworthMsgs::PatrolStatusDataWriter::~PatrolStatusDataWriter (void)
{
}

void
SkyworthMsgs::PatrolStatusDataWriter::_tao_any_destructor (void *_tao_void_pointer)
{
  PatrolStatusDataWriter *_tao_tmp_pointer =
    static_cast<PatrolStatusDataWriter *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::PatrolStatusDataWriter_ptr
SkyworthMsgs::PatrolStatusDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PatrolStatusDataWriter::_duplicate (
      dynamic_cast<PatrolStatusDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::PatrolStatusDataWriter_ptr
SkyworthMsgs::PatrolStatusDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PatrolStatusDataWriter::_duplicate (
      dynamic_cast<PatrolStatusDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::PatrolStatusDataWriter_ptr
SkyworthMsgs::PatrolStatusDataWriter::_nil (void)
{
  return 0;
}

SkyworthMsgs::PatrolStatusDataWriter_ptr
SkyworthMsgs::PatrolStatusDataWriter::_duplicate (PatrolStatusDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::PatrolStatusDataWriter::_tao_release (PatrolStatusDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::PatrolStatusDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/PatrolStatusDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::PatrolStatusDataWriter::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/PatrolStatusDataWriter:1.0";
}

::CORBA::Boolean
SkyworthMsgs::PatrolStatusDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_PatrolStatusDataWriter (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/PatrolStatusDataWriter:1.0",
    "PatrolStatusDataWriter");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_PatrolStatusDataWriter =
    &_tao_tc_SkyworthMsgs_PatrolStatusDataWriter;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::PatrolStatusDataReader.

SkyworthMsgs::PatrolStatusDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::PatrolStatusDataReader>::duplicate (
    SkyworthMsgs::PatrolStatusDataReader_ptr p)
{
  return SkyworthMsgs::PatrolStatusDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::PatrolStatusDataReader>::release (
    SkyworthMsgs::PatrolStatusDataReader_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::PatrolStatusDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::PatrolStatusDataReader>::nil (void)
{
  return SkyworthMsgs::PatrolStatusDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::PatrolStatusDataReader>::marshal (
    const SkyworthMsgs::PatrolStatusDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::PatrolStatusDataReader::PatrolStatusDataReader (void)
{}

SkyworthMsgs::PatrolStatusDataReader::~PatrolStatusDataReader (void)
{
}

void
SkyworthMsgs::PatrolStatusDataReader::_tao_any_destructor (void *_tao_void_pointer)
{
  PatrolStatusDataReader *_tao_tmp_pointer =
    static_cast<PatrolStatusDataReader *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::PatrolStatusDataReader_ptr
SkyworthMsgs::PatrolStatusDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PatrolStatusDataReader::_duplicate (
      dynamic_cast<PatrolStatusDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::PatrolStatusDataReader_ptr
SkyworthMsgs::PatrolStatusDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PatrolStatusDataReader::_duplicate (
      dynamic_cast<PatrolStatusDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::PatrolStatusDataReader_ptr
SkyworthMsgs::PatrolStatusDataReader::_nil (void)
{
  return 0;
}

SkyworthMsgs::PatrolStatusDataReader_ptr
SkyworthMsgs::PatrolStatusDataReader::_duplicate (PatrolStatusDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::PatrolStatusDataReader::_tao_release (PatrolStatusDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::PatrolStatusDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/PatrolStatusDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::PatrolStatusDataReader::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/PatrolStatusDataReader:1.0";
}

::CORBA::Boolean
SkyworthMsgs::PatrolStatusDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_PatrolStatusDataReader (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/PatrolStatusDataReader:1.0",
    "PatrolStatusDataReader");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_PatrolStatusDataReader =
    &_tao_tc_SkyworthMsgs_PatrolStatusDataReader;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:51



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:464


#ifndef _TAO_TYPECODE_SkyworthMsgs_PatrolCommandSeq_GUARD
#define _TAO_TYPECODE_SkyworthMsgs_PatrolCommandSeq_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        SkyworthMsgs_PatrolCommandSeq_0 (
          ::CORBA::tk_sequence,
          &SkyworthMsgs::_tc_PatrolCommand,
          0U);
        
      ::CORBA::TypeCode_ptr const tc_SkyworthMsgs_PatrolCommandSeq_0 =
        &SkyworthMsgs_PatrolCommandSeq_0;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_SkyworthMsgs_PatrolCommandSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_PatrolCommandSeq (
    ::CORBA::tk_alias,
    "IDL:SkyworthMsgs/PatrolCommandSeq:1.0",
    "PatrolCommandSeq",
    &TAO::TypeCode::tc_SkyworthMsgs_PatrolCommandSeq_0);
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_PatrolCommandSeq =
    &_tao_tc_SkyworthMsgs_PatrolCommandSeq;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::PatrolCommandTypeSupport.

SkyworthMsgs::PatrolCommandTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::PatrolCommandTypeSupport>::duplicate (
    SkyworthMsgs::PatrolCommandTypeSupport_ptr p)
{
  return SkyworthMsgs::PatrolCommandTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::PatrolCommandTypeSupport>::release (
    SkyworthMsgs::PatrolCommandTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::PatrolCommandTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::PatrolCommandTypeSupport>::nil (void)
{
  return SkyworthMsgs::PatrolCommandTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::PatrolCommandTypeSupport>::marshal (
    const SkyworthMsgs::PatrolCommandTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::PatrolCommandTypeSupport::PatrolCommandTypeSupport (void)
{}

SkyworthMsgs::PatrolCommandTypeSupport::~PatrolCommandTypeSupport (void)
{
}

void
SkyworthMsgs::PatrolCommandTypeSupport::_tao_any_destructor (void *_tao_void_pointer)
{
  PatrolCommandTypeSupport *_tao_tmp_pointer =
    static_cast<PatrolCommandTypeSupport *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::PatrolCommandTypeSupport_ptr
SkyworthMsgs::PatrolCommandTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PatrolCommandTypeSupport::_duplicate (
      dynamic_cast<PatrolCommandTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::PatrolCommandTypeSupport_ptr
SkyworthMsgs::PatrolCommandTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PatrolCommandTypeSupport::_duplicate (
      dynamic_cast<PatrolCommandTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::PatrolCommandTypeSupport_ptr
SkyworthMsgs::PatrolCommandTypeSupport::_nil (void)
{
  return 0;
}

SkyworthMsgs::PatrolCommandTypeSupport_ptr
SkyworthMsgs::PatrolCommandTypeSupport::_duplicate (PatrolCommandTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::PatrolCommandTypeSupport::_tao_release (PatrolCommandTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::PatrolCommandTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/PatrolCommandTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::PatrolCommandTypeSupport::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/PatrolCommandTypeSupport:1.0";
}

::CORBA::Boolean
SkyworthMsgs::PatrolCommandTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_PatrolCommandTypeSupport (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/PatrolCommandTypeSupport:1.0",
    "PatrolCommandTypeSupport");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_PatrolCommandTypeSupport =
    &_tao_tc_SkyworthMsgs_PatrolCommandTypeSupport;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::PatrolCommandDataWriter.

SkyworthMsgs::PatrolCommandDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::PatrolCommandDataWriter>::duplicate (
    SkyworthMsgs::PatrolCommandDataWriter_ptr p)
{
  return SkyworthMsgs::PatrolCommandDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::PatrolCommandDataWriter>::release (
    SkyworthMsgs::PatrolCommandDataWriter_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::PatrolCommandDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::PatrolCommandDataWriter>::nil (void)
{
  return SkyworthMsgs::PatrolCommandDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::PatrolCommandDataWriter>::marshal (
    const SkyworthMsgs::PatrolCommandDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::PatrolCommandDataWriter::PatrolCommandDataWriter (void)
{}

SkyworthMsgs::PatrolCommandDataWriter::~PatrolCommandDataWriter (void)
{
}

void
SkyworthMsgs::PatrolCommandDataWriter::_tao_any_destructor (void *_tao_void_pointer)
{
  PatrolCommandDataWriter *_tao_tmp_pointer =
    static_cast<PatrolCommandDataWriter *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::PatrolCommandDataWriter_ptr
SkyworthMsgs::PatrolCommandDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PatrolCommandDataWriter::_duplicate (
      dynamic_cast<PatrolCommandDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::PatrolCommandDataWriter_ptr
SkyworthMsgs::PatrolCommandDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PatrolCommandDataWriter::_duplicate (
      dynamic_cast<PatrolCommandDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::PatrolCommandDataWriter_ptr
SkyworthMsgs::PatrolCommandDataWriter::_nil (void)
{
  return 0;
}

SkyworthMsgs::PatrolCommandDataWriter_ptr
SkyworthMsgs::PatrolCommandDataWriter::_duplicate (PatrolCommandDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::PatrolCommandDataWriter::_tao_release (PatrolCommandDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::PatrolCommandDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/PatrolCommandDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::PatrolCommandDataWriter::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/PatrolCommandDataWriter:1.0";
}

::CORBA::Boolean
SkyworthMsgs::PatrolCommandDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_PatrolCommandDataWriter (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/PatrolCommandDataWriter:1.0",
    "PatrolCommandDataWriter");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_PatrolCommandDataWriter =
    &_tao_tc_SkyworthMsgs_PatrolCommandDataWriter;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::PatrolCommandDataReader.

SkyworthMsgs::PatrolCommandDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::PatrolCommandDataReader>::duplicate (
    SkyworthMsgs::PatrolCommandDataReader_ptr p)
{
  return SkyworthMsgs::PatrolCommandDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::PatrolCommandDataReader>::release (
    SkyworthMsgs::PatrolCommandDataReader_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::PatrolCommandDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::PatrolCommandDataReader>::nil (void)
{
  return SkyworthMsgs::PatrolCommandDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::PatrolCommandDataReader>::marshal (
    const SkyworthMsgs::PatrolCommandDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::PatrolCommandDataReader::PatrolCommandDataReader (void)
{}

SkyworthMsgs::PatrolCommandDataReader::~PatrolCommandDataReader (void)
{
}

void
SkyworthMsgs::PatrolCommandDataReader::_tao_any_destructor (void *_tao_void_pointer)
{
  PatrolCommandDataReader *_tao_tmp_pointer =
    static_cast<PatrolCommandDataReader *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::PatrolCommandDataReader_ptr
SkyworthMsgs::PatrolCommandDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PatrolCommandDataReader::_duplicate (
      dynamic_cast<PatrolCommandDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::PatrolCommandDataReader_ptr
SkyworthMsgs::PatrolCommandDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PatrolCommandDataReader::_duplicate (
      dynamic_cast<PatrolCommandDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::PatrolCommandDataReader_ptr
SkyworthMsgs::PatrolCommandDataReader::_nil (void)
{
  return 0;
}

SkyworthMsgs::PatrolCommandDataReader_ptr
SkyworthMsgs::PatrolCommandDataReader::_duplicate (PatrolCommandDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::PatrolCommandDataReader::_tao_release (PatrolCommandDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::PatrolCommandDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/PatrolCommandDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::PatrolCommandDataReader::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/PatrolCommandDataReader:1.0";
}

::CORBA::Boolean
SkyworthMsgs::PatrolCommandDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_PatrolCommandDataReader (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/PatrolCommandDataReader:1.0",
    "PatrolCommandDataReader");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_PatrolCommandDataReader =
    &_tao_tc_SkyworthMsgs_PatrolCommandDataReader;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:51



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:464


#ifndef _TAO_TYPECODE_SkyworthMsgs_CleanStatusSeq_GUARD
#define _TAO_TYPECODE_SkyworthMsgs_CleanStatusSeq_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        SkyworthMsgs_CleanStatusSeq_0 (
          ::CORBA::tk_sequence,
          &SkyworthMsgs::_tc_CleanStatus,
          0U);
        
      ::CORBA::TypeCode_ptr const tc_SkyworthMsgs_CleanStatusSeq_0 =
        &SkyworthMsgs_CleanStatusSeq_0;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_SkyworthMsgs_CleanStatusSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_CleanStatusSeq (
    ::CORBA::tk_alias,
    "IDL:SkyworthMsgs/CleanStatusSeq:1.0",
    "CleanStatusSeq",
    &TAO::TypeCode::tc_SkyworthMsgs_CleanStatusSeq_0);
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_CleanStatusSeq =
    &_tao_tc_SkyworthMsgs_CleanStatusSeq;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::CleanStatusTypeSupport.

SkyworthMsgs::CleanStatusTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::CleanStatusTypeSupport>::duplicate (
    SkyworthMsgs::CleanStatusTypeSupport_ptr p)
{
  return SkyworthMsgs::CleanStatusTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::CleanStatusTypeSupport>::release (
    SkyworthMsgs::CleanStatusTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::CleanStatusTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::CleanStatusTypeSupport>::nil (void)
{
  return SkyworthMsgs::CleanStatusTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::CleanStatusTypeSupport>::marshal (
    const SkyworthMsgs::CleanStatusTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::CleanStatusTypeSupport::CleanStatusTypeSupport (void)
{}

SkyworthMsgs::CleanStatusTypeSupport::~CleanStatusTypeSupport (void)
{
}

void
SkyworthMsgs::CleanStatusTypeSupport::_tao_any_destructor (void *_tao_void_pointer)
{
  CleanStatusTypeSupport *_tao_tmp_pointer =
    static_cast<CleanStatusTypeSupport *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::CleanStatusTypeSupport_ptr
SkyworthMsgs::CleanStatusTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return CleanStatusTypeSupport::_duplicate (
      dynamic_cast<CleanStatusTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::CleanStatusTypeSupport_ptr
SkyworthMsgs::CleanStatusTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return CleanStatusTypeSupport::_duplicate (
      dynamic_cast<CleanStatusTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::CleanStatusTypeSupport_ptr
SkyworthMsgs::CleanStatusTypeSupport::_nil (void)
{
  return 0;
}

SkyworthMsgs::CleanStatusTypeSupport_ptr
SkyworthMsgs::CleanStatusTypeSupport::_duplicate (CleanStatusTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::CleanStatusTypeSupport::_tao_release (CleanStatusTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::CleanStatusTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/CleanStatusTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::CleanStatusTypeSupport::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/CleanStatusTypeSupport:1.0";
}

::CORBA::Boolean
SkyworthMsgs::CleanStatusTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_CleanStatusTypeSupport (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/CleanStatusTypeSupport:1.0",
    "CleanStatusTypeSupport");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_CleanStatusTypeSupport =
    &_tao_tc_SkyworthMsgs_CleanStatusTypeSupport;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::CleanStatusDataWriter.

SkyworthMsgs::CleanStatusDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::CleanStatusDataWriter>::duplicate (
    SkyworthMsgs::CleanStatusDataWriter_ptr p)
{
  return SkyworthMsgs::CleanStatusDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::CleanStatusDataWriter>::release (
    SkyworthMsgs::CleanStatusDataWriter_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::CleanStatusDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::CleanStatusDataWriter>::nil (void)
{
  return SkyworthMsgs::CleanStatusDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::CleanStatusDataWriter>::marshal (
    const SkyworthMsgs::CleanStatusDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::CleanStatusDataWriter::CleanStatusDataWriter (void)
{}

SkyworthMsgs::CleanStatusDataWriter::~CleanStatusDataWriter (void)
{
}

void
SkyworthMsgs::CleanStatusDataWriter::_tao_any_destructor (void *_tao_void_pointer)
{
  CleanStatusDataWriter *_tao_tmp_pointer =
    static_cast<CleanStatusDataWriter *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::CleanStatusDataWriter_ptr
SkyworthMsgs::CleanStatusDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return CleanStatusDataWriter::_duplicate (
      dynamic_cast<CleanStatusDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::CleanStatusDataWriter_ptr
SkyworthMsgs::CleanStatusDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return CleanStatusDataWriter::_duplicate (
      dynamic_cast<CleanStatusDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::CleanStatusDataWriter_ptr
SkyworthMsgs::CleanStatusDataWriter::_nil (void)
{
  return 0;
}

SkyworthMsgs::CleanStatusDataWriter_ptr
SkyworthMsgs::CleanStatusDataWriter::_duplicate (CleanStatusDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::CleanStatusDataWriter::_tao_release (CleanStatusDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::CleanStatusDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/CleanStatusDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::CleanStatusDataWriter::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/CleanStatusDataWriter:1.0";
}

::CORBA::Boolean
SkyworthMsgs::CleanStatusDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_CleanStatusDataWriter (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/CleanStatusDataWriter:1.0",
    "CleanStatusDataWriter");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_CleanStatusDataWriter =
    &_tao_tc_SkyworthMsgs_CleanStatusDataWriter;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::CleanStatusDataReader.

SkyworthMsgs::CleanStatusDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::CleanStatusDataReader>::duplicate (
    SkyworthMsgs::CleanStatusDataReader_ptr p)
{
  return SkyworthMsgs::CleanStatusDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::CleanStatusDataReader>::release (
    SkyworthMsgs::CleanStatusDataReader_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::CleanStatusDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::CleanStatusDataReader>::nil (void)
{
  return SkyworthMsgs::CleanStatusDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::CleanStatusDataReader>::marshal (
    const SkyworthMsgs::CleanStatusDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::CleanStatusDataReader::CleanStatusDataReader (void)
{}

SkyworthMsgs::CleanStatusDataReader::~CleanStatusDataReader (void)
{
}

void
SkyworthMsgs::CleanStatusDataReader::_tao_any_destructor (void *_tao_void_pointer)
{
  CleanStatusDataReader *_tao_tmp_pointer =
    static_cast<CleanStatusDataReader *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::CleanStatusDataReader_ptr
SkyworthMsgs::CleanStatusDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return CleanStatusDataReader::_duplicate (
      dynamic_cast<CleanStatusDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::CleanStatusDataReader_ptr
SkyworthMsgs::CleanStatusDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return CleanStatusDataReader::_duplicate (
      dynamic_cast<CleanStatusDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::CleanStatusDataReader_ptr
SkyworthMsgs::CleanStatusDataReader::_nil (void)
{
  return 0;
}

SkyworthMsgs::CleanStatusDataReader_ptr
SkyworthMsgs::CleanStatusDataReader::_duplicate (CleanStatusDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::CleanStatusDataReader::_tao_release (CleanStatusDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::CleanStatusDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/CleanStatusDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::CleanStatusDataReader::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/CleanStatusDataReader:1.0";
}

::CORBA::Boolean
SkyworthMsgs::CleanStatusDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_CleanStatusDataReader (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/CleanStatusDataReader:1.0",
    "CleanStatusDataReader");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_CleanStatusDataReader =
    &_tao_tc_SkyworthMsgs_CleanStatusDataReader;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:51



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:464


#ifndef _TAO_TYPECODE_SkyworthMsgs_CleanCommandSeq_GUARD
#define _TAO_TYPECODE_SkyworthMsgs_CleanCommandSeq_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        SkyworthMsgs_CleanCommandSeq_0 (
          ::CORBA::tk_sequence,
          &SkyworthMsgs::_tc_CleanCommand,
          0U);
        
      ::CORBA::TypeCode_ptr const tc_SkyworthMsgs_CleanCommandSeq_0 =
        &SkyworthMsgs_CleanCommandSeq_0;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_SkyworthMsgs_CleanCommandSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_CleanCommandSeq (
    ::CORBA::tk_alias,
    "IDL:SkyworthMsgs/CleanCommandSeq:1.0",
    "CleanCommandSeq",
    &TAO::TypeCode::tc_SkyworthMsgs_CleanCommandSeq_0);
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_CleanCommandSeq =
    &_tao_tc_SkyworthMsgs_CleanCommandSeq;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::CleanCommandTypeSupport.

SkyworthMsgs::CleanCommandTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::CleanCommandTypeSupport>::duplicate (
    SkyworthMsgs::CleanCommandTypeSupport_ptr p)
{
  return SkyworthMsgs::CleanCommandTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::CleanCommandTypeSupport>::release (
    SkyworthMsgs::CleanCommandTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::CleanCommandTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::CleanCommandTypeSupport>::nil (void)
{
  return SkyworthMsgs::CleanCommandTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::CleanCommandTypeSupport>::marshal (
    const SkyworthMsgs::CleanCommandTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::CleanCommandTypeSupport::CleanCommandTypeSupport (void)
{}

SkyworthMsgs::CleanCommandTypeSupport::~CleanCommandTypeSupport (void)
{
}

void
SkyworthMsgs::CleanCommandTypeSupport::_tao_any_destructor (void *_tao_void_pointer)
{
  CleanCommandTypeSupport *_tao_tmp_pointer =
    static_cast<CleanCommandTypeSupport *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::CleanCommandTypeSupport_ptr
SkyworthMsgs::CleanCommandTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return CleanCommandTypeSupport::_duplicate (
      dynamic_cast<CleanCommandTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::CleanCommandTypeSupport_ptr
SkyworthMsgs::CleanCommandTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return CleanCommandTypeSupport::_duplicate (
      dynamic_cast<CleanCommandTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::CleanCommandTypeSupport_ptr
SkyworthMsgs::CleanCommandTypeSupport::_nil (void)
{
  return 0;
}

SkyworthMsgs::CleanCommandTypeSupport_ptr
SkyworthMsgs::CleanCommandTypeSupport::_duplicate (CleanCommandTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::CleanCommandTypeSupport::_tao_release (CleanCommandTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::CleanCommandTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/CleanCommandTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::CleanCommandTypeSupport::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/CleanCommandTypeSupport:1.0";
}

::CORBA::Boolean
SkyworthMsgs::CleanCommandTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_CleanCommandTypeSupport (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/CleanCommandTypeSupport:1.0",
    "CleanCommandTypeSupport");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_CleanCommandTypeSupport =
    &_tao_tc_SkyworthMsgs_CleanCommandTypeSupport;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::CleanCommandDataWriter.

SkyworthMsgs::CleanCommandDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::CleanCommandDataWriter>::duplicate (
    SkyworthMsgs::CleanCommandDataWriter_ptr p)
{
  return SkyworthMsgs::CleanCommandDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::CleanCommandDataWriter>::release (
    SkyworthMsgs::CleanCommandDataWriter_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::CleanCommandDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::CleanCommandDataWriter>::nil (void)
{
  return SkyworthMsgs::CleanCommandDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::CleanCommandDataWriter>::marshal (
    const SkyworthMsgs::CleanCommandDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::CleanCommandDataWriter::CleanCommandDataWriter (void)
{}

SkyworthMsgs::CleanCommandDataWriter::~CleanCommandDataWriter (void)
{
}

void
SkyworthMsgs::CleanCommandDataWriter::_tao_any_destructor (void *_tao_void_pointer)
{
  CleanCommandDataWriter *_tao_tmp_pointer =
    static_cast<CleanCommandDataWriter *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::CleanCommandDataWriter_ptr
SkyworthMsgs::CleanCommandDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return CleanCommandDataWriter::_duplicate (
      dynamic_cast<CleanCommandDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::CleanCommandDataWriter_ptr
SkyworthMsgs::CleanCommandDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return CleanCommandDataWriter::_duplicate (
      dynamic_cast<CleanCommandDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::CleanCommandDataWriter_ptr
SkyworthMsgs::CleanCommandDataWriter::_nil (void)
{
  return 0;
}

SkyworthMsgs::CleanCommandDataWriter_ptr
SkyworthMsgs::CleanCommandDataWriter::_duplicate (CleanCommandDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::CleanCommandDataWriter::_tao_release (CleanCommandDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::CleanCommandDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/CleanCommandDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::CleanCommandDataWriter::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/CleanCommandDataWriter:1.0";
}

::CORBA::Boolean
SkyworthMsgs::CleanCommandDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_CleanCommandDataWriter (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/CleanCommandDataWriter:1.0",
    "CleanCommandDataWriter");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_CleanCommandDataWriter =
    &_tao_tc_SkyworthMsgs_CleanCommandDataWriter;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::CleanCommandDataReader.

SkyworthMsgs::CleanCommandDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::CleanCommandDataReader>::duplicate (
    SkyworthMsgs::CleanCommandDataReader_ptr p)
{
  return SkyworthMsgs::CleanCommandDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::CleanCommandDataReader>::release (
    SkyworthMsgs::CleanCommandDataReader_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::CleanCommandDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::CleanCommandDataReader>::nil (void)
{
  return SkyworthMsgs::CleanCommandDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::CleanCommandDataReader>::marshal (
    const SkyworthMsgs::CleanCommandDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::CleanCommandDataReader::CleanCommandDataReader (void)
{}

SkyworthMsgs::CleanCommandDataReader::~CleanCommandDataReader (void)
{
}

void
SkyworthMsgs::CleanCommandDataReader::_tao_any_destructor (void *_tao_void_pointer)
{
  CleanCommandDataReader *_tao_tmp_pointer =
    static_cast<CleanCommandDataReader *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::CleanCommandDataReader_ptr
SkyworthMsgs::CleanCommandDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return CleanCommandDataReader::_duplicate (
      dynamic_cast<CleanCommandDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::CleanCommandDataReader_ptr
SkyworthMsgs::CleanCommandDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return CleanCommandDataReader::_duplicate (
      dynamic_cast<CleanCommandDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::CleanCommandDataReader_ptr
SkyworthMsgs::CleanCommandDataReader::_nil (void)
{
  return 0;
}

SkyworthMsgs::CleanCommandDataReader_ptr
SkyworthMsgs::CleanCommandDataReader::_duplicate (CleanCommandDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::CleanCommandDataReader::_tao_release (CleanCommandDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::CleanCommandDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/CleanCommandDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::CleanCommandDataReader::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/CleanCommandDataReader:1.0";
}

::CORBA::Boolean
SkyworthMsgs::CleanCommandDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_CleanCommandDataReader (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/CleanCommandDataReader:1.0",
    "CleanCommandDataReader");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_CleanCommandDataReader =
    &_tao_tc_SkyworthMsgs_CleanCommandDataReader;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:51



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:464


#ifndef _TAO_TYPECODE_SkyworthMsgs_MapLiveDataSeq_GUARD
#define _TAO_TYPECODE_SkyworthMsgs_MapLiveDataSeq_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        SkyworthMsgs_MapLiveDataSeq_0 (
          ::CORBA::tk_sequence,
          &SkyworthMsgs::_tc_MapLiveData,
          0U);
        
      ::CORBA::TypeCode_ptr const tc_SkyworthMsgs_MapLiveDataSeq_0 =
        &SkyworthMsgs_MapLiveDataSeq_0;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_SkyworthMsgs_MapLiveDataSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_MapLiveDataSeq (
    ::CORBA::tk_alias,
    "IDL:SkyworthMsgs/MapLiveDataSeq:1.0",
    "MapLiveDataSeq",
    &TAO::TypeCode::tc_SkyworthMsgs_MapLiveDataSeq_0);
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_MapLiveDataSeq =
    &_tao_tc_SkyworthMsgs_MapLiveDataSeq;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::MapLiveDataTypeSupport.

SkyworthMsgs::MapLiveDataTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::MapLiveDataTypeSupport>::duplicate (
    SkyworthMsgs::MapLiveDataTypeSupport_ptr p)
{
  return SkyworthMsgs::MapLiveDataTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::MapLiveDataTypeSupport>::release (
    SkyworthMsgs::MapLiveDataTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::MapLiveDataTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::MapLiveDataTypeSupport>::nil (void)
{
  return SkyworthMsgs::MapLiveDataTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::MapLiveDataTypeSupport>::marshal (
    const SkyworthMsgs::MapLiveDataTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::MapLiveDataTypeSupport::MapLiveDataTypeSupport (void)
{}

SkyworthMsgs::MapLiveDataTypeSupport::~MapLiveDataTypeSupport (void)
{
}

void
SkyworthMsgs::MapLiveDataTypeSupport::_tao_any_destructor (void *_tao_void_pointer)
{
  MapLiveDataTypeSupport *_tao_tmp_pointer =
    static_cast<MapLiveDataTypeSupport *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::MapLiveDataTypeSupport_ptr
SkyworthMsgs::MapLiveDataTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return MapLiveDataTypeSupport::_duplicate (
      dynamic_cast<MapLiveDataTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::MapLiveDataTypeSupport_ptr
SkyworthMsgs::MapLiveDataTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return MapLiveDataTypeSupport::_duplicate (
      dynamic_cast<MapLiveDataTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::MapLiveDataTypeSupport_ptr
SkyworthMsgs::MapLiveDataTypeSupport::_nil (void)
{
  return 0;
}

SkyworthMsgs::MapLiveDataTypeSupport_ptr
SkyworthMsgs::MapLiveDataTypeSupport::_duplicate (MapLiveDataTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::MapLiveDataTypeSupport::_tao_release (MapLiveDataTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::MapLiveDataTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/MapLiveDataTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::MapLiveDataTypeSupport::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/MapLiveDataTypeSupport:1.0";
}

::CORBA::Boolean
SkyworthMsgs::MapLiveDataTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_MapLiveDataTypeSupport (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/MapLiveDataTypeSupport:1.0",
    "MapLiveDataTypeSupport");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_MapLiveDataTypeSupport =
    &_tao_tc_SkyworthMsgs_MapLiveDataTypeSupport;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::MapLiveDataDataWriter.

SkyworthMsgs::MapLiveDataDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::MapLiveDataDataWriter>::duplicate (
    SkyworthMsgs::MapLiveDataDataWriter_ptr p)
{
  return SkyworthMsgs::MapLiveDataDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::MapLiveDataDataWriter>::release (
    SkyworthMsgs::MapLiveDataDataWriter_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::MapLiveDataDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::MapLiveDataDataWriter>::nil (void)
{
  return SkyworthMsgs::MapLiveDataDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::MapLiveDataDataWriter>::marshal (
    const SkyworthMsgs::MapLiveDataDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::MapLiveDataDataWriter::MapLiveDataDataWriter (void)
{}

SkyworthMsgs::MapLiveDataDataWriter::~MapLiveDataDataWriter (void)
{
}

void
SkyworthMsgs::MapLiveDataDataWriter::_tao_any_destructor (void *_tao_void_pointer)
{
  MapLiveDataDataWriter *_tao_tmp_pointer =
    static_cast<MapLiveDataDataWriter *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::MapLiveDataDataWriter_ptr
SkyworthMsgs::MapLiveDataDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return MapLiveDataDataWriter::_duplicate (
      dynamic_cast<MapLiveDataDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::MapLiveDataDataWriter_ptr
SkyworthMsgs::MapLiveDataDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return MapLiveDataDataWriter::_duplicate (
      dynamic_cast<MapLiveDataDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::MapLiveDataDataWriter_ptr
SkyworthMsgs::MapLiveDataDataWriter::_nil (void)
{
  return 0;
}

SkyworthMsgs::MapLiveDataDataWriter_ptr
SkyworthMsgs::MapLiveDataDataWriter::_duplicate (MapLiveDataDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::MapLiveDataDataWriter::_tao_release (MapLiveDataDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::MapLiveDataDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/MapLiveDataDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::MapLiveDataDataWriter::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/MapLiveDataDataWriter:1.0";
}

::CORBA::Boolean
SkyworthMsgs::MapLiveDataDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_MapLiveDataDataWriter (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/MapLiveDataDataWriter:1.0",
    "MapLiveDataDataWriter");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_MapLiveDataDataWriter =
    &_tao_tc_SkyworthMsgs_MapLiveDataDataWriter;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::MapLiveDataDataReader.

SkyworthMsgs::MapLiveDataDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::MapLiveDataDataReader>::duplicate (
    SkyworthMsgs::MapLiveDataDataReader_ptr p)
{
  return SkyworthMsgs::MapLiveDataDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::MapLiveDataDataReader>::release (
    SkyworthMsgs::MapLiveDataDataReader_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::MapLiveDataDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::MapLiveDataDataReader>::nil (void)
{
  return SkyworthMsgs::MapLiveDataDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::MapLiveDataDataReader>::marshal (
    const SkyworthMsgs::MapLiveDataDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::MapLiveDataDataReader::MapLiveDataDataReader (void)
{}

SkyworthMsgs::MapLiveDataDataReader::~MapLiveDataDataReader (void)
{
}

void
SkyworthMsgs::MapLiveDataDataReader::_tao_any_destructor (void *_tao_void_pointer)
{
  MapLiveDataDataReader *_tao_tmp_pointer =
    static_cast<MapLiveDataDataReader *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::MapLiveDataDataReader_ptr
SkyworthMsgs::MapLiveDataDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return MapLiveDataDataReader::_duplicate (
      dynamic_cast<MapLiveDataDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::MapLiveDataDataReader_ptr
SkyworthMsgs::MapLiveDataDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return MapLiveDataDataReader::_duplicate (
      dynamic_cast<MapLiveDataDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::MapLiveDataDataReader_ptr
SkyworthMsgs::MapLiveDataDataReader::_nil (void)
{
  return 0;
}

SkyworthMsgs::MapLiveDataDataReader_ptr
SkyworthMsgs::MapLiveDataDataReader::_duplicate (MapLiveDataDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::MapLiveDataDataReader::_tao_release (MapLiveDataDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::MapLiveDataDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/MapLiveDataDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::MapLiveDataDataReader::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/MapLiveDataDataReader:1.0";
}

::CORBA::Boolean
SkyworthMsgs::MapLiveDataDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_MapLiveDataDataReader (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/MapLiveDataDataReader:1.0",
    "MapLiveDataDataReader");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_MapLiveDataDataReader =
    &_tao_tc_SkyworthMsgs_MapLiveDataDataReader;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:51



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:464


#ifndef _TAO_TYPECODE_SkyworthMsgs_SlamManageStatusSeq_GUARD
#define _TAO_TYPECODE_SkyworthMsgs_SlamManageStatusSeq_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        SkyworthMsgs_SlamManageStatusSeq_0 (
          ::CORBA::tk_sequence,
          &SkyworthMsgs::_tc_SlamManageStatus,
          0U);
        
      ::CORBA::TypeCode_ptr const tc_SkyworthMsgs_SlamManageStatusSeq_0 =
        &SkyworthMsgs_SlamManageStatusSeq_0;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_SkyworthMsgs_SlamManageStatusSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_SlamManageStatusSeq (
    ::CORBA::tk_alias,
    "IDL:SkyworthMsgs/SlamManageStatusSeq:1.0",
    "SlamManageStatusSeq",
    &TAO::TypeCode::tc_SkyworthMsgs_SlamManageStatusSeq_0);
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_SlamManageStatusSeq =
    &_tao_tc_SkyworthMsgs_SlamManageStatusSeq;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::SlamManageStatusTypeSupport.

SkyworthMsgs::SlamManageStatusTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::SlamManageStatusTypeSupport>::duplicate (
    SkyworthMsgs::SlamManageStatusTypeSupport_ptr p)
{
  return SkyworthMsgs::SlamManageStatusTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::SlamManageStatusTypeSupport>::release (
    SkyworthMsgs::SlamManageStatusTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::SlamManageStatusTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::SlamManageStatusTypeSupport>::nil (void)
{
  return SkyworthMsgs::SlamManageStatusTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::SlamManageStatusTypeSupport>::marshal (
    const SkyworthMsgs::SlamManageStatusTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::SlamManageStatusTypeSupport::SlamManageStatusTypeSupport (void)
{}

SkyworthMsgs::SlamManageStatusTypeSupport::~SlamManageStatusTypeSupport (void)
{
}

void
SkyworthMsgs::SlamManageStatusTypeSupport::_tao_any_destructor (void *_tao_void_pointer)
{
  SlamManageStatusTypeSupport *_tao_tmp_pointer =
    static_cast<SlamManageStatusTypeSupport *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::SlamManageStatusTypeSupport_ptr
SkyworthMsgs::SlamManageStatusTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SlamManageStatusTypeSupport::_duplicate (
      dynamic_cast<SlamManageStatusTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::SlamManageStatusTypeSupport_ptr
SkyworthMsgs::SlamManageStatusTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SlamManageStatusTypeSupport::_duplicate (
      dynamic_cast<SlamManageStatusTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::SlamManageStatusTypeSupport_ptr
SkyworthMsgs::SlamManageStatusTypeSupport::_nil (void)
{
  return 0;
}

SkyworthMsgs::SlamManageStatusTypeSupport_ptr
SkyworthMsgs::SlamManageStatusTypeSupport::_duplicate (SlamManageStatusTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::SlamManageStatusTypeSupport::_tao_release (SlamManageStatusTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::SlamManageStatusTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/SlamManageStatusTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::SlamManageStatusTypeSupport::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/SlamManageStatusTypeSupport:1.0";
}

::CORBA::Boolean
SkyworthMsgs::SlamManageStatusTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_SlamManageStatusTypeSupport (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/SlamManageStatusTypeSupport:1.0",
    "SlamManageStatusTypeSupport");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_SlamManageStatusTypeSupport =
    &_tao_tc_SkyworthMsgs_SlamManageStatusTypeSupport;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::SlamManageStatusDataWriter.

SkyworthMsgs::SlamManageStatusDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::SlamManageStatusDataWriter>::duplicate (
    SkyworthMsgs::SlamManageStatusDataWriter_ptr p)
{
  return SkyworthMsgs::SlamManageStatusDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::SlamManageStatusDataWriter>::release (
    SkyworthMsgs::SlamManageStatusDataWriter_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::SlamManageStatusDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::SlamManageStatusDataWriter>::nil (void)
{
  return SkyworthMsgs::SlamManageStatusDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::SlamManageStatusDataWriter>::marshal (
    const SkyworthMsgs::SlamManageStatusDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::SlamManageStatusDataWriter::SlamManageStatusDataWriter (void)
{}

SkyworthMsgs::SlamManageStatusDataWriter::~SlamManageStatusDataWriter (void)
{
}

void
SkyworthMsgs::SlamManageStatusDataWriter::_tao_any_destructor (void *_tao_void_pointer)
{
  SlamManageStatusDataWriter *_tao_tmp_pointer =
    static_cast<SlamManageStatusDataWriter *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::SlamManageStatusDataWriter_ptr
SkyworthMsgs::SlamManageStatusDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SlamManageStatusDataWriter::_duplicate (
      dynamic_cast<SlamManageStatusDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::SlamManageStatusDataWriter_ptr
SkyworthMsgs::SlamManageStatusDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SlamManageStatusDataWriter::_duplicate (
      dynamic_cast<SlamManageStatusDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::SlamManageStatusDataWriter_ptr
SkyworthMsgs::SlamManageStatusDataWriter::_nil (void)
{
  return 0;
}

SkyworthMsgs::SlamManageStatusDataWriter_ptr
SkyworthMsgs::SlamManageStatusDataWriter::_duplicate (SlamManageStatusDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::SlamManageStatusDataWriter::_tao_release (SlamManageStatusDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::SlamManageStatusDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/SlamManageStatusDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::SlamManageStatusDataWriter::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/SlamManageStatusDataWriter:1.0";
}

::CORBA::Boolean
SkyworthMsgs::SlamManageStatusDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_SlamManageStatusDataWriter (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/SlamManageStatusDataWriter:1.0",
    "SlamManageStatusDataWriter");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_SlamManageStatusDataWriter =
    &_tao_tc_SkyworthMsgs_SlamManageStatusDataWriter;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::SlamManageStatusDataReader.

SkyworthMsgs::SlamManageStatusDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::SlamManageStatusDataReader>::duplicate (
    SkyworthMsgs::SlamManageStatusDataReader_ptr p)
{
  return SkyworthMsgs::SlamManageStatusDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::SlamManageStatusDataReader>::release (
    SkyworthMsgs::SlamManageStatusDataReader_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::SlamManageStatusDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::SlamManageStatusDataReader>::nil (void)
{
  return SkyworthMsgs::SlamManageStatusDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::SlamManageStatusDataReader>::marshal (
    const SkyworthMsgs::SlamManageStatusDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::SlamManageStatusDataReader::SlamManageStatusDataReader (void)
{}

SkyworthMsgs::SlamManageStatusDataReader::~SlamManageStatusDataReader (void)
{
}

void
SkyworthMsgs::SlamManageStatusDataReader::_tao_any_destructor (void *_tao_void_pointer)
{
  SlamManageStatusDataReader *_tao_tmp_pointer =
    static_cast<SlamManageStatusDataReader *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::SlamManageStatusDataReader_ptr
SkyworthMsgs::SlamManageStatusDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SlamManageStatusDataReader::_duplicate (
      dynamic_cast<SlamManageStatusDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::SlamManageStatusDataReader_ptr
SkyworthMsgs::SlamManageStatusDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SlamManageStatusDataReader::_duplicate (
      dynamic_cast<SlamManageStatusDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::SlamManageStatusDataReader_ptr
SkyworthMsgs::SlamManageStatusDataReader::_nil (void)
{
  return 0;
}

SkyworthMsgs::SlamManageStatusDataReader_ptr
SkyworthMsgs::SlamManageStatusDataReader::_duplicate (SlamManageStatusDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::SlamManageStatusDataReader::_tao_release (SlamManageStatusDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::SlamManageStatusDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/SlamManageStatusDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::SlamManageStatusDataReader::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/SlamManageStatusDataReader:1.0";
}

::CORBA::Boolean
SkyworthMsgs::SlamManageStatusDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_SlamManageStatusDataReader (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/SlamManageStatusDataReader:1.0",
    "SlamManageStatusDataReader");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_SlamManageStatusDataReader =
    &_tao_tc_SkyworthMsgs_SlamManageStatusDataReader;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:51



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:464


#ifndef _TAO_TYPECODE_SkyworthMsgs_SlamManageCmdSeq_GUARD
#define _TAO_TYPECODE_SkyworthMsgs_SlamManageCmdSeq_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        SkyworthMsgs_SlamManageCmdSeq_0 (
          ::CORBA::tk_sequence,
          &SkyworthMsgs::_tc_SlamManageCmd,
          0U);
        
      ::CORBA::TypeCode_ptr const tc_SkyworthMsgs_SlamManageCmdSeq_0 =
        &SkyworthMsgs_SlamManageCmdSeq_0;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_SkyworthMsgs_SlamManageCmdSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_SlamManageCmdSeq (
    ::CORBA::tk_alias,
    "IDL:SkyworthMsgs/SlamManageCmdSeq:1.0",
    "SlamManageCmdSeq",
    &TAO::TypeCode::tc_SkyworthMsgs_SlamManageCmdSeq_0);
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_SlamManageCmdSeq =
    &_tao_tc_SkyworthMsgs_SlamManageCmdSeq;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::SlamManageCmdTypeSupport.

SkyworthMsgs::SlamManageCmdTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::SlamManageCmdTypeSupport>::duplicate (
    SkyworthMsgs::SlamManageCmdTypeSupport_ptr p)
{
  return SkyworthMsgs::SlamManageCmdTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::SlamManageCmdTypeSupport>::release (
    SkyworthMsgs::SlamManageCmdTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::SlamManageCmdTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::SlamManageCmdTypeSupport>::nil (void)
{
  return SkyworthMsgs::SlamManageCmdTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::SlamManageCmdTypeSupport>::marshal (
    const SkyworthMsgs::SlamManageCmdTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::SlamManageCmdTypeSupport::SlamManageCmdTypeSupport (void)
{}

SkyworthMsgs::SlamManageCmdTypeSupport::~SlamManageCmdTypeSupport (void)
{
}

void
SkyworthMsgs::SlamManageCmdTypeSupport::_tao_any_destructor (void *_tao_void_pointer)
{
  SlamManageCmdTypeSupport *_tao_tmp_pointer =
    static_cast<SlamManageCmdTypeSupport *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::SlamManageCmdTypeSupport_ptr
SkyworthMsgs::SlamManageCmdTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SlamManageCmdTypeSupport::_duplicate (
      dynamic_cast<SlamManageCmdTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::SlamManageCmdTypeSupport_ptr
SkyworthMsgs::SlamManageCmdTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SlamManageCmdTypeSupport::_duplicate (
      dynamic_cast<SlamManageCmdTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::SlamManageCmdTypeSupport_ptr
SkyworthMsgs::SlamManageCmdTypeSupport::_nil (void)
{
  return 0;
}

SkyworthMsgs::SlamManageCmdTypeSupport_ptr
SkyworthMsgs::SlamManageCmdTypeSupport::_duplicate (SlamManageCmdTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::SlamManageCmdTypeSupport::_tao_release (SlamManageCmdTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::SlamManageCmdTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/SlamManageCmdTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::SlamManageCmdTypeSupport::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/SlamManageCmdTypeSupport:1.0";
}

::CORBA::Boolean
SkyworthMsgs::SlamManageCmdTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_SlamManageCmdTypeSupport (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/SlamManageCmdTypeSupport:1.0",
    "SlamManageCmdTypeSupport");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_SlamManageCmdTypeSupport =
    &_tao_tc_SkyworthMsgs_SlamManageCmdTypeSupport;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::SlamManageCmdDataWriter.

SkyworthMsgs::SlamManageCmdDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::SlamManageCmdDataWriter>::duplicate (
    SkyworthMsgs::SlamManageCmdDataWriter_ptr p)
{
  return SkyworthMsgs::SlamManageCmdDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::SlamManageCmdDataWriter>::release (
    SkyworthMsgs::SlamManageCmdDataWriter_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::SlamManageCmdDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::SlamManageCmdDataWriter>::nil (void)
{
  return SkyworthMsgs::SlamManageCmdDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::SlamManageCmdDataWriter>::marshal (
    const SkyworthMsgs::SlamManageCmdDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::SlamManageCmdDataWriter::SlamManageCmdDataWriter (void)
{}

SkyworthMsgs::SlamManageCmdDataWriter::~SlamManageCmdDataWriter (void)
{
}

void
SkyworthMsgs::SlamManageCmdDataWriter::_tao_any_destructor (void *_tao_void_pointer)
{
  SlamManageCmdDataWriter *_tao_tmp_pointer =
    static_cast<SlamManageCmdDataWriter *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::SlamManageCmdDataWriter_ptr
SkyworthMsgs::SlamManageCmdDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SlamManageCmdDataWriter::_duplicate (
      dynamic_cast<SlamManageCmdDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::SlamManageCmdDataWriter_ptr
SkyworthMsgs::SlamManageCmdDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SlamManageCmdDataWriter::_duplicate (
      dynamic_cast<SlamManageCmdDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::SlamManageCmdDataWriter_ptr
SkyworthMsgs::SlamManageCmdDataWriter::_nil (void)
{
  return 0;
}

SkyworthMsgs::SlamManageCmdDataWriter_ptr
SkyworthMsgs::SlamManageCmdDataWriter::_duplicate (SlamManageCmdDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::SlamManageCmdDataWriter::_tao_release (SlamManageCmdDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::SlamManageCmdDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/SlamManageCmdDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::SlamManageCmdDataWriter::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/SlamManageCmdDataWriter:1.0";
}

::CORBA::Boolean
SkyworthMsgs::SlamManageCmdDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_SlamManageCmdDataWriter (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/SlamManageCmdDataWriter:1.0",
    "SlamManageCmdDataWriter");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_SlamManageCmdDataWriter =
    &_tao_tc_SkyworthMsgs_SlamManageCmdDataWriter;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::SlamManageCmdDataReader.

SkyworthMsgs::SlamManageCmdDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::SlamManageCmdDataReader>::duplicate (
    SkyworthMsgs::SlamManageCmdDataReader_ptr p)
{
  return SkyworthMsgs::SlamManageCmdDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::SlamManageCmdDataReader>::release (
    SkyworthMsgs::SlamManageCmdDataReader_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::SlamManageCmdDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::SlamManageCmdDataReader>::nil (void)
{
  return SkyworthMsgs::SlamManageCmdDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::SlamManageCmdDataReader>::marshal (
    const SkyworthMsgs::SlamManageCmdDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::SlamManageCmdDataReader::SlamManageCmdDataReader (void)
{}

SkyworthMsgs::SlamManageCmdDataReader::~SlamManageCmdDataReader (void)
{
}

void
SkyworthMsgs::SlamManageCmdDataReader::_tao_any_destructor (void *_tao_void_pointer)
{
  SlamManageCmdDataReader *_tao_tmp_pointer =
    static_cast<SlamManageCmdDataReader *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::SlamManageCmdDataReader_ptr
SkyworthMsgs::SlamManageCmdDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SlamManageCmdDataReader::_duplicate (
      dynamic_cast<SlamManageCmdDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::SlamManageCmdDataReader_ptr
SkyworthMsgs::SlamManageCmdDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SlamManageCmdDataReader::_duplicate (
      dynamic_cast<SlamManageCmdDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::SlamManageCmdDataReader_ptr
SkyworthMsgs::SlamManageCmdDataReader::_nil (void)
{
  return 0;
}

SkyworthMsgs::SlamManageCmdDataReader_ptr
SkyworthMsgs::SlamManageCmdDataReader::_duplicate (SlamManageCmdDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::SlamManageCmdDataReader::_tao_release (SlamManageCmdDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::SlamManageCmdDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/SlamManageCmdDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::SlamManageCmdDataReader::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/SlamManageCmdDataReader:1.0";
}

::CORBA::Boolean
SkyworthMsgs::SlamManageCmdDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_SlamManageCmdDataReader (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/SlamManageCmdDataReader:1.0",
    "SlamManageCmdDataReader");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_SlamManageCmdDataReader =
    &_tao_tc_SkyworthMsgs_SlamManageCmdDataReader;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:51



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:464


#ifndef _TAO_TYPECODE_SkyworthMsgs_PatrolManageStatusSeq_GUARD
#define _TAO_TYPECODE_SkyworthMsgs_PatrolManageStatusSeq_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        SkyworthMsgs_PatrolManageStatusSeq_0 (
          ::CORBA::tk_sequence,
          &SkyworthMsgs::_tc_PatrolManageStatus,
          0U);
        
      ::CORBA::TypeCode_ptr const tc_SkyworthMsgs_PatrolManageStatusSeq_0 =
        &SkyworthMsgs_PatrolManageStatusSeq_0;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_SkyworthMsgs_PatrolManageStatusSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_PatrolManageStatusSeq (
    ::CORBA::tk_alias,
    "IDL:SkyworthMsgs/PatrolManageStatusSeq:1.0",
    "PatrolManageStatusSeq",
    &TAO::TypeCode::tc_SkyworthMsgs_PatrolManageStatusSeq_0);
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_PatrolManageStatusSeq =
    &_tao_tc_SkyworthMsgs_PatrolManageStatusSeq;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::PatrolManageStatusTypeSupport.

SkyworthMsgs::PatrolManageStatusTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::PatrolManageStatusTypeSupport>::duplicate (
    SkyworthMsgs::PatrolManageStatusTypeSupport_ptr p)
{
  return SkyworthMsgs::PatrolManageStatusTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::PatrolManageStatusTypeSupport>::release (
    SkyworthMsgs::PatrolManageStatusTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::PatrolManageStatusTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::PatrolManageStatusTypeSupport>::nil (void)
{
  return SkyworthMsgs::PatrolManageStatusTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::PatrolManageStatusTypeSupport>::marshal (
    const SkyworthMsgs::PatrolManageStatusTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::PatrolManageStatusTypeSupport::PatrolManageStatusTypeSupport (void)
{}

SkyworthMsgs::PatrolManageStatusTypeSupport::~PatrolManageStatusTypeSupport (void)
{
}

void
SkyworthMsgs::PatrolManageStatusTypeSupport::_tao_any_destructor (void *_tao_void_pointer)
{
  PatrolManageStatusTypeSupport *_tao_tmp_pointer =
    static_cast<PatrolManageStatusTypeSupport *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::PatrolManageStatusTypeSupport_ptr
SkyworthMsgs::PatrolManageStatusTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PatrolManageStatusTypeSupport::_duplicate (
      dynamic_cast<PatrolManageStatusTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::PatrolManageStatusTypeSupport_ptr
SkyworthMsgs::PatrolManageStatusTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PatrolManageStatusTypeSupport::_duplicate (
      dynamic_cast<PatrolManageStatusTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::PatrolManageStatusTypeSupport_ptr
SkyworthMsgs::PatrolManageStatusTypeSupport::_nil (void)
{
  return 0;
}

SkyworthMsgs::PatrolManageStatusTypeSupport_ptr
SkyworthMsgs::PatrolManageStatusTypeSupport::_duplicate (PatrolManageStatusTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::PatrolManageStatusTypeSupport::_tao_release (PatrolManageStatusTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::PatrolManageStatusTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/PatrolManageStatusTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::PatrolManageStatusTypeSupport::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/PatrolManageStatusTypeSupport:1.0";
}

::CORBA::Boolean
SkyworthMsgs::PatrolManageStatusTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_PatrolManageStatusTypeSupport (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/PatrolManageStatusTypeSupport:1.0",
    "PatrolManageStatusTypeSupport");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_PatrolManageStatusTypeSupport =
    &_tao_tc_SkyworthMsgs_PatrolManageStatusTypeSupport;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::PatrolManageStatusDataWriter.

SkyworthMsgs::PatrolManageStatusDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::PatrolManageStatusDataWriter>::duplicate (
    SkyworthMsgs::PatrolManageStatusDataWriter_ptr p)
{
  return SkyworthMsgs::PatrolManageStatusDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::PatrolManageStatusDataWriter>::release (
    SkyworthMsgs::PatrolManageStatusDataWriter_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::PatrolManageStatusDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::PatrolManageStatusDataWriter>::nil (void)
{
  return SkyworthMsgs::PatrolManageStatusDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::PatrolManageStatusDataWriter>::marshal (
    const SkyworthMsgs::PatrolManageStatusDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::PatrolManageStatusDataWriter::PatrolManageStatusDataWriter (void)
{}

SkyworthMsgs::PatrolManageStatusDataWriter::~PatrolManageStatusDataWriter (void)
{
}

void
SkyworthMsgs::PatrolManageStatusDataWriter::_tao_any_destructor (void *_tao_void_pointer)
{
  PatrolManageStatusDataWriter *_tao_tmp_pointer =
    static_cast<PatrolManageStatusDataWriter *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::PatrolManageStatusDataWriter_ptr
SkyworthMsgs::PatrolManageStatusDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PatrolManageStatusDataWriter::_duplicate (
      dynamic_cast<PatrolManageStatusDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::PatrolManageStatusDataWriter_ptr
SkyworthMsgs::PatrolManageStatusDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PatrolManageStatusDataWriter::_duplicate (
      dynamic_cast<PatrolManageStatusDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::PatrolManageStatusDataWriter_ptr
SkyworthMsgs::PatrolManageStatusDataWriter::_nil (void)
{
  return 0;
}

SkyworthMsgs::PatrolManageStatusDataWriter_ptr
SkyworthMsgs::PatrolManageStatusDataWriter::_duplicate (PatrolManageStatusDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::PatrolManageStatusDataWriter::_tao_release (PatrolManageStatusDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::PatrolManageStatusDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/PatrolManageStatusDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::PatrolManageStatusDataWriter::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/PatrolManageStatusDataWriter:1.0";
}

::CORBA::Boolean
SkyworthMsgs::PatrolManageStatusDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_PatrolManageStatusDataWriter (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/PatrolManageStatusDataWriter:1.0",
    "PatrolManageStatusDataWriter");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_PatrolManageStatusDataWriter =
    &_tao_tc_SkyworthMsgs_PatrolManageStatusDataWriter;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::PatrolManageStatusDataReader.

SkyworthMsgs::PatrolManageStatusDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::PatrolManageStatusDataReader>::duplicate (
    SkyworthMsgs::PatrolManageStatusDataReader_ptr p)
{
  return SkyworthMsgs::PatrolManageStatusDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::PatrolManageStatusDataReader>::release (
    SkyworthMsgs::PatrolManageStatusDataReader_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::PatrolManageStatusDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::PatrolManageStatusDataReader>::nil (void)
{
  return SkyworthMsgs::PatrolManageStatusDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::PatrolManageStatusDataReader>::marshal (
    const SkyworthMsgs::PatrolManageStatusDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::PatrolManageStatusDataReader::PatrolManageStatusDataReader (void)
{}

SkyworthMsgs::PatrolManageStatusDataReader::~PatrolManageStatusDataReader (void)
{
}

void
SkyworthMsgs::PatrolManageStatusDataReader::_tao_any_destructor (void *_tao_void_pointer)
{
  PatrolManageStatusDataReader *_tao_tmp_pointer =
    static_cast<PatrolManageStatusDataReader *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::PatrolManageStatusDataReader_ptr
SkyworthMsgs::PatrolManageStatusDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PatrolManageStatusDataReader::_duplicate (
      dynamic_cast<PatrolManageStatusDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::PatrolManageStatusDataReader_ptr
SkyworthMsgs::PatrolManageStatusDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PatrolManageStatusDataReader::_duplicate (
      dynamic_cast<PatrolManageStatusDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::PatrolManageStatusDataReader_ptr
SkyworthMsgs::PatrolManageStatusDataReader::_nil (void)
{
  return 0;
}

SkyworthMsgs::PatrolManageStatusDataReader_ptr
SkyworthMsgs::PatrolManageStatusDataReader::_duplicate (PatrolManageStatusDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::PatrolManageStatusDataReader::_tao_release (PatrolManageStatusDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::PatrolManageStatusDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/PatrolManageStatusDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::PatrolManageStatusDataReader::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/PatrolManageStatusDataReader:1.0";
}

::CORBA::Boolean
SkyworthMsgs::PatrolManageStatusDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_PatrolManageStatusDataReader (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/PatrolManageStatusDataReader:1.0",
    "PatrolManageStatusDataReader");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_PatrolManageStatusDataReader =
    &_tao_tc_SkyworthMsgs_PatrolManageStatusDataReader;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:51



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:464


#ifndef _TAO_TYPECODE_SkyworthMsgs_PatrolManageCmdSeq_GUARD
#define _TAO_TYPECODE_SkyworthMsgs_PatrolManageCmdSeq_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        SkyworthMsgs_PatrolManageCmdSeq_0 (
          ::CORBA::tk_sequence,
          &SkyworthMsgs::_tc_PatrolManageCmd,
          0U);
        
      ::CORBA::TypeCode_ptr const tc_SkyworthMsgs_PatrolManageCmdSeq_0 =
        &SkyworthMsgs_PatrolManageCmdSeq_0;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_SkyworthMsgs_PatrolManageCmdSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_PatrolManageCmdSeq (
    ::CORBA::tk_alias,
    "IDL:SkyworthMsgs/PatrolManageCmdSeq:1.0",
    "PatrolManageCmdSeq",
    &TAO::TypeCode::tc_SkyworthMsgs_PatrolManageCmdSeq_0);
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_PatrolManageCmdSeq =
    &_tao_tc_SkyworthMsgs_PatrolManageCmdSeq;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::PatrolManageCmdTypeSupport.

SkyworthMsgs::PatrolManageCmdTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::PatrolManageCmdTypeSupport>::duplicate (
    SkyworthMsgs::PatrolManageCmdTypeSupport_ptr p)
{
  return SkyworthMsgs::PatrolManageCmdTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::PatrolManageCmdTypeSupport>::release (
    SkyworthMsgs::PatrolManageCmdTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::PatrolManageCmdTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::PatrolManageCmdTypeSupport>::nil (void)
{
  return SkyworthMsgs::PatrolManageCmdTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::PatrolManageCmdTypeSupport>::marshal (
    const SkyworthMsgs::PatrolManageCmdTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::PatrolManageCmdTypeSupport::PatrolManageCmdTypeSupport (void)
{}

SkyworthMsgs::PatrolManageCmdTypeSupport::~PatrolManageCmdTypeSupport (void)
{
}

void
SkyworthMsgs::PatrolManageCmdTypeSupport::_tao_any_destructor (void *_tao_void_pointer)
{
  PatrolManageCmdTypeSupport *_tao_tmp_pointer =
    static_cast<PatrolManageCmdTypeSupport *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::PatrolManageCmdTypeSupport_ptr
SkyworthMsgs::PatrolManageCmdTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PatrolManageCmdTypeSupport::_duplicate (
      dynamic_cast<PatrolManageCmdTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::PatrolManageCmdTypeSupport_ptr
SkyworthMsgs::PatrolManageCmdTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PatrolManageCmdTypeSupport::_duplicate (
      dynamic_cast<PatrolManageCmdTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::PatrolManageCmdTypeSupport_ptr
SkyworthMsgs::PatrolManageCmdTypeSupport::_nil (void)
{
  return 0;
}

SkyworthMsgs::PatrolManageCmdTypeSupport_ptr
SkyworthMsgs::PatrolManageCmdTypeSupport::_duplicate (PatrolManageCmdTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::PatrolManageCmdTypeSupport::_tao_release (PatrolManageCmdTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::PatrolManageCmdTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/PatrolManageCmdTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::PatrolManageCmdTypeSupport::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/PatrolManageCmdTypeSupport:1.0";
}

::CORBA::Boolean
SkyworthMsgs::PatrolManageCmdTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_PatrolManageCmdTypeSupport (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/PatrolManageCmdTypeSupport:1.0",
    "PatrolManageCmdTypeSupport");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_PatrolManageCmdTypeSupport =
    &_tao_tc_SkyworthMsgs_PatrolManageCmdTypeSupport;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::PatrolManageCmdDataWriter.

SkyworthMsgs::PatrolManageCmdDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::PatrolManageCmdDataWriter>::duplicate (
    SkyworthMsgs::PatrolManageCmdDataWriter_ptr p)
{
  return SkyworthMsgs::PatrolManageCmdDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::PatrolManageCmdDataWriter>::release (
    SkyworthMsgs::PatrolManageCmdDataWriter_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::PatrolManageCmdDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::PatrolManageCmdDataWriter>::nil (void)
{
  return SkyworthMsgs::PatrolManageCmdDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::PatrolManageCmdDataWriter>::marshal (
    const SkyworthMsgs::PatrolManageCmdDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::PatrolManageCmdDataWriter::PatrolManageCmdDataWriter (void)
{}

SkyworthMsgs::PatrolManageCmdDataWriter::~PatrolManageCmdDataWriter (void)
{
}

void
SkyworthMsgs::PatrolManageCmdDataWriter::_tao_any_destructor (void *_tao_void_pointer)
{
  PatrolManageCmdDataWriter *_tao_tmp_pointer =
    static_cast<PatrolManageCmdDataWriter *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::PatrolManageCmdDataWriter_ptr
SkyworthMsgs::PatrolManageCmdDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PatrolManageCmdDataWriter::_duplicate (
      dynamic_cast<PatrolManageCmdDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::PatrolManageCmdDataWriter_ptr
SkyworthMsgs::PatrolManageCmdDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PatrolManageCmdDataWriter::_duplicate (
      dynamic_cast<PatrolManageCmdDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::PatrolManageCmdDataWriter_ptr
SkyworthMsgs::PatrolManageCmdDataWriter::_nil (void)
{
  return 0;
}

SkyworthMsgs::PatrolManageCmdDataWriter_ptr
SkyworthMsgs::PatrolManageCmdDataWriter::_duplicate (PatrolManageCmdDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::PatrolManageCmdDataWriter::_tao_release (PatrolManageCmdDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::PatrolManageCmdDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/PatrolManageCmdDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::PatrolManageCmdDataWriter::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/PatrolManageCmdDataWriter:1.0";
}

::CORBA::Boolean
SkyworthMsgs::PatrolManageCmdDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_PatrolManageCmdDataWriter (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/PatrolManageCmdDataWriter:1.0",
    "PatrolManageCmdDataWriter");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_PatrolManageCmdDataWriter =
    &_tao_tc_SkyworthMsgs_PatrolManageCmdDataWriter;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::PatrolManageCmdDataReader.

SkyworthMsgs::PatrolManageCmdDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::PatrolManageCmdDataReader>::duplicate (
    SkyworthMsgs::PatrolManageCmdDataReader_ptr p)
{
  return SkyworthMsgs::PatrolManageCmdDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::PatrolManageCmdDataReader>::release (
    SkyworthMsgs::PatrolManageCmdDataReader_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::PatrolManageCmdDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::PatrolManageCmdDataReader>::nil (void)
{
  return SkyworthMsgs::PatrolManageCmdDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::PatrolManageCmdDataReader>::marshal (
    const SkyworthMsgs::PatrolManageCmdDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::PatrolManageCmdDataReader::PatrolManageCmdDataReader (void)
{}

SkyworthMsgs::PatrolManageCmdDataReader::~PatrolManageCmdDataReader (void)
{
}

void
SkyworthMsgs::PatrolManageCmdDataReader::_tao_any_destructor (void *_tao_void_pointer)
{
  PatrolManageCmdDataReader *_tao_tmp_pointer =
    static_cast<PatrolManageCmdDataReader *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::PatrolManageCmdDataReader_ptr
SkyworthMsgs::PatrolManageCmdDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PatrolManageCmdDataReader::_duplicate (
      dynamic_cast<PatrolManageCmdDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::PatrolManageCmdDataReader_ptr
SkyworthMsgs::PatrolManageCmdDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PatrolManageCmdDataReader::_duplicate (
      dynamic_cast<PatrolManageCmdDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::PatrolManageCmdDataReader_ptr
SkyworthMsgs::PatrolManageCmdDataReader::_nil (void)
{
  return 0;
}

SkyworthMsgs::PatrolManageCmdDataReader_ptr
SkyworthMsgs::PatrolManageCmdDataReader::_duplicate (PatrolManageCmdDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::PatrolManageCmdDataReader::_tao_release (PatrolManageCmdDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::PatrolManageCmdDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/PatrolManageCmdDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::PatrolManageCmdDataReader::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/PatrolManageCmdDataReader:1.0";
}

::CORBA::Boolean
SkyworthMsgs::PatrolManageCmdDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_PatrolManageCmdDataReader (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/PatrolManageCmdDataReader:1.0",
    "PatrolManageCmdDataReader");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_PatrolManageCmdDataReader =
    &_tao_tc_SkyworthMsgs_PatrolManageCmdDataReader;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:51



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:464


#ifndef _TAO_TYPECODE_SkyworthMsgs_CleanManageStatusSeq_GUARD
#define _TAO_TYPECODE_SkyworthMsgs_CleanManageStatusSeq_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        SkyworthMsgs_CleanManageStatusSeq_0 (
          ::CORBA::tk_sequence,
          &SkyworthMsgs::_tc_CleanManageStatus,
          0U);
        
      ::CORBA::TypeCode_ptr const tc_SkyworthMsgs_CleanManageStatusSeq_0 =
        &SkyworthMsgs_CleanManageStatusSeq_0;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_SkyworthMsgs_CleanManageStatusSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_CleanManageStatusSeq (
    ::CORBA::tk_alias,
    "IDL:SkyworthMsgs/CleanManageStatusSeq:1.0",
    "CleanManageStatusSeq",
    &TAO::TypeCode::tc_SkyworthMsgs_CleanManageStatusSeq_0);
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_CleanManageStatusSeq =
    &_tao_tc_SkyworthMsgs_CleanManageStatusSeq;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::CleanManageStatusTypeSupport.

SkyworthMsgs::CleanManageStatusTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::CleanManageStatusTypeSupport>::duplicate (
    SkyworthMsgs::CleanManageStatusTypeSupport_ptr p)
{
  return SkyworthMsgs::CleanManageStatusTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::CleanManageStatusTypeSupport>::release (
    SkyworthMsgs::CleanManageStatusTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::CleanManageStatusTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::CleanManageStatusTypeSupport>::nil (void)
{
  return SkyworthMsgs::CleanManageStatusTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::CleanManageStatusTypeSupport>::marshal (
    const SkyworthMsgs::CleanManageStatusTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::CleanManageStatusTypeSupport::CleanManageStatusTypeSupport (void)
{}

SkyworthMsgs::CleanManageStatusTypeSupport::~CleanManageStatusTypeSupport (void)
{
}

void
SkyworthMsgs::CleanManageStatusTypeSupport::_tao_any_destructor (void *_tao_void_pointer)
{
  CleanManageStatusTypeSupport *_tao_tmp_pointer =
    static_cast<CleanManageStatusTypeSupport *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::CleanManageStatusTypeSupport_ptr
SkyworthMsgs::CleanManageStatusTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return CleanManageStatusTypeSupport::_duplicate (
      dynamic_cast<CleanManageStatusTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::CleanManageStatusTypeSupport_ptr
SkyworthMsgs::CleanManageStatusTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return CleanManageStatusTypeSupport::_duplicate (
      dynamic_cast<CleanManageStatusTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::CleanManageStatusTypeSupport_ptr
SkyworthMsgs::CleanManageStatusTypeSupport::_nil (void)
{
  return 0;
}

SkyworthMsgs::CleanManageStatusTypeSupport_ptr
SkyworthMsgs::CleanManageStatusTypeSupport::_duplicate (CleanManageStatusTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::CleanManageStatusTypeSupport::_tao_release (CleanManageStatusTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::CleanManageStatusTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/CleanManageStatusTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::CleanManageStatusTypeSupport::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/CleanManageStatusTypeSupport:1.0";
}

::CORBA::Boolean
SkyworthMsgs::CleanManageStatusTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_CleanManageStatusTypeSupport (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/CleanManageStatusTypeSupport:1.0",
    "CleanManageStatusTypeSupport");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_CleanManageStatusTypeSupport =
    &_tao_tc_SkyworthMsgs_CleanManageStatusTypeSupport;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::CleanManageStatusDataWriter.

SkyworthMsgs::CleanManageStatusDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::CleanManageStatusDataWriter>::duplicate (
    SkyworthMsgs::CleanManageStatusDataWriter_ptr p)
{
  return SkyworthMsgs::CleanManageStatusDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::CleanManageStatusDataWriter>::release (
    SkyworthMsgs::CleanManageStatusDataWriter_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::CleanManageStatusDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::CleanManageStatusDataWriter>::nil (void)
{
  return SkyworthMsgs::CleanManageStatusDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::CleanManageStatusDataWriter>::marshal (
    const SkyworthMsgs::CleanManageStatusDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::CleanManageStatusDataWriter::CleanManageStatusDataWriter (void)
{}

SkyworthMsgs::CleanManageStatusDataWriter::~CleanManageStatusDataWriter (void)
{
}

void
SkyworthMsgs::CleanManageStatusDataWriter::_tao_any_destructor (void *_tao_void_pointer)
{
  CleanManageStatusDataWriter *_tao_tmp_pointer =
    static_cast<CleanManageStatusDataWriter *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::CleanManageStatusDataWriter_ptr
SkyworthMsgs::CleanManageStatusDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return CleanManageStatusDataWriter::_duplicate (
      dynamic_cast<CleanManageStatusDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::CleanManageStatusDataWriter_ptr
SkyworthMsgs::CleanManageStatusDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return CleanManageStatusDataWriter::_duplicate (
      dynamic_cast<CleanManageStatusDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::CleanManageStatusDataWriter_ptr
SkyworthMsgs::CleanManageStatusDataWriter::_nil (void)
{
  return 0;
}

SkyworthMsgs::CleanManageStatusDataWriter_ptr
SkyworthMsgs::CleanManageStatusDataWriter::_duplicate (CleanManageStatusDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::CleanManageStatusDataWriter::_tao_release (CleanManageStatusDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::CleanManageStatusDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/CleanManageStatusDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::CleanManageStatusDataWriter::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/CleanManageStatusDataWriter:1.0";
}

::CORBA::Boolean
SkyworthMsgs::CleanManageStatusDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_CleanManageStatusDataWriter (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/CleanManageStatusDataWriter:1.0",
    "CleanManageStatusDataWriter");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_CleanManageStatusDataWriter =
    &_tao_tc_SkyworthMsgs_CleanManageStatusDataWriter;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::CleanManageStatusDataReader.

SkyworthMsgs::CleanManageStatusDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::CleanManageStatusDataReader>::duplicate (
    SkyworthMsgs::CleanManageStatusDataReader_ptr p)
{
  return SkyworthMsgs::CleanManageStatusDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::CleanManageStatusDataReader>::release (
    SkyworthMsgs::CleanManageStatusDataReader_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::CleanManageStatusDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::CleanManageStatusDataReader>::nil (void)
{
  return SkyworthMsgs::CleanManageStatusDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::CleanManageStatusDataReader>::marshal (
    const SkyworthMsgs::CleanManageStatusDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::CleanManageStatusDataReader::CleanManageStatusDataReader (void)
{}

SkyworthMsgs::CleanManageStatusDataReader::~CleanManageStatusDataReader (void)
{
}

void
SkyworthMsgs::CleanManageStatusDataReader::_tao_any_destructor (void *_tao_void_pointer)
{
  CleanManageStatusDataReader *_tao_tmp_pointer =
    static_cast<CleanManageStatusDataReader *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::CleanManageStatusDataReader_ptr
SkyworthMsgs::CleanManageStatusDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return CleanManageStatusDataReader::_duplicate (
      dynamic_cast<CleanManageStatusDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::CleanManageStatusDataReader_ptr
SkyworthMsgs::CleanManageStatusDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return CleanManageStatusDataReader::_duplicate (
      dynamic_cast<CleanManageStatusDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::CleanManageStatusDataReader_ptr
SkyworthMsgs::CleanManageStatusDataReader::_nil (void)
{
  return 0;
}

SkyworthMsgs::CleanManageStatusDataReader_ptr
SkyworthMsgs::CleanManageStatusDataReader::_duplicate (CleanManageStatusDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::CleanManageStatusDataReader::_tao_release (CleanManageStatusDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::CleanManageStatusDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/CleanManageStatusDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::CleanManageStatusDataReader::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/CleanManageStatusDataReader:1.0";
}

::CORBA::Boolean
SkyworthMsgs::CleanManageStatusDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_CleanManageStatusDataReader (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/CleanManageStatusDataReader:1.0",
    "CleanManageStatusDataReader");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_CleanManageStatusDataReader =
    &_tao_tc_SkyworthMsgs_CleanManageStatusDataReader;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:51



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:464


#ifndef _TAO_TYPECODE_SkyworthMsgs_CleanManageCmdSeq_GUARD
#define _TAO_TYPECODE_SkyworthMsgs_CleanManageCmdSeq_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        SkyworthMsgs_CleanManageCmdSeq_0 (
          ::CORBA::tk_sequence,
          &SkyworthMsgs::_tc_CleanManageCmd,
          0U);
        
      ::CORBA::TypeCode_ptr const tc_SkyworthMsgs_CleanManageCmdSeq_0 =
        &SkyworthMsgs_CleanManageCmdSeq_0;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_SkyworthMsgs_CleanManageCmdSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_CleanManageCmdSeq (
    ::CORBA::tk_alias,
    "IDL:SkyworthMsgs/CleanManageCmdSeq:1.0",
    "CleanManageCmdSeq",
    &TAO::TypeCode::tc_SkyworthMsgs_CleanManageCmdSeq_0);
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_CleanManageCmdSeq =
    &_tao_tc_SkyworthMsgs_CleanManageCmdSeq;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::CleanManageCmdTypeSupport.

SkyworthMsgs::CleanManageCmdTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::CleanManageCmdTypeSupport>::duplicate (
    SkyworthMsgs::CleanManageCmdTypeSupport_ptr p)
{
  return SkyworthMsgs::CleanManageCmdTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::CleanManageCmdTypeSupport>::release (
    SkyworthMsgs::CleanManageCmdTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::CleanManageCmdTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::CleanManageCmdTypeSupport>::nil (void)
{
  return SkyworthMsgs::CleanManageCmdTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::CleanManageCmdTypeSupport>::marshal (
    const SkyworthMsgs::CleanManageCmdTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::CleanManageCmdTypeSupport::CleanManageCmdTypeSupport (void)
{}

SkyworthMsgs::CleanManageCmdTypeSupport::~CleanManageCmdTypeSupport (void)
{
}

void
SkyworthMsgs::CleanManageCmdTypeSupport::_tao_any_destructor (void *_tao_void_pointer)
{
  CleanManageCmdTypeSupport *_tao_tmp_pointer =
    static_cast<CleanManageCmdTypeSupport *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::CleanManageCmdTypeSupport_ptr
SkyworthMsgs::CleanManageCmdTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return CleanManageCmdTypeSupport::_duplicate (
      dynamic_cast<CleanManageCmdTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::CleanManageCmdTypeSupport_ptr
SkyworthMsgs::CleanManageCmdTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return CleanManageCmdTypeSupport::_duplicate (
      dynamic_cast<CleanManageCmdTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::CleanManageCmdTypeSupport_ptr
SkyworthMsgs::CleanManageCmdTypeSupport::_nil (void)
{
  return 0;
}

SkyworthMsgs::CleanManageCmdTypeSupport_ptr
SkyworthMsgs::CleanManageCmdTypeSupport::_duplicate (CleanManageCmdTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::CleanManageCmdTypeSupport::_tao_release (CleanManageCmdTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::CleanManageCmdTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/CleanManageCmdTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::CleanManageCmdTypeSupport::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/CleanManageCmdTypeSupport:1.0";
}

::CORBA::Boolean
SkyworthMsgs::CleanManageCmdTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_CleanManageCmdTypeSupport (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/CleanManageCmdTypeSupport:1.0",
    "CleanManageCmdTypeSupport");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_CleanManageCmdTypeSupport =
    &_tao_tc_SkyworthMsgs_CleanManageCmdTypeSupport;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::CleanManageCmdDataWriter.

SkyworthMsgs::CleanManageCmdDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::CleanManageCmdDataWriter>::duplicate (
    SkyworthMsgs::CleanManageCmdDataWriter_ptr p)
{
  return SkyworthMsgs::CleanManageCmdDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::CleanManageCmdDataWriter>::release (
    SkyworthMsgs::CleanManageCmdDataWriter_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::CleanManageCmdDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::CleanManageCmdDataWriter>::nil (void)
{
  return SkyworthMsgs::CleanManageCmdDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::CleanManageCmdDataWriter>::marshal (
    const SkyworthMsgs::CleanManageCmdDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::CleanManageCmdDataWriter::CleanManageCmdDataWriter (void)
{}

SkyworthMsgs::CleanManageCmdDataWriter::~CleanManageCmdDataWriter (void)
{
}

void
SkyworthMsgs::CleanManageCmdDataWriter::_tao_any_destructor (void *_tao_void_pointer)
{
  CleanManageCmdDataWriter *_tao_tmp_pointer =
    static_cast<CleanManageCmdDataWriter *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::CleanManageCmdDataWriter_ptr
SkyworthMsgs::CleanManageCmdDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return CleanManageCmdDataWriter::_duplicate (
      dynamic_cast<CleanManageCmdDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::CleanManageCmdDataWriter_ptr
SkyworthMsgs::CleanManageCmdDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return CleanManageCmdDataWriter::_duplicate (
      dynamic_cast<CleanManageCmdDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::CleanManageCmdDataWriter_ptr
SkyworthMsgs::CleanManageCmdDataWriter::_nil (void)
{
  return 0;
}

SkyworthMsgs::CleanManageCmdDataWriter_ptr
SkyworthMsgs::CleanManageCmdDataWriter::_duplicate (CleanManageCmdDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::CleanManageCmdDataWriter::_tao_release (CleanManageCmdDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::CleanManageCmdDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/CleanManageCmdDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::CleanManageCmdDataWriter::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/CleanManageCmdDataWriter:1.0";
}

::CORBA::Boolean
SkyworthMsgs::CleanManageCmdDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_CleanManageCmdDataWriter (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/CleanManageCmdDataWriter:1.0",
    "CleanManageCmdDataWriter");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_CleanManageCmdDataWriter =
    &_tao_tc_SkyworthMsgs_CleanManageCmdDataWriter;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::CleanManageCmdDataReader.

SkyworthMsgs::CleanManageCmdDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::CleanManageCmdDataReader>::duplicate (
    SkyworthMsgs::CleanManageCmdDataReader_ptr p)
{
  return SkyworthMsgs::CleanManageCmdDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::CleanManageCmdDataReader>::release (
    SkyworthMsgs::CleanManageCmdDataReader_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::CleanManageCmdDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::CleanManageCmdDataReader>::nil (void)
{
  return SkyworthMsgs::CleanManageCmdDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::CleanManageCmdDataReader>::marshal (
    const SkyworthMsgs::CleanManageCmdDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::CleanManageCmdDataReader::CleanManageCmdDataReader (void)
{}

SkyworthMsgs::CleanManageCmdDataReader::~CleanManageCmdDataReader (void)
{
}

void
SkyworthMsgs::CleanManageCmdDataReader::_tao_any_destructor (void *_tao_void_pointer)
{
  CleanManageCmdDataReader *_tao_tmp_pointer =
    static_cast<CleanManageCmdDataReader *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::CleanManageCmdDataReader_ptr
SkyworthMsgs::CleanManageCmdDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return CleanManageCmdDataReader::_duplicate (
      dynamic_cast<CleanManageCmdDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::CleanManageCmdDataReader_ptr
SkyworthMsgs::CleanManageCmdDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return CleanManageCmdDataReader::_duplicate (
      dynamic_cast<CleanManageCmdDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::CleanManageCmdDataReader_ptr
SkyworthMsgs::CleanManageCmdDataReader::_nil (void)
{
  return 0;
}

SkyworthMsgs::CleanManageCmdDataReader_ptr
SkyworthMsgs::CleanManageCmdDataReader::_duplicate (CleanManageCmdDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::CleanManageCmdDataReader::_tao_release (CleanManageCmdDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::CleanManageCmdDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/CleanManageCmdDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::CleanManageCmdDataReader::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/CleanManageCmdDataReader:1.0";
}

::CORBA::Boolean
SkyworthMsgs::CleanManageCmdDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_CleanManageCmdDataReader (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/CleanManageCmdDataReader:1.0",
    "CleanManageCmdDataReader");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_CleanManageCmdDataReader =
    &_tao_tc_SkyworthMsgs_CleanManageCmdDataReader;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:51



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:464


#ifndef _TAO_TYPECODE_SkyworthMsgs_MapLiveCmdSeq_GUARD
#define _TAO_TYPECODE_SkyworthMsgs_MapLiveCmdSeq_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        SkyworthMsgs_MapLiveCmdSeq_0 (
          ::CORBA::tk_sequence,
          &SkyworthMsgs::_tc_MapLiveCmd,
          0U);
        
      ::CORBA::TypeCode_ptr const tc_SkyworthMsgs_MapLiveCmdSeq_0 =
        &SkyworthMsgs_MapLiveCmdSeq_0;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_SkyworthMsgs_MapLiveCmdSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_MapLiveCmdSeq (
    ::CORBA::tk_alias,
    "IDL:SkyworthMsgs/MapLiveCmdSeq:1.0",
    "MapLiveCmdSeq",
    &TAO::TypeCode::tc_SkyworthMsgs_MapLiveCmdSeq_0);
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_MapLiveCmdSeq =
    &_tao_tc_SkyworthMsgs_MapLiveCmdSeq;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::MapLiveCmdTypeSupport.

SkyworthMsgs::MapLiveCmdTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::MapLiveCmdTypeSupport>::duplicate (
    SkyworthMsgs::MapLiveCmdTypeSupport_ptr p)
{
  return SkyworthMsgs::MapLiveCmdTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::MapLiveCmdTypeSupport>::release (
    SkyworthMsgs::MapLiveCmdTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::MapLiveCmdTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::MapLiveCmdTypeSupport>::nil (void)
{
  return SkyworthMsgs::MapLiveCmdTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::MapLiveCmdTypeSupport>::marshal (
    const SkyworthMsgs::MapLiveCmdTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::MapLiveCmdTypeSupport::MapLiveCmdTypeSupport (void)
{}

SkyworthMsgs::MapLiveCmdTypeSupport::~MapLiveCmdTypeSupport (void)
{
}

void
SkyworthMsgs::MapLiveCmdTypeSupport::_tao_any_destructor (void *_tao_void_pointer)
{
  MapLiveCmdTypeSupport *_tao_tmp_pointer =
    static_cast<MapLiveCmdTypeSupport *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::MapLiveCmdTypeSupport_ptr
SkyworthMsgs::MapLiveCmdTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return MapLiveCmdTypeSupport::_duplicate (
      dynamic_cast<MapLiveCmdTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::MapLiveCmdTypeSupport_ptr
SkyworthMsgs::MapLiveCmdTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return MapLiveCmdTypeSupport::_duplicate (
      dynamic_cast<MapLiveCmdTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::MapLiveCmdTypeSupport_ptr
SkyworthMsgs::MapLiveCmdTypeSupport::_nil (void)
{
  return 0;
}

SkyworthMsgs::MapLiveCmdTypeSupport_ptr
SkyworthMsgs::MapLiveCmdTypeSupport::_duplicate (MapLiveCmdTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::MapLiveCmdTypeSupport::_tao_release (MapLiveCmdTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::MapLiveCmdTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/MapLiveCmdTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::MapLiveCmdTypeSupport::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/MapLiveCmdTypeSupport:1.0";
}

::CORBA::Boolean
SkyworthMsgs::MapLiveCmdTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_MapLiveCmdTypeSupport (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/MapLiveCmdTypeSupport:1.0",
    "MapLiveCmdTypeSupport");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_MapLiveCmdTypeSupport =
    &_tao_tc_SkyworthMsgs_MapLiveCmdTypeSupport;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::MapLiveCmdDataWriter.

SkyworthMsgs::MapLiveCmdDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::MapLiveCmdDataWriter>::duplicate (
    SkyworthMsgs::MapLiveCmdDataWriter_ptr p)
{
  return SkyworthMsgs::MapLiveCmdDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::MapLiveCmdDataWriter>::release (
    SkyworthMsgs::MapLiveCmdDataWriter_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::MapLiveCmdDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::MapLiveCmdDataWriter>::nil (void)
{
  return SkyworthMsgs::MapLiveCmdDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::MapLiveCmdDataWriter>::marshal (
    const SkyworthMsgs::MapLiveCmdDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::MapLiveCmdDataWriter::MapLiveCmdDataWriter (void)
{}

SkyworthMsgs::MapLiveCmdDataWriter::~MapLiveCmdDataWriter (void)
{
}

void
SkyworthMsgs::MapLiveCmdDataWriter::_tao_any_destructor (void *_tao_void_pointer)
{
  MapLiveCmdDataWriter *_tao_tmp_pointer =
    static_cast<MapLiveCmdDataWriter *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::MapLiveCmdDataWriter_ptr
SkyworthMsgs::MapLiveCmdDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return MapLiveCmdDataWriter::_duplicate (
      dynamic_cast<MapLiveCmdDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::MapLiveCmdDataWriter_ptr
SkyworthMsgs::MapLiveCmdDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return MapLiveCmdDataWriter::_duplicate (
      dynamic_cast<MapLiveCmdDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::MapLiveCmdDataWriter_ptr
SkyworthMsgs::MapLiveCmdDataWriter::_nil (void)
{
  return 0;
}

SkyworthMsgs::MapLiveCmdDataWriter_ptr
SkyworthMsgs::MapLiveCmdDataWriter::_duplicate (MapLiveCmdDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::MapLiveCmdDataWriter::_tao_release (MapLiveCmdDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::MapLiveCmdDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/MapLiveCmdDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::MapLiveCmdDataWriter::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/MapLiveCmdDataWriter:1.0";
}

::CORBA::Boolean
SkyworthMsgs::MapLiveCmdDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_MapLiveCmdDataWriter (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/MapLiveCmdDataWriter:1.0",
    "MapLiveCmdDataWriter");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_MapLiveCmdDataWriter =
    &_tao_tc_SkyworthMsgs_MapLiveCmdDataWriter;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::MapLiveCmdDataReader.

SkyworthMsgs::MapLiveCmdDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::MapLiveCmdDataReader>::duplicate (
    SkyworthMsgs::MapLiveCmdDataReader_ptr p)
{
  return SkyworthMsgs::MapLiveCmdDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::MapLiveCmdDataReader>::release (
    SkyworthMsgs::MapLiveCmdDataReader_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::MapLiveCmdDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::MapLiveCmdDataReader>::nil (void)
{
  return SkyworthMsgs::MapLiveCmdDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::MapLiveCmdDataReader>::marshal (
    const SkyworthMsgs::MapLiveCmdDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::MapLiveCmdDataReader::MapLiveCmdDataReader (void)
{}

SkyworthMsgs::MapLiveCmdDataReader::~MapLiveCmdDataReader (void)
{
}

void
SkyworthMsgs::MapLiveCmdDataReader::_tao_any_destructor (void *_tao_void_pointer)
{
  MapLiveCmdDataReader *_tao_tmp_pointer =
    static_cast<MapLiveCmdDataReader *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::MapLiveCmdDataReader_ptr
SkyworthMsgs::MapLiveCmdDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return MapLiveCmdDataReader::_duplicate (
      dynamic_cast<MapLiveCmdDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::MapLiveCmdDataReader_ptr
SkyworthMsgs::MapLiveCmdDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return MapLiveCmdDataReader::_duplicate (
      dynamic_cast<MapLiveCmdDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::MapLiveCmdDataReader_ptr
SkyworthMsgs::MapLiveCmdDataReader::_nil (void)
{
  return 0;
}

SkyworthMsgs::MapLiveCmdDataReader_ptr
SkyworthMsgs::MapLiveCmdDataReader::_duplicate (MapLiveCmdDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::MapLiveCmdDataReader::_tao_release (MapLiveCmdDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::MapLiveCmdDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/MapLiveCmdDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::MapLiveCmdDataReader::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/MapLiveCmdDataReader:1.0";
}

::CORBA::Boolean
SkyworthMsgs::MapLiveCmdDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_MapLiveCmdDataReader (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/MapLiveCmdDataReader:1.0",
    "MapLiveCmdDataReader");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_MapLiveCmdDataReader =
    &_tao_tc_SkyworthMsgs_MapLiveCmdDataReader;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:51



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:464


#ifndef _TAO_TYPECODE_SkyworthMsgs_CleanRouterStatusSeq_GUARD
#define _TAO_TYPECODE_SkyworthMsgs_CleanRouterStatusSeq_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        SkyworthMsgs_CleanRouterStatusSeq_0 (
          ::CORBA::tk_sequence,
          &SkyworthMsgs::_tc_CleanRouterStatus,
          0U);
        
      ::CORBA::TypeCode_ptr const tc_SkyworthMsgs_CleanRouterStatusSeq_0 =
        &SkyworthMsgs_CleanRouterStatusSeq_0;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_SkyworthMsgs_CleanRouterStatusSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_CleanRouterStatusSeq (
    ::CORBA::tk_alias,
    "IDL:SkyworthMsgs/CleanRouterStatusSeq:1.0",
    "CleanRouterStatusSeq",
    &TAO::TypeCode::tc_SkyworthMsgs_CleanRouterStatusSeq_0);
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_CleanRouterStatusSeq =
    &_tao_tc_SkyworthMsgs_CleanRouterStatusSeq;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::CleanRouterStatusTypeSupport.

SkyworthMsgs::CleanRouterStatusTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::CleanRouterStatusTypeSupport>::duplicate (
    SkyworthMsgs::CleanRouterStatusTypeSupport_ptr p)
{
  return SkyworthMsgs::CleanRouterStatusTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::CleanRouterStatusTypeSupport>::release (
    SkyworthMsgs::CleanRouterStatusTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::CleanRouterStatusTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::CleanRouterStatusTypeSupport>::nil (void)
{
  return SkyworthMsgs::CleanRouterStatusTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::CleanRouterStatusTypeSupport>::marshal (
    const SkyworthMsgs::CleanRouterStatusTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::CleanRouterStatusTypeSupport::CleanRouterStatusTypeSupport (void)
{}

SkyworthMsgs::CleanRouterStatusTypeSupport::~CleanRouterStatusTypeSupport (void)
{
}

void
SkyworthMsgs::CleanRouterStatusTypeSupport::_tao_any_destructor (void *_tao_void_pointer)
{
  CleanRouterStatusTypeSupport *_tao_tmp_pointer =
    static_cast<CleanRouterStatusTypeSupport *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::CleanRouterStatusTypeSupport_ptr
SkyworthMsgs::CleanRouterStatusTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return CleanRouterStatusTypeSupport::_duplicate (
      dynamic_cast<CleanRouterStatusTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::CleanRouterStatusTypeSupport_ptr
SkyworthMsgs::CleanRouterStatusTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return CleanRouterStatusTypeSupport::_duplicate (
      dynamic_cast<CleanRouterStatusTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::CleanRouterStatusTypeSupport_ptr
SkyworthMsgs::CleanRouterStatusTypeSupport::_nil (void)
{
  return 0;
}

SkyworthMsgs::CleanRouterStatusTypeSupport_ptr
SkyworthMsgs::CleanRouterStatusTypeSupport::_duplicate (CleanRouterStatusTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::CleanRouterStatusTypeSupport::_tao_release (CleanRouterStatusTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::CleanRouterStatusTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/CleanRouterStatusTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::CleanRouterStatusTypeSupport::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/CleanRouterStatusTypeSupport:1.0";
}

::CORBA::Boolean
SkyworthMsgs::CleanRouterStatusTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_CleanRouterStatusTypeSupport (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/CleanRouterStatusTypeSupport:1.0",
    "CleanRouterStatusTypeSupport");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_CleanRouterStatusTypeSupport =
    &_tao_tc_SkyworthMsgs_CleanRouterStatusTypeSupport;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::CleanRouterStatusDataWriter.

SkyworthMsgs::CleanRouterStatusDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::CleanRouterStatusDataWriter>::duplicate (
    SkyworthMsgs::CleanRouterStatusDataWriter_ptr p)
{
  return SkyworthMsgs::CleanRouterStatusDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::CleanRouterStatusDataWriter>::release (
    SkyworthMsgs::CleanRouterStatusDataWriter_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::CleanRouterStatusDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::CleanRouterStatusDataWriter>::nil (void)
{
  return SkyworthMsgs::CleanRouterStatusDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::CleanRouterStatusDataWriter>::marshal (
    const SkyworthMsgs::CleanRouterStatusDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::CleanRouterStatusDataWriter::CleanRouterStatusDataWriter (void)
{}

SkyworthMsgs::CleanRouterStatusDataWriter::~CleanRouterStatusDataWriter (void)
{
}

void
SkyworthMsgs::CleanRouterStatusDataWriter::_tao_any_destructor (void *_tao_void_pointer)
{
  CleanRouterStatusDataWriter *_tao_tmp_pointer =
    static_cast<CleanRouterStatusDataWriter *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::CleanRouterStatusDataWriter_ptr
SkyworthMsgs::CleanRouterStatusDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return CleanRouterStatusDataWriter::_duplicate (
      dynamic_cast<CleanRouterStatusDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::CleanRouterStatusDataWriter_ptr
SkyworthMsgs::CleanRouterStatusDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return CleanRouterStatusDataWriter::_duplicate (
      dynamic_cast<CleanRouterStatusDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::CleanRouterStatusDataWriter_ptr
SkyworthMsgs::CleanRouterStatusDataWriter::_nil (void)
{
  return 0;
}

SkyworthMsgs::CleanRouterStatusDataWriter_ptr
SkyworthMsgs::CleanRouterStatusDataWriter::_duplicate (CleanRouterStatusDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::CleanRouterStatusDataWriter::_tao_release (CleanRouterStatusDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::CleanRouterStatusDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/CleanRouterStatusDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::CleanRouterStatusDataWriter::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/CleanRouterStatusDataWriter:1.0";
}

::CORBA::Boolean
SkyworthMsgs::CleanRouterStatusDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_CleanRouterStatusDataWriter (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/CleanRouterStatusDataWriter:1.0",
    "CleanRouterStatusDataWriter");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_CleanRouterStatusDataWriter =
    &_tao_tc_SkyworthMsgs_CleanRouterStatusDataWriter;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::CleanRouterStatusDataReader.

SkyworthMsgs::CleanRouterStatusDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::CleanRouterStatusDataReader>::duplicate (
    SkyworthMsgs::CleanRouterStatusDataReader_ptr p)
{
  return SkyworthMsgs::CleanRouterStatusDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::CleanRouterStatusDataReader>::release (
    SkyworthMsgs::CleanRouterStatusDataReader_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::CleanRouterStatusDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::CleanRouterStatusDataReader>::nil (void)
{
  return SkyworthMsgs::CleanRouterStatusDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::CleanRouterStatusDataReader>::marshal (
    const SkyworthMsgs::CleanRouterStatusDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::CleanRouterStatusDataReader::CleanRouterStatusDataReader (void)
{}

SkyworthMsgs::CleanRouterStatusDataReader::~CleanRouterStatusDataReader (void)
{
}

void
SkyworthMsgs::CleanRouterStatusDataReader::_tao_any_destructor (void *_tao_void_pointer)
{
  CleanRouterStatusDataReader *_tao_tmp_pointer =
    static_cast<CleanRouterStatusDataReader *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::CleanRouterStatusDataReader_ptr
SkyworthMsgs::CleanRouterStatusDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return CleanRouterStatusDataReader::_duplicate (
      dynamic_cast<CleanRouterStatusDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::CleanRouterStatusDataReader_ptr
SkyworthMsgs::CleanRouterStatusDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return CleanRouterStatusDataReader::_duplicate (
      dynamic_cast<CleanRouterStatusDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::CleanRouterStatusDataReader_ptr
SkyworthMsgs::CleanRouterStatusDataReader::_nil (void)
{
  return 0;
}

SkyworthMsgs::CleanRouterStatusDataReader_ptr
SkyworthMsgs::CleanRouterStatusDataReader::_duplicate (CleanRouterStatusDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::CleanRouterStatusDataReader::_tao_release (CleanRouterStatusDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::CleanRouterStatusDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/CleanRouterStatusDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::CleanRouterStatusDataReader::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/CleanRouterStatusDataReader:1.0";
}

::CORBA::Boolean
SkyworthMsgs::CleanRouterStatusDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_CleanRouterStatusDataReader (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/CleanRouterStatusDataReader:1.0",
    "CleanRouterStatusDataReader");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_CleanRouterStatusDataReader =
    &_tao_tc_SkyworthMsgs_CleanRouterStatusDataReader;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:51



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:464


#ifndef _TAO_TYPECODE_SkyworthMsgs_CleanRouterCmdSeq_GUARD
#define _TAO_TYPECODE_SkyworthMsgs_CleanRouterCmdSeq_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        SkyworthMsgs_CleanRouterCmdSeq_0 (
          ::CORBA::tk_sequence,
          &SkyworthMsgs::_tc_CleanRouterCmd,
          0U);
        
      ::CORBA::TypeCode_ptr const tc_SkyworthMsgs_CleanRouterCmdSeq_0 =
        &SkyworthMsgs_CleanRouterCmdSeq_0;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_SkyworthMsgs_CleanRouterCmdSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_CleanRouterCmdSeq (
    ::CORBA::tk_alias,
    "IDL:SkyworthMsgs/CleanRouterCmdSeq:1.0",
    "CleanRouterCmdSeq",
    &TAO::TypeCode::tc_SkyworthMsgs_CleanRouterCmdSeq_0);
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_CleanRouterCmdSeq =
    &_tao_tc_SkyworthMsgs_CleanRouterCmdSeq;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::CleanRouterCmdTypeSupport.

SkyworthMsgs::CleanRouterCmdTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::CleanRouterCmdTypeSupport>::duplicate (
    SkyworthMsgs::CleanRouterCmdTypeSupport_ptr p)
{
  return SkyworthMsgs::CleanRouterCmdTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::CleanRouterCmdTypeSupport>::release (
    SkyworthMsgs::CleanRouterCmdTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::CleanRouterCmdTypeSupport_ptr
TAO::Objref_Traits<SkyworthMsgs::CleanRouterCmdTypeSupport>::nil (void)
{
  return SkyworthMsgs::CleanRouterCmdTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::CleanRouterCmdTypeSupport>::marshal (
    const SkyworthMsgs::CleanRouterCmdTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::CleanRouterCmdTypeSupport::CleanRouterCmdTypeSupport (void)
{}

SkyworthMsgs::CleanRouterCmdTypeSupport::~CleanRouterCmdTypeSupport (void)
{
}

void
SkyworthMsgs::CleanRouterCmdTypeSupport::_tao_any_destructor (void *_tao_void_pointer)
{
  CleanRouterCmdTypeSupport *_tao_tmp_pointer =
    static_cast<CleanRouterCmdTypeSupport *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::CleanRouterCmdTypeSupport_ptr
SkyworthMsgs::CleanRouterCmdTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return CleanRouterCmdTypeSupport::_duplicate (
      dynamic_cast<CleanRouterCmdTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::CleanRouterCmdTypeSupport_ptr
SkyworthMsgs::CleanRouterCmdTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return CleanRouterCmdTypeSupport::_duplicate (
      dynamic_cast<CleanRouterCmdTypeSupport_ptr> (_tao_objref)
    );
}

SkyworthMsgs::CleanRouterCmdTypeSupport_ptr
SkyworthMsgs::CleanRouterCmdTypeSupport::_nil (void)
{
  return 0;
}

SkyworthMsgs::CleanRouterCmdTypeSupport_ptr
SkyworthMsgs::CleanRouterCmdTypeSupport::_duplicate (CleanRouterCmdTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::CleanRouterCmdTypeSupport::_tao_release (CleanRouterCmdTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::CleanRouterCmdTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/CleanRouterCmdTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::CleanRouterCmdTypeSupport::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/CleanRouterCmdTypeSupport:1.0";
}

::CORBA::Boolean
SkyworthMsgs::CleanRouterCmdTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_CleanRouterCmdTypeSupport (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/CleanRouterCmdTypeSupport:1.0",
    "CleanRouterCmdTypeSupport");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_CleanRouterCmdTypeSupport =
    &_tao_tc_SkyworthMsgs_CleanRouterCmdTypeSupport;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::CleanRouterCmdDataWriter.

SkyworthMsgs::CleanRouterCmdDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::CleanRouterCmdDataWriter>::duplicate (
    SkyworthMsgs::CleanRouterCmdDataWriter_ptr p)
{
  return SkyworthMsgs::CleanRouterCmdDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::CleanRouterCmdDataWriter>::release (
    SkyworthMsgs::CleanRouterCmdDataWriter_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::CleanRouterCmdDataWriter_ptr
TAO::Objref_Traits<SkyworthMsgs::CleanRouterCmdDataWriter>::nil (void)
{
  return SkyworthMsgs::CleanRouterCmdDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::CleanRouterCmdDataWriter>::marshal (
    const SkyworthMsgs::CleanRouterCmdDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::CleanRouterCmdDataWriter::CleanRouterCmdDataWriter (void)
{}

SkyworthMsgs::CleanRouterCmdDataWriter::~CleanRouterCmdDataWriter (void)
{
}

void
SkyworthMsgs::CleanRouterCmdDataWriter::_tao_any_destructor (void *_tao_void_pointer)
{
  CleanRouterCmdDataWriter *_tao_tmp_pointer =
    static_cast<CleanRouterCmdDataWriter *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::CleanRouterCmdDataWriter_ptr
SkyworthMsgs::CleanRouterCmdDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return CleanRouterCmdDataWriter::_duplicate (
      dynamic_cast<CleanRouterCmdDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::CleanRouterCmdDataWriter_ptr
SkyworthMsgs::CleanRouterCmdDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return CleanRouterCmdDataWriter::_duplicate (
      dynamic_cast<CleanRouterCmdDataWriter_ptr> (_tao_objref)
    );
}

SkyworthMsgs::CleanRouterCmdDataWriter_ptr
SkyworthMsgs::CleanRouterCmdDataWriter::_nil (void)
{
  return 0;
}

SkyworthMsgs::CleanRouterCmdDataWriter_ptr
SkyworthMsgs::CleanRouterCmdDataWriter::_duplicate (CleanRouterCmdDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::CleanRouterCmdDataWriter::_tao_release (CleanRouterCmdDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::CleanRouterCmdDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/CleanRouterCmdDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::CleanRouterCmdDataWriter::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/CleanRouterCmdDataWriter:1.0";
}

::CORBA::Boolean
SkyworthMsgs::CleanRouterCmdDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_CleanRouterCmdDataWriter (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/CleanRouterCmdDataWriter:1.0",
    "CleanRouterCmdDataWriter");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_CleanRouterCmdDataWriter =
    &_tao_tc_SkyworthMsgs_CleanRouterCmdDataWriter;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for SkyworthMsgs::CleanRouterCmdDataReader.

SkyworthMsgs::CleanRouterCmdDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::CleanRouterCmdDataReader>::duplicate (
    SkyworthMsgs::CleanRouterCmdDataReader_ptr p)
{
  return SkyworthMsgs::CleanRouterCmdDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<SkyworthMsgs::CleanRouterCmdDataReader>::release (
    SkyworthMsgs::CleanRouterCmdDataReader_ptr p)
{
  ::CORBA::release (p);
}

SkyworthMsgs::CleanRouterCmdDataReader_ptr
TAO::Objref_Traits<SkyworthMsgs::CleanRouterCmdDataReader>::nil (void)
{
  return SkyworthMsgs::CleanRouterCmdDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<SkyworthMsgs::CleanRouterCmdDataReader>::marshal (
    const SkyworthMsgs::CleanRouterCmdDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

SkyworthMsgs::CleanRouterCmdDataReader::CleanRouterCmdDataReader (void)
{}

SkyworthMsgs::CleanRouterCmdDataReader::~CleanRouterCmdDataReader (void)
{
}

void
SkyworthMsgs::CleanRouterCmdDataReader::_tao_any_destructor (void *_tao_void_pointer)
{
  CleanRouterCmdDataReader *_tao_tmp_pointer =
    static_cast<CleanRouterCmdDataReader *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

SkyworthMsgs::CleanRouterCmdDataReader_ptr
SkyworthMsgs::CleanRouterCmdDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return CleanRouterCmdDataReader::_duplicate (
      dynamic_cast<CleanRouterCmdDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::CleanRouterCmdDataReader_ptr
SkyworthMsgs::CleanRouterCmdDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return CleanRouterCmdDataReader::_duplicate (
      dynamic_cast<CleanRouterCmdDataReader_ptr> (_tao_objref)
    );
}

SkyworthMsgs::CleanRouterCmdDataReader_ptr
SkyworthMsgs::CleanRouterCmdDataReader::_nil (void)
{
  return 0;
}

SkyworthMsgs::CleanRouterCmdDataReader_ptr
SkyworthMsgs::CleanRouterCmdDataReader::_duplicate (CleanRouterCmdDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
SkyworthMsgs::CleanRouterCmdDataReader::_tao_release (CleanRouterCmdDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
SkyworthMsgs::CleanRouterCmdDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:SkyworthMsgs/CleanRouterCmdDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* SkyworthMsgs::CleanRouterCmdDataReader::_interface_repository_id (void) const
{
  return "IDL:SkyworthMsgs/CleanRouterCmdDataReader:1.0";
}

::CORBA::Boolean
SkyworthMsgs::CleanRouterCmdDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_SkyworthMsgs_CleanRouterCmdDataReader (
    ::CORBA::tk_local_interface,
    "IDL:SkyworthMsgs/CleanRouterCmdDataReader:1.0",
    "CleanRouterCmdDataReader");
  

namespace SkyworthMsgs
{
  ::CORBA::TypeCode_ptr const _tc_CleanRouterCmdDataReader =
    &_tao_tc_SkyworthMsgs_CleanRouterCmdDataReader;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::EdgePolorPointTypeSupport>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::EdgePolorPointTypeSupport>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::EdgePolorPointTypeSupport>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      EdgePolorPointTypeSupport_ptr _tao_elem)
  {
    EdgePolorPointTypeSupport_ptr _tao_objptr =
      EdgePolorPointTypeSupport::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      EdgePolorPointTypeSupport_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<EdgePolorPointTypeSupport>::insert (
        _tao_any,
        EdgePolorPointTypeSupport::_tao_any_destructor,
        _tc_EdgePolorPointTypeSupport,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      EdgePolorPointTypeSupport_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<EdgePolorPointTypeSupport>::extract (
          _tao_any,
          EdgePolorPointTypeSupport::_tao_any_destructor,
          _tc_EdgePolorPointTypeSupport,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::EdgePolorPointTypeSupport_ptr _tao_elem)
{
  SkyworthMsgs::EdgePolorPointTypeSupport_ptr _tao_objptr =
    SkyworthMsgs::EdgePolorPointTypeSupport::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::EdgePolorPointTypeSupport_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::EdgePolorPointTypeSupport>::insert (
      _tao_any,
      SkyworthMsgs::EdgePolorPointTypeSupport::_tao_any_destructor,
      SkyworthMsgs::_tc_EdgePolorPointTypeSupport,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::EdgePolorPointTypeSupport_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::EdgePolorPointTypeSupport>::extract (
        _tao_any,
        SkyworthMsgs::EdgePolorPointTypeSupport::_tao_any_destructor,
        SkyworthMsgs::_tc_EdgePolorPointTypeSupport,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::EdgePolorPointDataWriter>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::EdgePolorPointDataWriter>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::EdgePolorPointDataWriter>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      EdgePolorPointDataWriter_ptr _tao_elem)
  {
    EdgePolorPointDataWriter_ptr _tao_objptr =
      EdgePolorPointDataWriter::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      EdgePolorPointDataWriter_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<EdgePolorPointDataWriter>::insert (
        _tao_any,
        EdgePolorPointDataWriter::_tao_any_destructor,
        _tc_EdgePolorPointDataWriter,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      EdgePolorPointDataWriter_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<EdgePolorPointDataWriter>::extract (
          _tao_any,
          EdgePolorPointDataWriter::_tao_any_destructor,
          _tc_EdgePolorPointDataWriter,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::EdgePolorPointDataWriter_ptr _tao_elem)
{
  SkyworthMsgs::EdgePolorPointDataWriter_ptr _tao_objptr =
    SkyworthMsgs::EdgePolorPointDataWriter::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::EdgePolorPointDataWriter_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::EdgePolorPointDataWriter>::insert (
      _tao_any,
      SkyworthMsgs::EdgePolorPointDataWriter::_tao_any_destructor,
      SkyworthMsgs::_tc_EdgePolorPointDataWriter,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::EdgePolorPointDataWriter_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::EdgePolorPointDataWriter>::extract (
        _tao_any,
        SkyworthMsgs::EdgePolorPointDataWriter::_tao_any_destructor,
        SkyworthMsgs::_tc_EdgePolorPointDataWriter,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::EdgePolorPointDataReader>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::EdgePolorPointDataReader>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::EdgePolorPointDataReader>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      EdgePolorPointDataReader_ptr _tao_elem)
  {
    EdgePolorPointDataReader_ptr _tao_objptr =
      EdgePolorPointDataReader::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      EdgePolorPointDataReader_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<EdgePolorPointDataReader>::insert (
        _tao_any,
        EdgePolorPointDataReader::_tao_any_destructor,
        _tc_EdgePolorPointDataReader,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      EdgePolorPointDataReader_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<EdgePolorPointDataReader>::extract (
          _tao_any,
          EdgePolorPointDataReader::_tao_any_destructor,
          _tc_EdgePolorPointDataReader,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::EdgePolorPointDataReader_ptr _tao_elem)
{
  SkyworthMsgs::EdgePolorPointDataReader_ptr _tao_objptr =
    SkyworthMsgs::EdgePolorPointDataReader::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::EdgePolorPointDataReader_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::EdgePolorPointDataReader>::insert (
      _tao_any,
      SkyworthMsgs::EdgePolorPointDataReader::_tao_any_destructor,
      SkyworthMsgs::_tc_EdgePolorPointDataReader,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::EdgePolorPointDataReader_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::EdgePolorPointDataReader>::extract (
        _tao_any,
        SkyworthMsgs::EdgePolorPointDataReader::_tao_any_destructor,
        SkyworthMsgs::_tc_EdgePolorPointDataReader,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::EdgeXyzPointTypeSupport>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::EdgeXyzPointTypeSupport>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::EdgeXyzPointTypeSupport>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      EdgeXyzPointTypeSupport_ptr _tao_elem)
  {
    EdgeXyzPointTypeSupport_ptr _tao_objptr =
      EdgeXyzPointTypeSupport::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      EdgeXyzPointTypeSupport_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<EdgeXyzPointTypeSupport>::insert (
        _tao_any,
        EdgeXyzPointTypeSupport::_tao_any_destructor,
        _tc_EdgeXyzPointTypeSupport,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      EdgeXyzPointTypeSupport_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<EdgeXyzPointTypeSupport>::extract (
          _tao_any,
          EdgeXyzPointTypeSupport::_tao_any_destructor,
          _tc_EdgeXyzPointTypeSupport,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::EdgeXyzPointTypeSupport_ptr _tao_elem)
{
  SkyworthMsgs::EdgeXyzPointTypeSupport_ptr _tao_objptr =
    SkyworthMsgs::EdgeXyzPointTypeSupport::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::EdgeXyzPointTypeSupport_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::EdgeXyzPointTypeSupport>::insert (
      _tao_any,
      SkyworthMsgs::EdgeXyzPointTypeSupport::_tao_any_destructor,
      SkyworthMsgs::_tc_EdgeXyzPointTypeSupport,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::EdgeXyzPointTypeSupport_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::EdgeXyzPointTypeSupport>::extract (
        _tao_any,
        SkyworthMsgs::EdgeXyzPointTypeSupport::_tao_any_destructor,
        SkyworthMsgs::_tc_EdgeXyzPointTypeSupport,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::EdgeXyzPointDataWriter>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::EdgeXyzPointDataWriter>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::EdgeXyzPointDataWriter>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      EdgeXyzPointDataWriter_ptr _tao_elem)
  {
    EdgeXyzPointDataWriter_ptr _tao_objptr =
      EdgeXyzPointDataWriter::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      EdgeXyzPointDataWriter_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<EdgeXyzPointDataWriter>::insert (
        _tao_any,
        EdgeXyzPointDataWriter::_tao_any_destructor,
        _tc_EdgeXyzPointDataWriter,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      EdgeXyzPointDataWriter_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<EdgeXyzPointDataWriter>::extract (
          _tao_any,
          EdgeXyzPointDataWriter::_tao_any_destructor,
          _tc_EdgeXyzPointDataWriter,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::EdgeXyzPointDataWriter_ptr _tao_elem)
{
  SkyworthMsgs::EdgeXyzPointDataWriter_ptr _tao_objptr =
    SkyworthMsgs::EdgeXyzPointDataWriter::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::EdgeXyzPointDataWriter_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::EdgeXyzPointDataWriter>::insert (
      _tao_any,
      SkyworthMsgs::EdgeXyzPointDataWriter::_tao_any_destructor,
      SkyworthMsgs::_tc_EdgeXyzPointDataWriter,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::EdgeXyzPointDataWriter_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::EdgeXyzPointDataWriter>::extract (
        _tao_any,
        SkyworthMsgs::EdgeXyzPointDataWriter::_tao_any_destructor,
        SkyworthMsgs::_tc_EdgeXyzPointDataWriter,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::EdgeXyzPointDataReader>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::EdgeXyzPointDataReader>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::EdgeXyzPointDataReader>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      EdgeXyzPointDataReader_ptr _tao_elem)
  {
    EdgeXyzPointDataReader_ptr _tao_objptr =
      EdgeXyzPointDataReader::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      EdgeXyzPointDataReader_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<EdgeXyzPointDataReader>::insert (
        _tao_any,
        EdgeXyzPointDataReader::_tao_any_destructor,
        _tc_EdgeXyzPointDataReader,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      EdgeXyzPointDataReader_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<EdgeXyzPointDataReader>::extract (
          _tao_any,
          EdgeXyzPointDataReader::_tao_any_destructor,
          _tc_EdgeXyzPointDataReader,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::EdgeXyzPointDataReader_ptr _tao_elem)
{
  SkyworthMsgs::EdgeXyzPointDataReader_ptr _tao_objptr =
    SkyworthMsgs::EdgeXyzPointDataReader::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::EdgeXyzPointDataReader_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::EdgeXyzPointDataReader>::insert (
      _tao_any,
      SkyworthMsgs::EdgeXyzPointDataReader::_tao_any_destructor,
      SkyworthMsgs::_tc_EdgeXyzPointDataReader,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::EdgeXyzPointDataReader_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::EdgeXyzPointDataReader>::extract (
        _tao_any,
        SkyworthMsgs::EdgeXyzPointDataReader::_tao_any_destructor,
        SkyworthMsgs::_tc_EdgeXyzPointDataReader,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::DestXyzPointTypeSupport>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::DestXyzPointTypeSupport>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::DestXyzPointTypeSupport>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      DestXyzPointTypeSupport_ptr _tao_elem)
  {
    DestXyzPointTypeSupport_ptr _tao_objptr =
      DestXyzPointTypeSupport::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      DestXyzPointTypeSupport_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<DestXyzPointTypeSupport>::insert (
        _tao_any,
        DestXyzPointTypeSupport::_tao_any_destructor,
        _tc_DestXyzPointTypeSupport,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      DestXyzPointTypeSupport_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<DestXyzPointTypeSupport>::extract (
          _tao_any,
          DestXyzPointTypeSupport::_tao_any_destructor,
          _tc_DestXyzPointTypeSupport,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::DestXyzPointTypeSupport_ptr _tao_elem)
{
  SkyworthMsgs::DestXyzPointTypeSupport_ptr _tao_objptr =
    SkyworthMsgs::DestXyzPointTypeSupport::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::DestXyzPointTypeSupport_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::DestXyzPointTypeSupport>::insert (
      _tao_any,
      SkyworthMsgs::DestXyzPointTypeSupport::_tao_any_destructor,
      SkyworthMsgs::_tc_DestXyzPointTypeSupport,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::DestXyzPointTypeSupport_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::DestXyzPointTypeSupport>::extract (
        _tao_any,
        SkyworthMsgs::DestXyzPointTypeSupport::_tao_any_destructor,
        SkyworthMsgs::_tc_DestXyzPointTypeSupport,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::DestXyzPointDataWriter>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::DestXyzPointDataWriter>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::DestXyzPointDataWriter>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      DestXyzPointDataWriter_ptr _tao_elem)
  {
    DestXyzPointDataWriter_ptr _tao_objptr =
      DestXyzPointDataWriter::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      DestXyzPointDataWriter_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<DestXyzPointDataWriter>::insert (
        _tao_any,
        DestXyzPointDataWriter::_tao_any_destructor,
        _tc_DestXyzPointDataWriter,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      DestXyzPointDataWriter_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<DestXyzPointDataWriter>::extract (
          _tao_any,
          DestXyzPointDataWriter::_tao_any_destructor,
          _tc_DestXyzPointDataWriter,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::DestXyzPointDataWriter_ptr _tao_elem)
{
  SkyworthMsgs::DestXyzPointDataWriter_ptr _tao_objptr =
    SkyworthMsgs::DestXyzPointDataWriter::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::DestXyzPointDataWriter_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::DestXyzPointDataWriter>::insert (
      _tao_any,
      SkyworthMsgs::DestXyzPointDataWriter::_tao_any_destructor,
      SkyworthMsgs::_tc_DestXyzPointDataWriter,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::DestXyzPointDataWriter_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::DestXyzPointDataWriter>::extract (
        _tao_any,
        SkyworthMsgs::DestXyzPointDataWriter::_tao_any_destructor,
        SkyworthMsgs::_tc_DestXyzPointDataWriter,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::DestXyzPointDataReader>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::DestXyzPointDataReader>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::DestXyzPointDataReader>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      DestXyzPointDataReader_ptr _tao_elem)
  {
    DestXyzPointDataReader_ptr _tao_objptr =
      DestXyzPointDataReader::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      DestXyzPointDataReader_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<DestXyzPointDataReader>::insert (
        _tao_any,
        DestXyzPointDataReader::_tao_any_destructor,
        _tc_DestXyzPointDataReader,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      DestXyzPointDataReader_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<DestXyzPointDataReader>::extract (
          _tao_any,
          DestXyzPointDataReader::_tao_any_destructor,
          _tc_DestXyzPointDataReader,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::DestXyzPointDataReader_ptr _tao_elem)
{
  SkyworthMsgs::DestXyzPointDataReader_ptr _tao_objptr =
    SkyworthMsgs::DestXyzPointDataReader::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::DestXyzPointDataReader_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::DestXyzPointDataReader>::insert (
      _tao_any,
      SkyworthMsgs::DestXyzPointDataReader::_tao_any_destructor,
      SkyworthMsgs::_tc_DestXyzPointDataReader,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::DestXyzPointDataReader_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::DestXyzPointDataReader>::extract (
        _tao_any,
        SkyworthMsgs::DestXyzPointDataReader::_tao_any_destructor,
        SkyworthMsgs::_tc_DestXyzPointDataReader,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::DepthEdgeDataTypeSupport>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::DepthEdgeDataTypeSupport>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::DepthEdgeDataTypeSupport>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      DepthEdgeDataTypeSupport_ptr _tao_elem)
  {
    DepthEdgeDataTypeSupport_ptr _tao_objptr =
      DepthEdgeDataTypeSupport::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      DepthEdgeDataTypeSupport_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<DepthEdgeDataTypeSupport>::insert (
        _tao_any,
        DepthEdgeDataTypeSupport::_tao_any_destructor,
        _tc_DepthEdgeDataTypeSupport,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      DepthEdgeDataTypeSupport_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<DepthEdgeDataTypeSupport>::extract (
          _tao_any,
          DepthEdgeDataTypeSupport::_tao_any_destructor,
          _tc_DepthEdgeDataTypeSupport,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::DepthEdgeDataTypeSupport_ptr _tao_elem)
{
  SkyworthMsgs::DepthEdgeDataTypeSupport_ptr _tao_objptr =
    SkyworthMsgs::DepthEdgeDataTypeSupport::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::DepthEdgeDataTypeSupport_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::DepthEdgeDataTypeSupport>::insert (
      _tao_any,
      SkyworthMsgs::DepthEdgeDataTypeSupport::_tao_any_destructor,
      SkyworthMsgs::_tc_DepthEdgeDataTypeSupport,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::DepthEdgeDataTypeSupport_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::DepthEdgeDataTypeSupport>::extract (
        _tao_any,
        SkyworthMsgs::DepthEdgeDataTypeSupport::_tao_any_destructor,
        SkyworthMsgs::_tc_DepthEdgeDataTypeSupport,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::DepthEdgeDataDataWriter>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::DepthEdgeDataDataWriter>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::DepthEdgeDataDataWriter>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      DepthEdgeDataDataWriter_ptr _tao_elem)
  {
    DepthEdgeDataDataWriter_ptr _tao_objptr =
      DepthEdgeDataDataWriter::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      DepthEdgeDataDataWriter_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<DepthEdgeDataDataWriter>::insert (
        _tao_any,
        DepthEdgeDataDataWriter::_tao_any_destructor,
        _tc_DepthEdgeDataDataWriter,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      DepthEdgeDataDataWriter_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<DepthEdgeDataDataWriter>::extract (
          _tao_any,
          DepthEdgeDataDataWriter::_tao_any_destructor,
          _tc_DepthEdgeDataDataWriter,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::DepthEdgeDataDataWriter_ptr _tao_elem)
{
  SkyworthMsgs::DepthEdgeDataDataWriter_ptr _tao_objptr =
    SkyworthMsgs::DepthEdgeDataDataWriter::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::DepthEdgeDataDataWriter_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::DepthEdgeDataDataWriter>::insert (
      _tao_any,
      SkyworthMsgs::DepthEdgeDataDataWriter::_tao_any_destructor,
      SkyworthMsgs::_tc_DepthEdgeDataDataWriter,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::DepthEdgeDataDataWriter_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::DepthEdgeDataDataWriter>::extract (
        _tao_any,
        SkyworthMsgs::DepthEdgeDataDataWriter::_tao_any_destructor,
        SkyworthMsgs::_tc_DepthEdgeDataDataWriter,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::DepthEdgeDataDataReader>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::DepthEdgeDataDataReader>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::DepthEdgeDataDataReader>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      DepthEdgeDataDataReader_ptr _tao_elem)
  {
    DepthEdgeDataDataReader_ptr _tao_objptr =
      DepthEdgeDataDataReader::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      DepthEdgeDataDataReader_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<DepthEdgeDataDataReader>::insert (
        _tao_any,
        DepthEdgeDataDataReader::_tao_any_destructor,
        _tc_DepthEdgeDataDataReader,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      DepthEdgeDataDataReader_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<DepthEdgeDataDataReader>::extract (
          _tao_any,
          DepthEdgeDataDataReader::_tao_any_destructor,
          _tc_DepthEdgeDataDataReader,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::DepthEdgeDataDataReader_ptr _tao_elem)
{
  SkyworthMsgs::DepthEdgeDataDataReader_ptr _tao_objptr =
    SkyworthMsgs::DepthEdgeDataDataReader::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::DepthEdgeDataDataReader_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::DepthEdgeDataDataReader>::insert (
      _tao_any,
      SkyworthMsgs::DepthEdgeDataDataReader::_tao_any_destructor,
      SkyworthMsgs::_tc_DepthEdgeDataDataReader,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::DepthEdgeDataDataReader_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::DepthEdgeDataDataReader>::extract (
        _tao_any,
        SkyworthMsgs::DepthEdgeDataDataReader::_tao_any_destructor,
        SkyworthMsgs::_tc_DepthEdgeDataDataReader,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::UltraTouchDataTypeSupport>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::UltraTouchDataTypeSupport>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::UltraTouchDataTypeSupport>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      UltraTouchDataTypeSupport_ptr _tao_elem)
  {
    UltraTouchDataTypeSupport_ptr _tao_objptr =
      UltraTouchDataTypeSupport::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      UltraTouchDataTypeSupport_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<UltraTouchDataTypeSupport>::insert (
        _tao_any,
        UltraTouchDataTypeSupport::_tao_any_destructor,
        _tc_UltraTouchDataTypeSupport,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      UltraTouchDataTypeSupport_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<UltraTouchDataTypeSupport>::extract (
          _tao_any,
          UltraTouchDataTypeSupport::_tao_any_destructor,
          _tc_UltraTouchDataTypeSupport,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::UltraTouchDataTypeSupport_ptr _tao_elem)
{
  SkyworthMsgs::UltraTouchDataTypeSupport_ptr _tao_objptr =
    SkyworthMsgs::UltraTouchDataTypeSupport::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::UltraTouchDataTypeSupport_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::UltraTouchDataTypeSupport>::insert (
      _tao_any,
      SkyworthMsgs::UltraTouchDataTypeSupport::_tao_any_destructor,
      SkyworthMsgs::_tc_UltraTouchDataTypeSupport,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::UltraTouchDataTypeSupport_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::UltraTouchDataTypeSupport>::extract (
        _tao_any,
        SkyworthMsgs::UltraTouchDataTypeSupport::_tao_any_destructor,
        SkyworthMsgs::_tc_UltraTouchDataTypeSupport,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::UltraTouchDataDataWriter>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::UltraTouchDataDataWriter>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::UltraTouchDataDataWriter>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      UltraTouchDataDataWriter_ptr _tao_elem)
  {
    UltraTouchDataDataWriter_ptr _tao_objptr =
      UltraTouchDataDataWriter::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      UltraTouchDataDataWriter_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<UltraTouchDataDataWriter>::insert (
        _tao_any,
        UltraTouchDataDataWriter::_tao_any_destructor,
        _tc_UltraTouchDataDataWriter,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      UltraTouchDataDataWriter_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<UltraTouchDataDataWriter>::extract (
          _tao_any,
          UltraTouchDataDataWriter::_tao_any_destructor,
          _tc_UltraTouchDataDataWriter,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::UltraTouchDataDataWriter_ptr _tao_elem)
{
  SkyworthMsgs::UltraTouchDataDataWriter_ptr _tao_objptr =
    SkyworthMsgs::UltraTouchDataDataWriter::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::UltraTouchDataDataWriter_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::UltraTouchDataDataWriter>::insert (
      _tao_any,
      SkyworthMsgs::UltraTouchDataDataWriter::_tao_any_destructor,
      SkyworthMsgs::_tc_UltraTouchDataDataWriter,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::UltraTouchDataDataWriter_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::UltraTouchDataDataWriter>::extract (
        _tao_any,
        SkyworthMsgs::UltraTouchDataDataWriter::_tao_any_destructor,
        SkyworthMsgs::_tc_UltraTouchDataDataWriter,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::UltraTouchDataDataReader>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::UltraTouchDataDataReader>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::UltraTouchDataDataReader>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      UltraTouchDataDataReader_ptr _tao_elem)
  {
    UltraTouchDataDataReader_ptr _tao_objptr =
      UltraTouchDataDataReader::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      UltraTouchDataDataReader_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<UltraTouchDataDataReader>::insert (
        _tao_any,
        UltraTouchDataDataReader::_tao_any_destructor,
        _tc_UltraTouchDataDataReader,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      UltraTouchDataDataReader_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<UltraTouchDataDataReader>::extract (
          _tao_any,
          UltraTouchDataDataReader::_tao_any_destructor,
          _tc_UltraTouchDataDataReader,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::UltraTouchDataDataReader_ptr _tao_elem)
{
  SkyworthMsgs::UltraTouchDataDataReader_ptr _tao_objptr =
    SkyworthMsgs::UltraTouchDataDataReader::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::UltraTouchDataDataReader_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::UltraTouchDataDataReader>::insert (
      _tao_any,
      SkyworthMsgs::UltraTouchDataDataReader::_tao_any_destructor,
      SkyworthMsgs::_tc_UltraTouchDataDataReader,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::UltraTouchDataDataReader_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::UltraTouchDataDataReader>::extract (
        _tao_any,
        SkyworthMsgs::UltraTouchDataDataReader::_tao_any_destructor,
        SkyworthMsgs::_tc_UltraTouchDataDataReader,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::RgbPicTypeSupport>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::RgbPicTypeSupport>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::RgbPicTypeSupport>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      RgbPicTypeSupport_ptr _tao_elem)
  {
    RgbPicTypeSupport_ptr _tao_objptr =
      RgbPicTypeSupport::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      RgbPicTypeSupport_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<RgbPicTypeSupport>::insert (
        _tao_any,
        RgbPicTypeSupport::_tao_any_destructor,
        _tc_RgbPicTypeSupport,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      RgbPicTypeSupport_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<RgbPicTypeSupport>::extract (
          _tao_any,
          RgbPicTypeSupport::_tao_any_destructor,
          _tc_RgbPicTypeSupport,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::RgbPicTypeSupport_ptr _tao_elem)
{
  SkyworthMsgs::RgbPicTypeSupport_ptr _tao_objptr =
    SkyworthMsgs::RgbPicTypeSupport::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::RgbPicTypeSupport_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::RgbPicTypeSupport>::insert (
      _tao_any,
      SkyworthMsgs::RgbPicTypeSupport::_tao_any_destructor,
      SkyworthMsgs::_tc_RgbPicTypeSupport,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::RgbPicTypeSupport_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::RgbPicTypeSupport>::extract (
        _tao_any,
        SkyworthMsgs::RgbPicTypeSupport::_tao_any_destructor,
        SkyworthMsgs::_tc_RgbPicTypeSupport,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::RgbPicDataWriter>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::RgbPicDataWriter>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::RgbPicDataWriter>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      RgbPicDataWriter_ptr _tao_elem)
  {
    RgbPicDataWriter_ptr _tao_objptr =
      RgbPicDataWriter::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      RgbPicDataWriter_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<RgbPicDataWriter>::insert (
        _tao_any,
        RgbPicDataWriter::_tao_any_destructor,
        _tc_RgbPicDataWriter,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      RgbPicDataWriter_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<RgbPicDataWriter>::extract (
          _tao_any,
          RgbPicDataWriter::_tao_any_destructor,
          _tc_RgbPicDataWriter,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::RgbPicDataWriter_ptr _tao_elem)
{
  SkyworthMsgs::RgbPicDataWriter_ptr _tao_objptr =
    SkyworthMsgs::RgbPicDataWriter::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::RgbPicDataWriter_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::RgbPicDataWriter>::insert (
      _tao_any,
      SkyworthMsgs::RgbPicDataWriter::_tao_any_destructor,
      SkyworthMsgs::_tc_RgbPicDataWriter,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::RgbPicDataWriter_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::RgbPicDataWriter>::extract (
        _tao_any,
        SkyworthMsgs::RgbPicDataWriter::_tao_any_destructor,
        SkyworthMsgs::_tc_RgbPicDataWriter,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::RgbPicDataReader>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::RgbPicDataReader>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::RgbPicDataReader>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      RgbPicDataReader_ptr _tao_elem)
  {
    RgbPicDataReader_ptr _tao_objptr =
      RgbPicDataReader::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      RgbPicDataReader_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<RgbPicDataReader>::insert (
        _tao_any,
        RgbPicDataReader::_tao_any_destructor,
        _tc_RgbPicDataReader,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      RgbPicDataReader_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<RgbPicDataReader>::extract (
          _tao_any,
          RgbPicDataReader::_tao_any_destructor,
          _tc_RgbPicDataReader,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::RgbPicDataReader_ptr _tao_elem)
{
  SkyworthMsgs::RgbPicDataReader_ptr _tao_objptr =
    SkyworthMsgs::RgbPicDataReader::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::RgbPicDataReader_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::RgbPicDataReader>::insert (
      _tao_any,
      SkyworthMsgs::RgbPicDataReader::_tao_any_destructor,
      SkyworthMsgs::_tc_RgbPicDataReader,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::RgbPicDataReader_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::RgbPicDataReader>::extract (
        _tao_any,
        SkyworthMsgs::RgbPicDataReader::_tao_any_destructor,
        SkyworthMsgs::_tc_RgbPicDataReader,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::ObsDataTypeSupport>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::ObsDataTypeSupport>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::ObsDataTypeSupport>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      ObsDataTypeSupport_ptr _tao_elem)
  {
    ObsDataTypeSupport_ptr _tao_objptr =
      ObsDataTypeSupport::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      ObsDataTypeSupport_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<ObsDataTypeSupport>::insert (
        _tao_any,
        ObsDataTypeSupport::_tao_any_destructor,
        _tc_ObsDataTypeSupport,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      ObsDataTypeSupport_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<ObsDataTypeSupport>::extract (
          _tao_any,
          ObsDataTypeSupport::_tao_any_destructor,
          _tc_ObsDataTypeSupport,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::ObsDataTypeSupport_ptr _tao_elem)
{
  SkyworthMsgs::ObsDataTypeSupport_ptr _tao_objptr =
    SkyworthMsgs::ObsDataTypeSupport::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::ObsDataTypeSupport_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::ObsDataTypeSupport>::insert (
      _tao_any,
      SkyworthMsgs::ObsDataTypeSupport::_tao_any_destructor,
      SkyworthMsgs::_tc_ObsDataTypeSupport,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::ObsDataTypeSupport_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::ObsDataTypeSupport>::extract (
        _tao_any,
        SkyworthMsgs::ObsDataTypeSupport::_tao_any_destructor,
        SkyworthMsgs::_tc_ObsDataTypeSupport,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::ObsDataDataWriter>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::ObsDataDataWriter>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::ObsDataDataWriter>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      ObsDataDataWriter_ptr _tao_elem)
  {
    ObsDataDataWriter_ptr _tao_objptr =
      ObsDataDataWriter::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      ObsDataDataWriter_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<ObsDataDataWriter>::insert (
        _tao_any,
        ObsDataDataWriter::_tao_any_destructor,
        _tc_ObsDataDataWriter,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      ObsDataDataWriter_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<ObsDataDataWriter>::extract (
          _tao_any,
          ObsDataDataWriter::_tao_any_destructor,
          _tc_ObsDataDataWriter,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::ObsDataDataWriter_ptr _tao_elem)
{
  SkyworthMsgs::ObsDataDataWriter_ptr _tao_objptr =
    SkyworthMsgs::ObsDataDataWriter::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::ObsDataDataWriter_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::ObsDataDataWriter>::insert (
      _tao_any,
      SkyworthMsgs::ObsDataDataWriter::_tao_any_destructor,
      SkyworthMsgs::_tc_ObsDataDataWriter,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::ObsDataDataWriter_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::ObsDataDataWriter>::extract (
        _tao_any,
        SkyworthMsgs::ObsDataDataWriter::_tao_any_destructor,
        SkyworthMsgs::_tc_ObsDataDataWriter,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::ObsDataDataReader>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::ObsDataDataReader>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::ObsDataDataReader>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      ObsDataDataReader_ptr _tao_elem)
  {
    ObsDataDataReader_ptr _tao_objptr =
      ObsDataDataReader::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      ObsDataDataReader_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<ObsDataDataReader>::insert (
        _tao_any,
        ObsDataDataReader::_tao_any_destructor,
        _tc_ObsDataDataReader,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      ObsDataDataReader_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<ObsDataDataReader>::extract (
          _tao_any,
          ObsDataDataReader::_tao_any_destructor,
          _tc_ObsDataDataReader,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::ObsDataDataReader_ptr _tao_elem)
{
  SkyworthMsgs::ObsDataDataReader_ptr _tao_objptr =
    SkyworthMsgs::ObsDataDataReader::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::ObsDataDataReader_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::ObsDataDataReader>::insert (
      _tao_any,
      SkyworthMsgs::ObsDataDataReader::_tao_any_destructor,
      SkyworthMsgs::_tc_ObsDataDataReader,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::ObsDataDataReader_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::ObsDataDataReader>::extract (
        _tao_any,
        SkyworthMsgs::ObsDataDataReader::_tao_any_destructor,
        SkyworthMsgs::_tc_ObsDataDataReader,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanerStatusTypeSupport>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanerStatusTypeSupport>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanerStatusTypeSupport>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      CleanerStatusTypeSupport_ptr _tao_elem)
  {
    CleanerStatusTypeSupport_ptr _tao_objptr =
      CleanerStatusTypeSupport::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      CleanerStatusTypeSupport_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<CleanerStatusTypeSupport>::insert (
        _tao_any,
        CleanerStatusTypeSupport::_tao_any_destructor,
        _tc_CleanerStatusTypeSupport,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      CleanerStatusTypeSupport_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<CleanerStatusTypeSupport>::extract (
          _tao_any,
          CleanerStatusTypeSupport::_tao_any_destructor,
          _tc_CleanerStatusTypeSupport,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanerStatusTypeSupport_ptr _tao_elem)
{
  SkyworthMsgs::CleanerStatusTypeSupport_ptr _tao_objptr =
    SkyworthMsgs::CleanerStatusTypeSupport::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanerStatusTypeSupport_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::CleanerStatusTypeSupport>::insert (
      _tao_any,
      SkyworthMsgs::CleanerStatusTypeSupport::_tao_any_destructor,
      SkyworthMsgs::_tc_CleanerStatusTypeSupport,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanerStatusTypeSupport_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::CleanerStatusTypeSupport>::extract (
        _tao_any,
        SkyworthMsgs::CleanerStatusTypeSupport::_tao_any_destructor,
        SkyworthMsgs::_tc_CleanerStatusTypeSupport,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanerStatusDataWriter>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanerStatusDataWriter>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanerStatusDataWriter>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      CleanerStatusDataWriter_ptr _tao_elem)
  {
    CleanerStatusDataWriter_ptr _tao_objptr =
      CleanerStatusDataWriter::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      CleanerStatusDataWriter_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<CleanerStatusDataWriter>::insert (
        _tao_any,
        CleanerStatusDataWriter::_tao_any_destructor,
        _tc_CleanerStatusDataWriter,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      CleanerStatusDataWriter_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<CleanerStatusDataWriter>::extract (
          _tao_any,
          CleanerStatusDataWriter::_tao_any_destructor,
          _tc_CleanerStatusDataWriter,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanerStatusDataWriter_ptr _tao_elem)
{
  SkyworthMsgs::CleanerStatusDataWriter_ptr _tao_objptr =
    SkyworthMsgs::CleanerStatusDataWriter::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanerStatusDataWriter_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::CleanerStatusDataWriter>::insert (
      _tao_any,
      SkyworthMsgs::CleanerStatusDataWriter::_tao_any_destructor,
      SkyworthMsgs::_tc_CleanerStatusDataWriter,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanerStatusDataWriter_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::CleanerStatusDataWriter>::extract (
        _tao_any,
        SkyworthMsgs::CleanerStatusDataWriter::_tao_any_destructor,
        SkyworthMsgs::_tc_CleanerStatusDataWriter,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanerStatusDataReader>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanerStatusDataReader>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanerStatusDataReader>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      CleanerStatusDataReader_ptr _tao_elem)
  {
    CleanerStatusDataReader_ptr _tao_objptr =
      CleanerStatusDataReader::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      CleanerStatusDataReader_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<CleanerStatusDataReader>::insert (
        _tao_any,
        CleanerStatusDataReader::_tao_any_destructor,
        _tc_CleanerStatusDataReader,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      CleanerStatusDataReader_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<CleanerStatusDataReader>::extract (
          _tao_any,
          CleanerStatusDataReader::_tao_any_destructor,
          _tc_CleanerStatusDataReader,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanerStatusDataReader_ptr _tao_elem)
{
  SkyworthMsgs::CleanerStatusDataReader_ptr _tao_objptr =
    SkyworthMsgs::CleanerStatusDataReader::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanerStatusDataReader_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::CleanerStatusDataReader>::insert (
      _tao_any,
      SkyworthMsgs::CleanerStatusDataReader::_tao_any_destructor,
      SkyworthMsgs::_tc_CleanerStatusDataReader,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanerStatusDataReader_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::CleanerStatusDataReader>::extract (
        _tao_any,
        SkyworthMsgs::CleanerStatusDataReader::_tao_any_destructor,
        SkyworthMsgs::_tc_CleanerStatusDataReader,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanerCommandTypeSupport>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanerCommandTypeSupport>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanerCommandTypeSupport>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      CleanerCommandTypeSupport_ptr _tao_elem)
  {
    CleanerCommandTypeSupport_ptr _tao_objptr =
      CleanerCommandTypeSupport::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      CleanerCommandTypeSupport_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<CleanerCommandTypeSupport>::insert (
        _tao_any,
        CleanerCommandTypeSupport::_tao_any_destructor,
        _tc_CleanerCommandTypeSupport,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      CleanerCommandTypeSupport_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<CleanerCommandTypeSupport>::extract (
          _tao_any,
          CleanerCommandTypeSupport::_tao_any_destructor,
          _tc_CleanerCommandTypeSupport,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanerCommandTypeSupport_ptr _tao_elem)
{
  SkyworthMsgs::CleanerCommandTypeSupport_ptr _tao_objptr =
    SkyworthMsgs::CleanerCommandTypeSupport::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanerCommandTypeSupport_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::CleanerCommandTypeSupport>::insert (
      _tao_any,
      SkyworthMsgs::CleanerCommandTypeSupport::_tao_any_destructor,
      SkyworthMsgs::_tc_CleanerCommandTypeSupport,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanerCommandTypeSupport_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::CleanerCommandTypeSupport>::extract (
        _tao_any,
        SkyworthMsgs::CleanerCommandTypeSupport::_tao_any_destructor,
        SkyworthMsgs::_tc_CleanerCommandTypeSupport,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanerCommandDataWriter>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanerCommandDataWriter>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanerCommandDataWriter>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      CleanerCommandDataWriter_ptr _tao_elem)
  {
    CleanerCommandDataWriter_ptr _tao_objptr =
      CleanerCommandDataWriter::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      CleanerCommandDataWriter_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<CleanerCommandDataWriter>::insert (
        _tao_any,
        CleanerCommandDataWriter::_tao_any_destructor,
        _tc_CleanerCommandDataWriter,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      CleanerCommandDataWriter_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<CleanerCommandDataWriter>::extract (
          _tao_any,
          CleanerCommandDataWriter::_tao_any_destructor,
          _tc_CleanerCommandDataWriter,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanerCommandDataWriter_ptr _tao_elem)
{
  SkyworthMsgs::CleanerCommandDataWriter_ptr _tao_objptr =
    SkyworthMsgs::CleanerCommandDataWriter::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanerCommandDataWriter_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::CleanerCommandDataWriter>::insert (
      _tao_any,
      SkyworthMsgs::CleanerCommandDataWriter::_tao_any_destructor,
      SkyworthMsgs::_tc_CleanerCommandDataWriter,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanerCommandDataWriter_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::CleanerCommandDataWriter>::extract (
        _tao_any,
        SkyworthMsgs::CleanerCommandDataWriter::_tao_any_destructor,
        SkyworthMsgs::_tc_CleanerCommandDataWriter,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanerCommandDataReader>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanerCommandDataReader>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanerCommandDataReader>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      CleanerCommandDataReader_ptr _tao_elem)
  {
    CleanerCommandDataReader_ptr _tao_objptr =
      CleanerCommandDataReader::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      CleanerCommandDataReader_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<CleanerCommandDataReader>::insert (
        _tao_any,
        CleanerCommandDataReader::_tao_any_destructor,
        _tc_CleanerCommandDataReader,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      CleanerCommandDataReader_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<CleanerCommandDataReader>::extract (
          _tao_any,
          CleanerCommandDataReader::_tao_any_destructor,
          _tc_CleanerCommandDataReader,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanerCommandDataReader_ptr _tao_elem)
{
  SkyworthMsgs::CleanerCommandDataReader_ptr _tao_objptr =
    SkyworthMsgs::CleanerCommandDataReader::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanerCommandDataReader_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::CleanerCommandDataReader>::insert (
      _tao_any,
      SkyworthMsgs::CleanerCommandDataReader::_tao_any_destructor,
      SkyworthMsgs::_tc_CleanerCommandDataReader,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanerCommandDataReader_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::CleanerCommandDataReader>::extract (
        _tao_any,
        SkyworthMsgs::CleanerCommandDataReader::_tao_any_destructor,
        SkyworthMsgs::_tc_CleanerCommandDataReader,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::ElecQuantityTypeSupport>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::ElecQuantityTypeSupport>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::ElecQuantityTypeSupport>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      ElecQuantityTypeSupport_ptr _tao_elem)
  {
    ElecQuantityTypeSupport_ptr _tao_objptr =
      ElecQuantityTypeSupport::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      ElecQuantityTypeSupport_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<ElecQuantityTypeSupport>::insert (
        _tao_any,
        ElecQuantityTypeSupport::_tao_any_destructor,
        _tc_ElecQuantityTypeSupport,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      ElecQuantityTypeSupport_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<ElecQuantityTypeSupport>::extract (
          _tao_any,
          ElecQuantityTypeSupport::_tao_any_destructor,
          _tc_ElecQuantityTypeSupport,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::ElecQuantityTypeSupport_ptr _tao_elem)
{
  SkyworthMsgs::ElecQuantityTypeSupport_ptr _tao_objptr =
    SkyworthMsgs::ElecQuantityTypeSupport::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::ElecQuantityTypeSupport_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::ElecQuantityTypeSupport>::insert (
      _tao_any,
      SkyworthMsgs::ElecQuantityTypeSupport::_tao_any_destructor,
      SkyworthMsgs::_tc_ElecQuantityTypeSupport,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::ElecQuantityTypeSupport_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::ElecQuantityTypeSupport>::extract (
        _tao_any,
        SkyworthMsgs::ElecQuantityTypeSupport::_tao_any_destructor,
        SkyworthMsgs::_tc_ElecQuantityTypeSupport,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::ElecQuantityDataWriter>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::ElecQuantityDataWriter>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::ElecQuantityDataWriter>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      ElecQuantityDataWriter_ptr _tao_elem)
  {
    ElecQuantityDataWriter_ptr _tao_objptr =
      ElecQuantityDataWriter::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      ElecQuantityDataWriter_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<ElecQuantityDataWriter>::insert (
        _tao_any,
        ElecQuantityDataWriter::_tao_any_destructor,
        _tc_ElecQuantityDataWriter,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      ElecQuantityDataWriter_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<ElecQuantityDataWriter>::extract (
          _tao_any,
          ElecQuantityDataWriter::_tao_any_destructor,
          _tc_ElecQuantityDataWriter,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::ElecQuantityDataWriter_ptr _tao_elem)
{
  SkyworthMsgs::ElecQuantityDataWriter_ptr _tao_objptr =
    SkyworthMsgs::ElecQuantityDataWriter::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::ElecQuantityDataWriter_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::ElecQuantityDataWriter>::insert (
      _tao_any,
      SkyworthMsgs::ElecQuantityDataWriter::_tao_any_destructor,
      SkyworthMsgs::_tc_ElecQuantityDataWriter,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::ElecQuantityDataWriter_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::ElecQuantityDataWriter>::extract (
        _tao_any,
        SkyworthMsgs::ElecQuantityDataWriter::_tao_any_destructor,
        SkyworthMsgs::_tc_ElecQuantityDataWriter,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::ElecQuantityDataReader>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::ElecQuantityDataReader>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::ElecQuantityDataReader>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      ElecQuantityDataReader_ptr _tao_elem)
  {
    ElecQuantityDataReader_ptr _tao_objptr =
      ElecQuantityDataReader::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      ElecQuantityDataReader_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<ElecQuantityDataReader>::insert (
        _tao_any,
        ElecQuantityDataReader::_tao_any_destructor,
        _tc_ElecQuantityDataReader,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      ElecQuantityDataReader_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<ElecQuantityDataReader>::extract (
          _tao_any,
          ElecQuantityDataReader::_tao_any_destructor,
          _tc_ElecQuantityDataReader,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::ElecQuantityDataReader_ptr _tao_elem)
{
  SkyworthMsgs::ElecQuantityDataReader_ptr _tao_objptr =
    SkyworthMsgs::ElecQuantityDataReader::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::ElecQuantityDataReader_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::ElecQuantityDataReader>::insert (
      _tao_any,
      SkyworthMsgs::ElecQuantityDataReader::_tao_any_destructor,
      SkyworthMsgs::_tc_ElecQuantityDataReader,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::ElecQuantityDataReader_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::ElecQuantityDataReader>::extract (
        _tao_any,
        SkyworthMsgs::ElecQuantityDataReader::_tao_any_destructor,
        SkyworthMsgs::_tc_ElecQuantityDataReader,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::EmgStopTypeSupport>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::EmgStopTypeSupport>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::EmgStopTypeSupport>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      EmgStopTypeSupport_ptr _tao_elem)
  {
    EmgStopTypeSupport_ptr _tao_objptr =
      EmgStopTypeSupport::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      EmgStopTypeSupport_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<EmgStopTypeSupport>::insert (
        _tao_any,
        EmgStopTypeSupport::_tao_any_destructor,
        _tc_EmgStopTypeSupport,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      EmgStopTypeSupport_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<EmgStopTypeSupport>::extract (
          _tao_any,
          EmgStopTypeSupport::_tao_any_destructor,
          _tc_EmgStopTypeSupport,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::EmgStopTypeSupport_ptr _tao_elem)
{
  SkyworthMsgs::EmgStopTypeSupport_ptr _tao_objptr =
    SkyworthMsgs::EmgStopTypeSupport::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::EmgStopTypeSupport_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::EmgStopTypeSupport>::insert (
      _tao_any,
      SkyworthMsgs::EmgStopTypeSupport::_tao_any_destructor,
      SkyworthMsgs::_tc_EmgStopTypeSupport,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::EmgStopTypeSupport_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::EmgStopTypeSupport>::extract (
        _tao_any,
        SkyworthMsgs::EmgStopTypeSupport::_tao_any_destructor,
        SkyworthMsgs::_tc_EmgStopTypeSupport,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::EmgStopDataWriter>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::EmgStopDataWriter>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::EmgStopDataWriter>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      EmgStopDataWriter_ptr _tao_elem)
  {
    EmgStopDataWriter_ptr _tao_objptr =
      EmgStopDataWriter::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      EmgStopDataWriter_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<EmgStopDataWriter>::insert (
        _tao_any,
        EmgStopDataWriter::_tao_any_destructor,
        _tc_EmgStopDataWriter,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      EmgStopDataWriter_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<EmgStopDataWriter>::extract (
          _tao_any,
          EmgStopDataWriter::_tao_any_destructor,
          _tc_EmgStopDataWriter,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::EmgStopDataWriter_ptr _tao_elem)
{
  SkyworthMsgs::EmgStopDataWriter_ptr _tao_objptr =
    SkyworthMsgs::EmgStopDataWriter::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::EmgStopDataWriter_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::EmgStopDataWriter>::insert (
      _tao_any,
      SkyworthMsgs::EmgStopDataWriter::_tao_any_destructor,
      SkyworthMsgs::_tc_EmgStopDataWriter,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::EmgStopDataWriter_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::EmgStopDataWriter>::extract (
        _tao_any,
        SkyworthMsgs::EmgStopDataWriter::_tao_any_destructor,
        SkyworthMsgs::_tc_EmgStopDataWriter,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::EmgStopDataReader>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::EmgStopDataReader>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::EmgStopDataReader>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      EmgStopDataReader_ptr _tao_elem)
  {
    EmgStopDataReader_ptr _tao_objptr =
      EmgStopDataReader::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      EmgStopDataReader_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<EmgStopDataReader>::insert (
        _tao_any,
        EmgStopDataReader::_tao_any_destructor,
        _tc_EmgStopDataReader,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      EmgStopDataReader_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<EmgStopDataReader>::extract (
          _tao_any,
          EmgStopDataReader::_tao_any_destructor,
          _tc_EmgStopDataReader,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::EmgStopDataReader_ptr _tao_elem)
{
  SkyworthMsgs::EmgStopDataReader_ptr _tao_objptr =
    SkyworthMsgs::EmgStopDataReader::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::EmgStopDataReader_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::EmgStopDataReader>::insert (
      _tao_any,
      SkyworthMsgs::EmgStopDataReader::_tao_any_destructor,
      SkyworthMsgs::_tc_EmgStopDataReader,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::EmgStopDataReader_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::EmgStopDataReader>::extract (
        _tao_any,
        SkyworthMsgs::EmgStopDataReader::_tao_any_destructor,
        SkyworthMsgs::_tc_EmgStopDataReader,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamStatusTypeSupport>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamStatusTypeSupport>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamStatusTypeSupport>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      SlamStatusTypeSupport_ptr _tao_elem)
  {
    SlamStatusTypeSupport_ptr _tao_objptr =
      SlamStatusTypeSupport::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      SlamStatusTypeSupport_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<SlamStatusTypeSupport>::insert (
        _tao_any,
        SlamStatusTypeSupport::_tao_any_destructor,
        _tc_SlamStatusTypeSupport,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      SlamStatusTypeSupport_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<SlamStatusTypeSupport>::extract (
          _tao_any,
          SlamStatusTypeSupport::_tao_any_destructor,
          _tc_SlamStatusTypeSupport,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamStatusTypeSupport_ptr _tao_elem)
{
  SkyworthMsgs::SlamStatusTypeSupport_ptr _tao_objptr =
    SkyworthMsgs::SlamStatusTypeSupport::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamStatusTypeSupport_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::SlamStatusTypeSupport>::insert (
      _tao_any,
      SkyworthMsgs::SlamStatusTypeSupport::_tao_any_destructor,
      SkyworthMsgs::_tc_SlamStatusTypeSupport,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamStatusTypeSupport_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::SlamStatusTypeSupport>::extract (
        _tao_any,
        SkyworthMsgs::SlamStatusTypeSupport::_tao_any_destructor,
        SkyworthMsgs::_tc_SlamStatusTypeSupport,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamStatusDataWriter>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamStatusDataWriter>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamStatusDataWriter>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      SlamStatusDataWriter_ptr _tao_elem)
  {
    SlamStatusDataWriter_ptr _tao_objptr =
      SlamStatusDataWriter::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      SlamStatusDataWriter_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<SlamStatusDataWriter>::insert (
        _tao_any,
        SlamStatusDataWriter::_tao_any_destructor,
        _tc_SlamStatusDataWriter,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      SlamStatusDataWriter_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<SlamStatusDataWriter>::extract (
          _tao_any,
          SlamStatusDataWriter::_tao_any_destructor,
          _tc_SlamStatusDataWriter,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamStatusDataWriter_ptr _tao_elem)
{
  SkyworthMsgs::SlamStatusDataWriter_ptr _tao_objptr =
    SkyworthMsgs::SlamStatusDataWriter::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamStatusDataWriter_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::SlamStatusDataWriter>::insert (
      _tao_any,
      SkyworthMsgs::SlamStatusDataWriter::_tao_any_destructor,
      SkyworthMsgs::_tc_SlamStatusDataWriter,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamStatusDataWriter_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::SlamStatusDataWriter>::extract (
        _tao_any,
        SkyworthMsgs::SlamStatusDataWriter::_tao_any_destructor,
        SkyworthMsgs::_tc_SlamStatusDataWriter,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamStatusDataReader>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamStatusDataReader>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamStatusDataReader>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      SlamStatusDataReader_ptr _tao_elem)
  {
    SlamStatusDataReader_ptr _tao_objptr =
      SlamStatusDataReader::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      SlamStatusDataReader_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<SlamStatusDataReader>::insert (
        _tao_any,
        SlamStatusDataReader::_tao_any_destructor,
        _tc_SlamStatusDataReader,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      SlamStatusDataReader_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<SlamStatusDataReader>::extract (
          _tao_any,
          SlamStatusDataReader::_tao_any_destructor,
          _tc_SlamStatusDataReader,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamStatusDataReader_ptr _tao_elem)
{
  SkyworthMsgs::SlamStatusDataReader_ptr _tao_objptr =
    SkyworthMsgs::SlamStatusDataReader::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamStatusDataReader_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::SlamStatusDataReader>::insert (
      _tao_any,
      SkyworthMsgs::SlamStatusDataReader::_tao_any_destructor,
      SkyworthMsgs::_tc_SlamStatusDataReader,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamStatusDataReader_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::SlamStatusDataReader>::extract (
        _tao_any,
        SkyworthMsgs::SlamStatusDataReader::_tao_any_destructor,
        SkyworthMsgs::_tc_SlamStatusDataReader,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamCommandTypeSupport>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamCommandTypeSupport>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamCommandTypeSupport>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      SlamCommandTypeSupport_ptr _tao_elem)
  {
    SlamCommandTypeSupport_ptr _tao_objptr =
      SlamCommandTypeSupport::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      SlamCommandTypeSupport_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<SlamCommandTypeSupport>::insert (
        _tao_any,
        SlamCommandTypeSupport::_tao_any_destructor,
        _tc_SlamCommandTypeSupport,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      SlamCommandTypeSupport_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<SlamCommandTypeSupport>::extract (
          _tao_any,
          SlamCommandTypeSupport::_tao_any_destructor,
          _tc_SlamCommandTypeSupport,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamCommandTypeSupport_ptr _tao_elem)
{
  SkyworthMsgs::SlamCommandTypeSupport_ptr _tao_objptr =
    SkyworthMsgs::SlamCommandTypeSupport::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamCommandTypeSupport_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::SlamCommandTypeSupport>::insert (
      _tao_any,
      SkyworthMsgs::SlamCommandTypeSupport::_tao_any_destructor,
      SkyworthMsgs::_tc_SlamCommandTypeSupport,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamCommandTypeSupport_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::SlamCommandTypeSupport>::extract (
        _tao_any,
        SkyworthMsgs::SlamCommandTypeSupport::_tao_any_destructor,
        SkyworthMsgs::_tc_SlamCommandTypeSupport,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamCommandDataWriter>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamCommandDataWriter>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamCommandDataWriter>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      SlamCommandDataWriter_ptr _tao_elem)
  {
    SlamCommandDataWriter_ptr _tao_objptr =
      SlamCommandDataWriter::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      SlamCommandDataWriter_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<SlamCommandDataWriter>::insert (
        _tao_any,
        SlamCommandDataWriter::_tao_any_destructor,
        _tc_SlamCommandDataWriter,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      SlamCommandDataWriter_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<SlamCommandDataWriter>::extract (
          _tao_any,
          SlamCommandDataWriter::_tao_any_destructor,
          _tc_SlamCommandDataWriter,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamCommandDataWriter_ptr _tao_elem)
{
  SkyworthMsgs::SlamCommandDataWriter_ptr _tao_objptr =
    SkyworthMsgs::SlamCommandDataWriter::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamCommandDataWriter_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::SlamCommandDataWriter>::insert (
      _tao_any,
      SkyworthMsgs::SlamCommandDataWriter::_tao_any_destructor,
      SkyworthMsgs::_tc_SlamCommandDataWriter,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamCommandDataWriter_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::SlamCommandDataWriter>::extract (
        _tao_any,
        SkyworthMsgs::SlamCommandDataWriter::_tao_any_destructor,
        SkyworthMsgs::_tc_SlamCommandDataWriter,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamCommandDataReader>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamCommandDataReader>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamCommandDataReader>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      SlamCommandDataReader_ptr _tao_elem)
  {
    SlamCommandDataReader_ptr _tao_objptr =
      SlamCommandDataReader::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      SlamCommandDataReader_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<SlamCommandDataReader>::insert (
        _tao_any,
        SlamCommandDataReader::_tao_any_destructor,
        _tc_SlamCommandDataReader,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      SlamCommandDataReader_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<SlamCommandDataReader>::extract (
          _tao_any,
          SlamCommandDataReader::_tao_any_destructor,
          _tc_SlamCommandDataReader,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamCommandDataReader_ptr _tao_elem)
{
  SkyworthMsgs::SlamCommandDataReader_ptr _tao_objptr =
    SkyworthMsgs::SlamCommandDataReader::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamCommandDataReader_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::SlamCommandDataReader>::insert (
      _tao_any,
      SkyworthMsgs::SlamCommandDataReader::_tao_any_destructor,
      SkyworthMsgs::_tc_SlamCommandDataReader,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamCommandDataReader_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::SlamCommandDataReader>::extract (
        _tao_any,
        SkyworthMsgs::SlamCommandDataReader::_tao_any_destructor,
        SkyworthMsgs::_tc_SlamCommandDataReader,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamInteStatusTypeSupport>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamInteStatusTypeSupport>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamInteStatusTypeSupport>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      SlamInteStatusTypeSupport_ptr _tao_elem)
  {
    SlamInteStatusTypeSupport_ptr _tao_objptr =
      SlamInteStatusTypeSupport::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      SlamInteStatusTypeSupport_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<SlamInteStatusTypeSupport>::insert (
        _tao_any,
        SlamInteStatusTypeSupport::_tao_any_destructor,
        _tc_SlamInteStatusTypeSupport,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      SlamInteStatusTypeSupport_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<SlamInteStatusTypeSupport>::extract (
          _tao_any,
          SlamInteStatusTypeSupport::_tao_any_destructor,
          _tc_SlamInteStatusTypeSupport,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamInteStatusTypeSupport_ptr _tao_elem)
{
  SkyworthMsgs::SlamInteStatusTypeSupport_ptr _tao_objptr =
    SkyworthMsgs::SlamInteStatusTypeSupport::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamInteStatusTypeSupport_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::SlamInteStatusTypeSupport>::insert (
      _tao_any,
      SkyworthMsgs::SlamInteStatusTypeSupport::_tao_any_destructor,
      SkyworthMsgs::_tc_SlamInteStatusTypeSupport,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamInteStatusTypeSupport_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::SlamInteStatusTypeSupport>::extract (
        _tao_any,
        SkyworthMsgs::SlamInteStatusTypeSupport::_tao_any_destructor,
        SkyworthMsgs::_tc_SlamInteStatusTypeSupport,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamInteStatusDataWriter>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamInteStatusDataWriter>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamInteStatusDataWriter>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      SlamInteStatusDataWriter_ptr _tao_elem)
  {
    SlamInteStatusDataWriter_ptr _tao_objptr =
      SlamInteStatusDataWriter::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      SlamInteStatusDataWriter_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<SlamInteStatusDataWriter>::insert (
        _tao_any,
        SlamInteStatusDataWriter::_tao_any_destructor,
        _tc_SlamInteStatusDataWriter,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      SlamInteStatusDataWriter_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<SlamInteStatusDataWriter>::extract (
          _tao_any,
          SlamInteStatusDataWriter::_tao_any_destructor,
          _tc_SlamInteStatusDataWriter,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamInteStatusDataWriter_ptr _tao_elem)
{
  SkyworthMsgs::SlamInteStatusDataWriter_ptr _tao_objptr =
    SkyworthMsgs::SlamInteStatusDataWriter::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamInteStatusDataWriter_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::SlamInteStatusDataWriter>::insert (
      _tao_any,
      SkyworthMsgs::SlamInteStatusDataWriter::_tao_any_destructor,
      SkyworthMsgs::_tc_SlamInteStatusDataWriter,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamInteStatusDataWriter_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::SlamInteStatusDataWriter>::extract (
        _tao_any,
        SkyworthMsgs::SlamInteStatusDataWriter::_tao_any_destructor,
        SkyworthMsgs::_tc_SlamInteStatusDataWriter,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamInteStatusDataReader>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamInteStatusDataReader>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamInteStatusDataReader>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      SlamInteStatusDataReader_ptr _tao_elem)
  {
    SlamInteStatusDataReader_ptr _tao_objptr =
      SlamInteStatusDataReader::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      SlamInteStatusDataReader_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<SlamInteStatusDataReader>::insert (
        _tao_any,
        SlamInteStatusDataReader::_tao_any_destructor,
        _tc_SlamInteStatusDataReader,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      SlamInteStatusDataReader_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<SlamInteStatusDataReader>::extract (
          _tao_any,
          SlamInteStatusDataReader::_tao_any_destructor,
          _tc_SlamInteStatusDataReader,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamInteStatusDataReader_ptr _tao_elem)
{
  SkyworthMsgs::SlamInteStatusDataReader_ptr _tao_objptr =
    SkyworthMsgs::SlamInteStatusDataReader::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamInteStatusDataReader_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::SlamInteStatusDataReader>::insert (
      _tao_any,
      SkyworthMsgs::SlamInteStatusDataReader::_tao_any_destructor,
      SkyworthMsgs::_tc_SlamInteStatusDataReader,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamInteStatusDataReader_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::SlamInteStatusDataReader>::extract (
        _tao_any,
        SkyworthMsgs::SlamInteStatusDataReader::_tao_any_destructor,
        SkyworthMsgs::_tc_SlamInteStatusDataReader,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamInteCommandTypeSupport>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamInteCommandTypeSupport>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamInteCommandTypeSupport>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      SlamInteCommandTypeSupport_ptr _tao_elem)
  {
    SlamInteCommandTypeSupport_ptr _tao_objptr =
      SlamInteCommandTypeSupport::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      SlamInteCommandTypeSupport_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<SlamInteCommandTypeSupport>::insert (
        _tao_any,
        SlamInteCommandTypeSupport::_tao_any_destructor,
        _tc_SlamInteCommandTypeSupport,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      SlamInteCommandTypeSupport_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<SlamInteCommandTypeSupport>::extract (
          _tao_any,
          SlamInteCommandTypeSupport::_tao_any_destructor,
          _tc_SlamInteCommandTypeSupport,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamInteCommandTypeSupport_ptr _tao_elem)
{
  SkyworthMsgs::SlamInteCommandTypeSupport_ptr _tao_objptr =
    SkyworthMsgs::SlamInteCommandTypeSupport::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamInteCommandTypeSupport_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::SlamInteCommandTypeSupport>::insert (
      _tao_any,
      SkyworthMsgs::SlamInteCommandTypeSupport::_tao_any_destructor,
      SkyworthMsgs::_tc_SlamInteCommandTypeSupport,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamInteCommandTypeSupport_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::SlamInteCommandTypeSupport>::extract (
        _tao_any,
        SkyworthMsgs::SlamInteCommandTypeSupport::_tao_any_destructor,
        SkyworthMsgs::_tc_SlamInteCommandTypeSupport,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamInteCommandDataWriter>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamInteCommandDataWriter>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamInteCommandDataWriter>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      SlamInteCommandDataWriter_ptr _tao_elem)
  {
    SlamInteCommandDataWriter_ptr _tao_objptr =
      SlamInteCommandDataWriter::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      SlamInteCommandDataWriter_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<SlamInteCommandDataWriter>::insert (
        _tao_any,
        SlamInteCommandDataWriter::_tao_any_destructor,
        _tc_SlamInteCommandDataWriter,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      SlamInteCommandDataWriter_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<SlamInteCommandDataWriter>::extract (
          _tao_any,
          SlamInteCommandDataWriter::_tao_any_destructor,
          _tc_SlamInteCommandDataWriter,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamInteCommandDataWriter_ptr _tao_elem)
{
  SkyworthMsgs::SlamInteCommandDataWriter_ptr _tao_objptr =
    SkyworthMsgs::SlamInteCommandDataWriter::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamInteCommandDataWriter_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::SlamInteCommandDataWriter>::insert (
      _tao_any,
      SkyworthMsgs::SlamInteCommandDataWriter::_tao_any_destructor,
      SkyworthMsgs::_tc_SlamInteCommandDataWriter,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamInteCommandDataWriter_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::SlamInteCommandDataWriter>::extract (
        _tao_any,
        SkyworthMsgs::SlamInteCommandDataWriter::_tao_any_destructor,
        SkyworthMsgs::_tc_SlamInteCommandDataWriter,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamInteCommandDataReader>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamInteCommandDataReader>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamInteCommandDataReader>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      SlamInteCommandDataReader_ptr _tao_elem)
  {
    SlamInteCommandDataReader_ptr _tao_objptr =
      SlamInteCommandDataReader::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      SlamInteCommandDataReader_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<SlamInteCommandDataReader>::insert (
        _tao_any,
        SlamInteCommandDataReader::_tao_any_destructor,
        _tc_SlamInteCommandDataReader,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      SlamInteCommandDataReader_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<SlamInteCommandDataReader>::extract (
          _tao_any,
          SlamInteCommandDataReader::_tao_any_destructor,
          _tc_SlamInteCommandDataReader,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamInteCommandDataReader_ptr _tao_elem)
{
  SkyworthMsgs::SlamInteCommandDataReader_ptr _tao_objptr =
    SkyworthMsgs::SlamInteCommandDataReader::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamInteCommandDataReader_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::SlamInteCommandDataReader>::insert (
      _tao_any,
      SkyworthMsgs::SlamInteCommandDataReader::_tao_any_destructor,
      SkyworthMsgs::_tc_SlamInteCommandDataReader,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamInteCommandDataReader_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::SlamInteCommandDataReader>::extract (
        _tao_any,
        SkyworthMsgs::SlamInteCommandDataReader::_tao_any_destructor,
        SkyworthMsgs::_tc_SlamInteCommandDataReader,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::PatrolStatusTypeSupport>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::PatrolStatusTypeSupport>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::PatrolStatusTypeSupport>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      PatrolStatusTypeSupport_ptr _tao_elem)
  {
    PatrolStatusTypeSupport_ptr _tao_objptr =
      PatrolStatusTypeSupport::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      PatrolStatusTypeSupport_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<PatrolStatusTypeSupport>::insert (
        _tao_any,
        PatrolStatusTypeSupport::_tao_any_destructor,
        _tc_PatrolStatusTypeSupport,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      PatrolStatusTypeSupport_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<PatrolStatusTypeSupport>::extract (
          _tao_any,
          PatrolStatusTypeSupport::_tao_any_destructor,
          _tc_PatrolStatusTypeSupport,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::PatrolStatusTypeSupport_ptr _tao_elem)
{
  SkyworthMsgs::PatrolStatusTypeSupport_ptr _tao_objptr =
    SkyworthMsgs::PatrolStatusTypeSupport::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::PatrolStatusTypeSupport_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::PatrolStatusTypeSupport>::insert (
      _tao_any,
      SkyworthMsgs::PatrolStatusTypeSupport::_tao_any_destructor,
      SkyworthMsgs::_tc_PatrolStatusTypeSupport,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::PatrolStatusTypeSupport_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::PatrolStatusTypeSupport>::extract (
        _tao_any,
        SkyworthMsgs::PatrolStatusTypeSupport::_tao_any_destructor,
        SkyworthMsgs::_tc_PatrolStatusTypeSupport,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::PatrolStatusDataWriter>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::PatrolStatusDataWriter>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::PatrolStatusDataWriter>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      PatrolStatusDataWriter_ptr _tao_elem)
  {
    PatrolStatusDataWriter_ptr _tao_objptr =
      PatrolStatusDataWriter::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      PatrolStatusDataWriter_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<PatrolStatusDataWriter>::insert (
        _tao_any,
        PatrolStatusDataWriter::_tao_any_destructor,
        _tc_PatrolStatusDataWriter,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      PatrolStatusDataWriter_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<PatrolStatusDataWriter>::extract (
          _tao_any,
          PatrolStatusDataWriter::_tao_any_destructor,
          _tc_PatrolStatusDataWriter,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::PatrolStatusDataWriter_ptr _tao_elem)
{
  SkyworthMsgs::PatrolStatusDataWriter_ptr _tao_objptr =
    SkyworthMsgs::PatrolStatusDataWriter::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::PatrolStatusDataWriter_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::PatrolStatusDataWriter>::insert (
      _tao_any,
      SkyworthMsgs::PatrolStatusDataWriter::_tao_any_destructor,
      SkyworthMsgs::_tc_PatrolStatusDataWriter,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::PatrolStatusDataWriter_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::PatrolStatusDataWriter>::extract (
        _tao_any,
        SkyworthMsgs::PatrolStatusDataWriter::_tao_any_destructor,
        SkyworthMsgs::_tc_PatrolStatusDataWriter,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::PatrolStatusDataReader>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::PatrolStatusDataReader>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::PatrolStatusDataReader>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      PatrolStatusDataReader_ptr _tao_elem)
  {
    PatrolStatusDataReader_ptr _tao_objptr =
      PatrolStatusDataReader::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      PatrolStatusDataReader_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<PatrolStatusDataReader>::insert (
        _tao_any,
        PatrolStatusDataReader::_tao_any_destructor,
        _tc_PatrolStatusDataReader,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      PatrolStatusDataReader_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<PatrolStatusDataReader>::extract (
          _tao_any,
          PatrolStatusDataReader::_tao_any_destructor,
          _tc_PatrolStatusDataReader,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::PatrolStatusDataReader_ptr _tao_elem)
{
  SkyworthMsgs::PatrolStatusDataReader_ptr _tao_objptr =
    SkyworthMsgs::PatrolStatusDataReader::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::PatrolStatusDataReader_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::PatrolStatusDataReader>::insert (
      _tao_any,
      SkyworthMsgs::PatrolStatusDataReader::_tao_any_destructor,
      SkyworthMsgs::_tc_PatrolStatusDataReader,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::PatrolStatusDataReader_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::PatrolStatusDataReader>::extract (
        _tao_any,
        SkyworthMsgs::PatrolStatusDataReader::_tao_any_destructor,
        SkyworthMsgs::_tc_PatrolStatusDataReader,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::PatrolCommandTypeSupport>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::PatrolCommandTypeSupport>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::PatrolCommandTypeSupport>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      PatrolCommandTypeSupport_ptr _tao_elem)
  {
    PatrolCommandTypeSupport_ptr _tao_objptr =
      PatrolCommandTypeSupport::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      PatrolCommandTypeSupport_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<PatrolCommandTypeSupport>::insert (
        _tao_any,
        PatrolCommandTypeSupport::_tao_any_destructor,
        _tc_PatrolCommandTypeSupport,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      PatrolCommandTypeSupport_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<PatrolCommandTypeSupport>::extract (
          _tao_any,
          PatrolCommandTypeSupport::_tao_any_destructor,
          _tc_PatrolCommandTypeSupport,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::PatrolCommandTypeSupport_ptr _tao_elem)
{
  SkyworthMsgs::PatrolCommandTypeSupport_ptr _tao_objptr =
    SkyworthMsgs::PatrolCommandTypeSupport::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::PatrolCommandTypeSupport_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::PatrolCommandTypeSupport>::insert (
      _tao_any,
      SkyworthMsgs::PatrolCommandTypeSupport::_tao_any_destructor,
      SkyworthMsgs::_tc_PatrolCommandTypeSupport,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::PatrolCommandTypeSupport_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::PatrolCommandTypeSupport>::extract (
        _tao_any,
        SkyworthMsgs::PatrolCommandTypeSupport::_tao_any_destructor,
        SkyworthMsgs::_tc_PatrolCommandTypeSupport,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::PatrolCommandDataWriter>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::PatrolCommandDataWriter>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::PatrolCommandDataWriter>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      PatrolCommandDataWriter_ptr _tao_elem)
  {
    PatrolCommandDataWriter_ptr _tao_objptr =
      PatrolCommandDataWriter::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      PatrolCommandDataWriter_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<PatrolCommandDataWriter>::insert (
        _tao_any,
        PatrolCommandDataWriter::_tao_any_destructor,
        _tc_PatrolCommandDataWriter,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      PatrolCommandDataWriter_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<PatrolCommandDataWriter>::extract (
          _tao_any,
          PatrolCommandDataWriter::_tao_any_destructor,
          _tc_PatrolCommandDataWriter,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::PatrolCommandDataWriter_ptr _tao_elem)
{
  SkyworthMsgs::PatrolCommandDataWriter_ptr _tao_objptr =
    SkyworthMsgs::PatrolCommandDataWriter::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::PatrolCommandDataWriter_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::PatrolCommandDataWriter>::insert (
      _tao_any,
      SkyworthMsgs::PatrolCommandDataWriter::_tao_any_destructor,
      SkyworthMsgs::_tc_PatrolCommandDataWriter,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::PatrolCommandDataWriter_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::PatrolCommandDataWriter>::extract (
        _tao_any,
        SkyworthMsgs::PatrolCommandDataWriter::_tao_any_destructor,
        SkyworthMsgs::_tc_PatrolCommandDataWriter,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::PatrolCommandDataReader>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::PatrolCommandDataReader>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::PatrolCommandDataReader>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      PatrolCommandDataReader_ptr _tao_elem)
  {
    PatrolCommandDataReader_ptr _tao_objptr =
      PatrolCommandDataReader::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      PatrolCommandDataReader_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<PatrolCommandDataReader>::insert (
        _tao_any,
        PatrolCommandDataReader::_tao_any_destructor,
        _tc_PatrolCommandDataReader,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      PatrolCommandDataReader_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<PatrolCommandDataReader>::extract (
          _tao_any,
          PatrolCommandDataReader::_tao_any_destructor,
          _tc_PatrolCommandDataReader,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::PatrolCommandDataReader_ptr _tao_elem)
{
  SkyworthMsgs::PatrolCommandDataReader_ptr _tao_objptr =
    SkyworthMsgs::PatrolCommandDataReader::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::PatrolCommandDataReader_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::PatrolCommandDataReader>::insert (
      _tao_any,
      SkyworthMsgs::PatrolCommandDataReader::_tao_any_destructor,
      SkyworthMsgs::_tc_PatrolCommandDataReader,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::PatrolCommandDataReader_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::PatrolCommandDataReader>::extract (
        _tao_any,
        SkyworthMsgs::PatrolCommandDataReader::_tao_any_destructor,
        SkyworthMsgs::_tc_PatrolCommandDataReader,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanStatusTypeSupport>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanStatusTypeSupport>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanStatusTypeSupport>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      CleanStatusTypeSupport_ptr _tao_elem)
  {
    CleanStatusTypeSupport_ptr _tao_objptr =
      CleanStatusTypeSupport::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      CleanStatusTypeSupport_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<CleanStatusTypeSupport>::insert (
        _tao_any,
        CleanStatusTypeSupport::_tao_any_destructor,
        _tc_CleanStatusTypeSupport,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      CleanStatusTypeSupport_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<CleanStatusTypeSupport>::extract (
          _tao_any,
          CleanStatusTypeSupport::_tao_any_destructor,
          _tc_CleanStatusTypeSupport,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanStatusTypeSupport_ptr _tao_elem)
{
  SkyworthMsgs::CleanStatusTypeSupport_ptr _tao_objptr =
    SkyworthMsgs::CleanStatusTypeSupport::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanStatusTypeSupport_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::CleanStatusTypeSupport>::insert (
      _tao_any,
      SkyworthMsgs::CleanStatusTypeSupport::_tao_any_destructor,
      SkyworthMsgs::_tc_CleanStatusTypeSupport,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanStatusTypeSupport_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::CleanStatusTypeSupport>::extract (
        _tao_any,
        SkyworthMsgs::CleanStatusTypeSupport::_tao_any_destructor,
        SkyworthMsgs::_tc_CleanStatusTypeSupport,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanStatusDataWriter>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanStatusDataWriter>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanStatusDataWriter>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      CleanStatusDataWriter_ptr _tao_elem)
  {
    CleanStatusDataWriter_ptr _tao_objptr =
      CleanStatusDataWriter::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      CleanStatusDataWriter_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<CleanStatusDataWriter>::insert (
        _tao_any,
        CleanStatusDataWriter::_tao_any_destructor,
        _tc_CleanStatusDataWriter,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      CleanStatusDataWriter_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<CleanStatusDataWriter>::extract (
          _tao_any,
          CleanStatusDataWriter::_tao_any_destructor,
          _tc_CleanStatusDataWriter,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanStatusDataWriter_ptr _tao_elem)
{
  SkyworthMsgs::CleanStatusDataWriter_ptr _tao_objptr =
    SkyworthMsgs::CleanStatusDataWriter::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanStatusDataWriter_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::CleanStatusDataWriter>::insert (
      _tao_any,
      SkyworthMsgs::CleanStatusDataWriter::_tao_any_destructor,
      SkyworthMsgs::_tc_CleanStatusDataWriter,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanStatusDataWriter_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::CleanStatusDataWriter>::extract (
        _tao_any,
        SkyworthMsgs::CleanStatusDataWriter::_tao_any_destructor,
        SkyworthMsgs::_tc_CleanStatusDataWriter,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanStatusDataReader>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanStatusDataReader>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanStatusDataReader>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      CleanStatusDataReader_ptr _tao_elem)
  {
    CleanStatusDataReader_ptr _tao_objptr =
      CleanStatusDataReader::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      CleanStatusDataReader_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<CleanStatusDataReader>::insert (
        _tao_any,
        CleanStatusDataReader::_tao_any_destructor,
        _tc_CleanStatusDataReader,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      CleanStatusDataReader_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<CleanStatusDataReader>::extract (
          _tao_any,
          CleanStatusDataReader::_tao_any_destructor,
          _tc_CleanStatusDataReader,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanStatusDataReader_ptr _tao_elem)
{
  SkyworthMsgs::CleanStatusDataReader_ptr _tao_objptr =
    SkyworthMsgs::CleanStatusDataReader::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanStatusDataReader_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::CleanStatusDataReader>::insert (
      _tao_any,
      SkyworthMsgs::CleanStatusDataReader::_tao_any_destructor,
      SkyworthMsgs::_tc_CleanStatusDataReader,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanStatusDataReader_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::CleanStatusDataReader>::extract (
        _tao_any,
        SkyworthMsgs::CleanStatusDataReader::_tao_any_destructor,
        SkyworthMsgs::_tc_CleanStatusDataReader,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanCommandTypeSupport>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanCommandTypeSupport>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanCommandTypeSupport>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      CleanCommandTypeSupport_ptr _tao_elem)
  {
    CleanCommandTypeSupport_ptr _tao_objptr =
      CleanCommandTypeSupport::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      CleanCommandTypeSupport_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<CleanCommandTypeSupport>::insert (
        _tao_any,
        CleanCommandTypeSupport::_tao_any_destructor,
        _tc_CleanCommandTypeSupport,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      CleanCommandTypeSupport_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<CleanCommandTypeSupport>::extract (
          _tao_any,
          CleanCommandTypeSupport::_tao_any_destructor,
          _tc_CleanCommandTypeSupport,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanCommandTypeSupport_ptr _tao_elem)
{
  SkyworthMsgs::CleanCommandTypeSupport_ptr _tao_objptr =
    SkyworthMsgs::CleanCommandTypeSupport::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanCommandTypeSupport_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::CleanCommandTypeSupport>::insert (
      _tao_any,
      SkyworthMsgs::CleanCommandTypeSupport::_tao_any_destructor,
      SkyworthMsgs::_tc_CleanCommandTypeSupport,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanCommandTypeSupport_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::CleanCommandTypeSupport>::extract (
        _tao_any,
        SkyworthMsgs::CleanCommandTypeSupport::_tao_any_destructor,
        SkyworthMsgs::_tc_CleanCommandTypeSupport,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanCommandDataWriter>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanCommandDataWriter>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanCommandDataWriter>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      CleanCommandDataWriter_ptr _tao_elem)
  {
    CleanCommandDataWriter_ptr _tao_objptr =
      CleanCommandDataWriter::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      CleanCommandDataWriter_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<CleanCommandDataWriter>::insert (
        _tao_any,
        CleanCommandDataWriter::_tao_any_destructor,
        _tc_CleanCommandDataWriter,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      CleanCommandDataWriter_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<CleanCommandDataWriter>::extract (
          _tao_any,
          CleanCommandDataWriter::_tao_any_destructor,
          _tc_CleanCommandDataWriter,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanCommandDataWriter_ptr _tao_elem)
{
  SkyworthMsgs::CleanCommandDataWriter_ptr _tao_objptr =
    SkyworthMsgs::CleanCommandDataWriter::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanCommandDataWriter_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::CleanCommandDataWriter>::insert (
      _tao_any,
      SkyworthMsgs::CleanCommandDataWriter::_tao_any_destructor,
      SkyworthMsgs::_tc_CleanCommandDataWriter,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanCommandDataWriter_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::CleanCommandDataWriter>::extract (
        _tao_any,
        SkyworthMsgs::CleanCommandDataWriter::_tao_any_destructor,
        SkyworthMsgs::_tc_CleanCommandDataWriter,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanCommandDataReader>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanCommandDataReader>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanCommandDataReader>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      CleanCommandDataReader_ptr _tao_elem)
  {
    CleanCommandDataReader_ptr _tao_objptr =
      CleanCommandDataReader::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      CleanCommandDataReader_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<CleanCommandDataReader>::insert (
        _tao_any,
        CleanCommandDataReader::_tao_any_destructor,
        _tc_CleanCommandDataReader,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      CleanCommandDataReader_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<CleanCommandDataReader>::extract (
          _tao_any,
          CleanCommandDataReader::_tao_any_destructor,
          _tc_CleanCommandDataReader,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanCommandDataReader_ptr _tao_elem)
{
  SkyworthMsgs::CleanCommandDataReader_ptr _tao_objptr =
    SkyworthMsgs::CleanCommandDataReader::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanCommandDataReader_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::CleanCommandDataReader>::insert (
      _tao_any,
      SkyworthMsgs::CleanCommandDataReader::_tao_any_destructor,
      SkyworthMsgs::_tc_CleanCommandDataReader,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanCommandDataReader_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::CleanCommandDataReader>::extract (
        _tao_any,
        SkyworthMsgs::CleanCommandDataReader::_tao_any_destructor,
        SkyworthMsgs::_tc_CleanCommandDataReader,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::MapLiveDataTypeSupport>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::MapLiveDataTypeSupport>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::MapLiveDataTypeSupport>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      MapLiveDataTypeSupport_ptr _tao_elem)
  {
    MapLiveDataTypeSupport_ptr _tao_objptr =
      MapLiveDataTypeSupport::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      MapLiveDataTypeSupport_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<MapLiveDataTypeSupport>::insert (
        _tao_any,
        MapLiveDataTypeSupport::_tao_any_destructor,
        _tc_MapLiveDataTypeSupport,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      MapLiveDataTypeSupport_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<MapLiveDataTypeSupport>::extract (
          _tao_any,
          MapLiveDataTypeSupport::_tao_any_destructor,
          _tc_MapLiveDataTypeSupport,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::MapLiveDataTypeSupport_ptr _tao_elem)
{
  SkyworthMsgs::MapLiveDataTypeSupport_ptr _tao_objptr =
    SkyworthMsgs::MapLiveDataTypeSupport::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::MapLiveDataTypeSupport_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::MapLiveDataTypeSupport>::insert (
      _tao_any,
      SkyworthMsgs::MapLiveDataTypeSupport::_tao_any_destructor,
      SkyworthMsgs::_tc_MapLiveDataTypeSupport,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::MapLiveDataTypeSupport_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::MapLiveDataTypeSupport>::extract (
        _tao_any,
        SkyworthMsgs::MapLiveDataTypeSupport::_tao_any_destructor,
        SkyworthMsgs::_tc_MapLiveDataTypeSupport,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::MapLiveDataDataWriter>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::MapLiveDataDataWriter>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::MapLiveDataDataWriter>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      MapLiveDataDataWriter_ptr _tao_elem)
  {
    MapLiveDataDataWriter_ptr _tao_objptr =
      MapLiveDataDataWriter::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      MapLiveDataDataWriter_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<MapLiveDataDataWriter>::insert (
        _tao_any,
        MapLiveDataDataWriter::_tao_any_destructor,
        _tc_MapLiveDataDataWriter,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      MapLiveDataDataWriter_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<MapLiveDataDataWriter>::extract (
          _tao_any,
          MapLiveDataDataWriter::_tao_any_destructor,
          _tc_MapLiveDataDataWriter,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::MapLiveDataDataWriter_ptr _tao_elem)
{
  SkyworthMsgs::MapLiveDataDataWriter_ptr _tao_objptr =
    SkyworthMsgs::MapLiveDataDataWriter::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::MapLiveDataDataWriter_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::MapLiveDataDataWriter>::insert (
      _tao_any,
      SkyworthMsgs::MapLiveDataDataWriter::_tao_any_destructor,
      SkyworthMsgs::_tc_MapLiveDataDataWriter,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::MapLiveDataDataWriter_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::MapLiveDataDataWriter>::extract (
        _tao_any,
        SkyworthMsgs::MapLiveDataDataWriter::_tao_any_destructor,
        SkyworthMsgs::_tc_MapLiveDataDataWriter,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::MapLiveDataDataReader>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::MapLiveDataDataReader>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::MapLiveDataDataReader>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      MapLiveDataDataReader_ptr _tao_elem)
  {
    MapLiveDataDataReader_ptr _tao_objptr =
      MapLiveDataDataReader::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      MapLiveDataDataReader_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<MapLiveDataDataReader>::insert (
        _tao_any,
        MapLiveDataDataReader::_tao_any_destructor,
        _tc_MapLiveDataDataReader,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      MapLiveDataDataReader_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<MapLiveDataDataReader>::extract (
          _tao_any,
          MapLiveDataDataReader::_tao_any_destructor,
          _tc_MapLiveDataDataReader,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::MapLiveDataDataReader_ptr _tao_elem)
{
  SkyworthMsgs::MapLiveDataDataReader_ptr _tao_objptr =
    SkyworthMsgs::MapLiveDataDataReader::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::MapLiveDataDataReader_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::MapLiveDataDataReader>::insert (
      _tao_any,
      SkyworthMsgs::MapLiveDataDataReader::_tao_any_destructor,
      SkyworthMsgs::_tc_MapLiveDataDataReader,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::MapLiveDataDataReader_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::MapLiveDataDataReader>::extract (
        _tao_any,
        SkyworthMsgs::MapLiveDataDataReader::_tao_any_destructor,
        SkyworthMsgs::_tc_MapLiveDataDataReader,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamManageStatusTypeSupport>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamManageStatusTypeSupport>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamManageStatusTypeSupport>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      SlamManageStatusTypeSupport_ptr _tao_elem)
  {
    SlamManageStatusTypeSupport_ptr _tao_objptr =
      SlamManageStatusTypeSupport::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      SlamManageStatusTypeSupport_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<SlamManageStatusTypeSupport>::insert (
        _tao_any,
        SlamManageStatusTypeSupport::_tao_any_destructor,
        _tc_SlamManageStatusTypeSupport,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      SlamManageStatusTypeSupport_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<SlamManageStatusTypeSupport>::extract (
          _tao_any,
          SlamManageStatusTypeSupport::_tao_any_destructor,
          _tc_SlamManageStatusTypeSupport,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamManageStatusTypeSupport_ptr _tao_elem)
{
  SkyworthMsgs::SlamManageStatusTypeSupport_ptr _tao_objptr =
    SkyworthMsgs::SlamManageStatusTypeSupport::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamManageStatusTypeSupport_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::SlamManageStatusTypeSupport>::insert (
      _tao_any,
      SkyworthMsgs::SlamManageStatusTypeSupport::_tao_any_destructor,
      SkyworthMsgs::_tc_SlamManageStatusTypeSupport,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamManageStatusTypeSupport_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::SlamManageStatusTypeSupport>::extract (
        _tao_any,
        SkyworthMsgs::SlamManageStatusTypeSupport::_tao_any_destructor,
        SkyworthMsgs::_tc_SlamManageStatusTypeSupport,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamManageStatusDataWriter>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamManageStatusDataWriter>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamManageStatusDataWriter>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      SlamManageStatusDataWriter_ptr _tao_elem)
  {
    SlamManageStatusDataWriter_ptr _tao_objptr =
      SlamManageStatusDataWriter::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      SlamManageStatusDataWriter_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<SlamManageStatusDataWriter>::insert (
        _tao_any,
        SlamManageStatusDataWriter::_tao_any_destructor,
        _tc_SlamManageStatusDataWriter,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      SlamManageStatusDataWriter_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<SlamManageStatusDataWriter>::extract (
          _tao_any,
          SlamManageStatusDataWriter::_tao_any_destructor,
          _tc_SlamManageStatusDataWriter,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamManageStatusDataWriter_ptr _tao_elem)
{
  SkyworthMsgs::SlamManageStatusDataWriter_ptr _tao_objptr =
    SkyworthMsgs::SlamManageStatusDataWriter::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamManageStatusDataWriter_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::SlamManageStatusDataWriter>::insert (
      _tao_any,
      SkyworthMsgs::SlamManageStatusDataWriter::_tao_any_destructor,
      SkyworthMsgs::_tc_SlamManageStatusDataWriter,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamManageStatusDataWriter_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::SlamManageStatusDataWriter>::extract (
        _tao_any,
        SkyworthMsgs::SlamManageStatusDataWriter::_tao_any_destructor,
        SkyworthMsgs::_tc_SlamManageStatusDataWriter,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamManageStatusDataReader>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamManageStatusDataReader>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamManageStatusDataReader>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      SlamManageStatusDataReader_ptr _tao_elem)
  {
    SlamManageStatusDataReader_ptr _tao_objptr =
      SlamManageStatusDataReader::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      SlamManageStatusDataReader_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<SlamManageStatusDataReader>::insert (
        _tao_any,
        SlamManageStatusDataReader::_tao_any_destructor,
        _tc_SlamManageStatusDataReader,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      SlamManageStatusDataReader_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<SlamManageStatusDataReader>::extract (
          _tao_any,
          SlamManageStatusDataReader::_tao_any_destructor,
          _tc_SlamManageStatusDataReader,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamManageStatusDataReader_ptr _tao_elem)
{
  SkyworthMsgs::SlamManageStatusDataReader_ptr _tao_objptr =
    SkyworthMsgs::SlamManageStatusDataReader::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamManageStatusDataReader_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::SlamManageStatusDataReader>::insert (
      _tao_any,
      SkyworthMsgs::SlamManageStatusDataReader::_tao_any_destructor,
      SkyworthMsgs::_tc_SlamManageStatusDataReader,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamManageStatusDataReader_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::SlamManageStatusDataReader>::extract (
        _tao_any,
        SkyworthMsgs::SlamManageStatusDataReader::_tao_any_destructor,
        SkyworthMsgs::_tc_SlamManageStatusDataReader,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamManageCmdTypeSupport>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamManageCmdTypeSupport>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamManageCmdTypeSupport>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      SlamManageCmdTypeSupport_ptr _tao_elem)
  {
    SlamManageCmdTypeSupport_ptr _tao_objptr =
      SlamManageCmdTypeSupport::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      SlamManageCmdTypeSupport_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<SlamManageCmdTypeSupport>::insert (
        _tao_any,
        SlamManageCmdTypeSupport::_tao_any_destructor,
        _tc_SlamManageCmdTypeSupport,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      SlamManageCmdTypeSupport_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<SlamManageCmdTypeSupport>::extract (
          _tao_any,
          SlamManageCmdTypeSupport::_tao_any_destructor,
          _tc_SlamManageCmdTypeSupport,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamManageCmdTypeSupport_ptr _tao_elem)
{
  SkyworthMsgs::SlamManageCmdTypeSupport_ptr _tao_objptr =
    SkyworthMsgs::SlamManageCmdTypeSupport::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamManageCmdTypeSupport_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::SlamManageCmdTypeSupport>::insert (
      _tao_any,
      SkyworthMsgs::SlamManageCmdTypeSupport::_tao_any_destructor,
      SkyworthMsgs::_tc_SlamManageCmdTypeSupport,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamManageCmdTypeSupport_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::SlamManageCmdTypeSupport>::extract (
        _tao_any,
        SkyworthMsgs::SlamManageCmdTypeSupport::_tao_any_destructor,
        SkyworthMsgs::_tc_SlamManageCmdTypeSupport,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamManageCmdDataWriter>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamManageCmdDataWriter>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamManageCmdDataWriter>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      SlamManageCmdDataWriter_ptr _tao_elem)
  {
    SlamManageCmdDataWriter_ptr _tao_objptr =
      SlamManageCmdDataWriter::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      SlamManageCmdDataWriter_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<SlamManageCmdDataWriter>::insert (
        _tao_any,
        SlamManageCmdDataWriter::_tao_any_destructor,
        _tc_SlamManageCmdDataWriter,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      SlamManageCmdDataWriter_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<SlamManageCmdDataWriter>::extract (
          _tao_any,
          SlamManageCmdDataWriter::_tao_any_destructor,
          _tc_SlamManageCmdDataWriter,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamManageCmdDataWriter_ptr _tao_elem)
{
  SkyworthMsgs::SlamManageCmdDataWriter_ptr _tao_objptr =
    SkyworthMsgs::SlamManageCmdDataWriter::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamManageCmdDataWriter_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::SlamManageCmdDataWriter>::insert (
      _tao_any,
      SkyworthMsgs::SlamManageCmdDataWriter::_tao_any_destructor,
      SkyworthMsgs::_tc_SlamManageCmdDataWriter,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamManageCmdDataWriter_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::SlamManageCmdDataWriter>::extract (
        _tao_any,
        SkyworthMsgs::SlamManageCmdDataWriter::_tao_any_destructor,
        SkyworthMsgs::_tc_SlamManageCmdDataWriter,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamManageCmdDataReader>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamManageCmdDataReader>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::SlamManageCmdDataReader>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      SlamManageCmdDataReader_ptr _tao_elem)
  {
    SlamManageCmdDataReader_ptr _tao_objptr =
      SlamManageCmdDataReader::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      SlamManageCmdDataReader_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<SlamManageCmdDataReader>::insert (
        _tao_any,
        SlamManageCmdDataReader::_tao_any_destructor,
        _tc_SlamManageCmdDataReader,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      SlamManageCmdDataReader_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<SlamManageCmdDataReader>::extract (
          _tao_any,
          SlamManageCmdDataReader::_tao_any_destructor,
          _tc_SlamManageCmdDataReader,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamManageCmdDataReader_ptr _tao_elem)
{
  SkyworthMsgs::SlamManageCmdDataReader_ptr _tao_objptr =
    SkyworthMsgs::SlamManageCmdDataReader::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamManageCmdDataReader_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::SlamManageCmdDataReader>::insert (
      _tao_any,
      SkyworthMsgs::SlamManageCmdDataReader::_tao_any_destructor,
      SkyworthMsgs::_tc_SlamManageCmdDataReader,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::SlamManageCmdDataReader_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::SlamManageCmdDataReader>::extract (
        _tao_any,
        SkyworthMsgs::SlamManageCmdDataReader::_tao_any_destructor,
        SkyworthMsgs::_tc_SlamManageCmdDataReader,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::PatrolManageStatusTypeSupport>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::PatrolManageStatusTypeSupport>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::PatrolManageStatusTypeSupport>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      PatrolManageStatusTypeSupport_ptr _tao_elem)
  {
    PatrolManageStatusTypeSupport_ptr _tao_objptr =
      PatrolManageStatusTypeSupport::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      PatrolManageStatusTypeSupport_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<PatrolManageStatusTypeSupport>::insert (
        _tao_any,
        PatrolManageStatusTypeSupport::_tao_any_destructor,
        _tc_PatrolManageStatusTypeSupport,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      PatrolManageStatusTypeSupport_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<PatrolManageStatusTypeSupport>::extract (
          _tao_any,
          PatrolManageStatusTypeSupport::_tao_any_destructor,
          _tc_PatrolManageStatusTypeSupport,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::PatrolManageStatusTypeSupport_ptr _tao_elem)
{
  SkyworthMsgs::PatrolManageStatusTypeSupport_ptr _tao_objptr =
    SkyworthMsgs::PatrolManageStatusTypeSupport::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::PatrolManageStatusTypeSupport_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::PatrolManageStatusTypeSupport>::insert (
      _tao_any,
      SkyworthMsgs::PatrolManageStatusTypeSupport::_tao_any_destructor,
      SkyworthMsgs::_tc_PatrolManageStatusTypeSupport,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::PatrolManageStatusTypeSupport_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::PatrolManageStatusTypeSupport>::extract (
        _tao_any,
        SkyworthMsgs::PatrolManageStatusTypeSupport::_tao_any_destructor,
        SkyworthMsgs::_tc_PatrolManageStatusTypeSupport,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::PatrolManageStatusDataWriter>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::PatrolManageStatusDataWriter>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::PatrolManageStatusDataWriter>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      PatrolManageStatusDataWriter_ptr _tao_elem)
  {
    PatrolManageStatusDataWriter_ptr _tao_objptr =
      PatrolManageStatusDataWriter::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      PatrolManageStatusDataWriter_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<PatrolManageStatusDataWriter>::insert (
        _tao_any,
        PatrolManageStatusDataWriter::_tao_any_destructor,
        _tc_PatrolManageStatusDataWriter,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      PatrolManageStatusDataWriter_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<PatrolManageStatusDataWriter>::extract (
          _tao_any,
          PatrolManageStatusDataWriter::_tao_any_destructor,
          _tc_PatrolManageStatusDataWriter,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::PatrolManageStatusDataWriter_ptr _tao_elem)
{
  SkyworthMsgs::PatrolManageStatusDataWriter_ptr _tao_objptr =
    SkyworthMsgs::PatrolManageStatusDataWriter::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::PatrolManageStatusDataWriter_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::PatrolManageStatusDataWriter>::insert (
      _tao_any,
      SkyworthMsgs::PatrolManageStatusDataWriter::_tao_any_destructor,
      SkyworthMsgs::_tc_PatrolManageStatusDataWriter,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::PatrolManageStatusDataWriter_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::PatrolManageStatusDataWriter>::extract (
        _tao_any,
        SkyworthMsgs::PatrolManageStatusDataWriter::_tao_any_destructor,
        SkyworthMsgs::_tc_PatrolManageStatusDataWriter,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::PatrolManageStatusDataReader>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::PatrolManageStatusDataReader>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::PatrolManageStatusDataReader>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      PatrolManageStatusDataReader_ptr _tao_elem)
  {
    PatrolManageStatusDataReader_ptr _tao_objptr =
      PatrolManageStatusDataReader::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      PatrolManageStatusDataReader_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<PatrolManageStatusDataReader>::insert (
        _tao_any,
        PatrolManageStatusDataReader::_tao_any_destructor,
        _tc_PatrolManageStatusDataReader,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      PatrolManageStatusDataReader_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<PatrolManageStatusDataReader>::extract (
          _tao_any,
          PatrolManageStatusDataReader::_tao_any_destructor,
          _tc_PatrolManageStatusDataReader,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::PatrolManageStatusDataReader_ptr _tao_elem)
{
  SkyworthMsgs::PatrolManageStatusDataReader_ptr _tao_objptr =
    SkyworthMsgs::PatrolManageStatusDataReader::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::PatrolManageStatusDataReader_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::PatrolManageStatusDataReader>::insert (
      _tao_any,
      SkyworthMsgs::PatrolManageStatusDataReader::_tao_any_destructor,
      SkyworthMsgs::_tc_PatrolManageStatusDataReader,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::PatrolManageStatusDataReader_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::PatrolManageStatusDataReader>::extract (
        _tao_any,
        SkyworthMsgs::PatrolManageStatusDataReader::_tao_any_destructor,
        SkyworthMsgs::_tc_PatrolManageStatusDataReader,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::PatrolManageCmdTypeSupport>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::PatrolManageCmdTypeSupport>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::PatrolManageCmdTypeSupport>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      PatrolManageCmdTypeSupport_ptr _tao_elem)
  {
    PatrolManageCmdTypeSupport_ptr _tao_objptr =
      PatrolManageCmdTypeSupport::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      PatrolManageCmdTypeSupport_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<PatrolManageCmdTypeSupport>::insert (
        _tao_any,
        PatrolManageCmdTypeSupport::_tao_any_destructor,
        _tc_PatrolManageCmdTypeSupport,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      PatrolManageCmdTypeSupport_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<PatrolManageCmdTypeSupport>::extract (
          _tao_any,
          PatrolManageCmdTypeSupport::_tao_any_destructor,
          _tc_PatrolManageCmdTypeSupport,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::PatrolManageCmdTypeSupport_ptr _tao_elem)
{
  SkyworthMsgs::PatrolManageCmdTypeSupport_ptr _tao_objptr =
    SkyworthMsgs::PatrolManageCmdTypeSupport::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::PatrolManageCmdTypeSupport_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::PatrolManageCmdTypeSupport>::insert (
      _tao_any,
      SkyworthMsgs::PatrolManageCmdTypeSupport::_tao_any_destructor,
      SkyworthMsgs::_tc_PatrolManageCmdTypeSupport,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::PatrolManageCmdTypeSupport_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::PatrolManageCmdTypeSupport>::extract (
        _tao_any,
        SkyworthMsgs::PatrolManageCmdTypeSupport::_tao_any_destructor,
        SkyworthMsgs::_tc_PatrolManageCmdTypeSupport,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::PatrolManageCmdDataWriter>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::PatrolManageCmdDataWriter>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::PatrolManageCmdDataWriter>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      PatrolManageCmdDataWriter_ptr _tao_elem)
  {
    PatrolManageCmdDataWriter_ptr _tao_objptr =
      PatrolManageCmdDataWriter::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      PatrolManageCmdDataWriter_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<PatrolManageCmdDataWriter>::insert (
        _tao_any,
        PatrolManageCmdDataWriter::_tao_any_destructor,
        _tc_PatrolManageCmdDataWriter,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      PatrolManageCmdDataWriter_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<PatrolManageCmdDataWriter>::extract (
          _tao_any,
          PatrolManageCmdDataWriter::_tao_any_destructor,
          _tc_PatrolManageCmdDataWriter,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::PatrolManageCmdDataWriter_ptr _tao_elem)
{
  SkyworthMsgs::PatrolManageCmdDataWriter_ptr _tao_objptr =
    SkyworthMsgs::PatrolManageCmdDataWriter::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::PatrolManageCmdDataWriter_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::PatrolManageCmdDataWriter>::insert (
      _tao_any,
      SkyworthMsgs::PatrolManageCmdDataWriter::_tao_any_destructor,
      SkyworthMsgs::_tc_PatrolManageCmdDataWriter,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::PatrolManageCmdDataWriter_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::PatrolManageCmdDataWriter>::extract (
        _tao_any,
        SkyworthMsgs::PatrolManageCmdDataWriter::_tao_any_destructor,
        SkyworthMsgs::_tc_PatrolManageCmdDataWriter,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::PatrolManageCmdDataReader>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::PatrolManageCmdDataReader>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::PatrolManageCmdDataReader>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      PatrolManageCmdDataReader_ptr _tao_elem)
  {
    PatrolManageCmdDataReader_ptr _tao_objptr =
      PatrolManageCmdDataReader::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      PatrolManageCmdDataReader_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<PatrolManageCmdDataReader>::insert (
        _tao_any,
        PatrolManageCmdDataReader::_tao_any_destructor,
        _tc_PatrolManageCmdDataReader,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      PatrolManageCmdDataReader_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<PatrolManageCmdDataReader>::extract (
          _tao_any,
          PatrolManageCmdDataReader::_tao_any_destructor,
          _tc_PatrolManageCmdDataReader,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::PatrolManageCmdDataReader_ptr _tao_elem)
{
  SkyworthMsgs::PatrolManageCmdDataReader_ptr _tao_objptr =
    SkyworthMsgs::PatrolManageCmdDataReader::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::PatrolManageCmdDataReader_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::PatrolManageCmdDataReader>::insert (
      _tao_any,
      SkyworthMsgs::PatrolManageCmdDataReader::_tao_any_destructor,
      SkyworthMsgs::_tc_PatrolManageCmdDataReader,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::PatrolManageCmdDataReader_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::PatrolManageCmdDataReader>::extract (
        _tao_any,
        SkyworthMsgs::PatrolManageCmdDataReader::_tao_any_destructor,
        SkyworthMsgs::_tc_PatrolManageCmdDataReader,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanManageStatusTypeSupport>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanManageStatusTypeSupport>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanManageStatusTypeSupport>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      CleanManageStatusTypeSupport_ptr _tao_elem)
  {
    CleanManageStatusTypeSupport_ptr _tao_objptr =
      CleanManageStatusTypeSupport::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      CleanManageStatusTypeSupport_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<CleanManageStatusTypeSupport>::insert (
        _tao_any,
        CleanManageStatusTypeSupport::_tao_any_destructor,
        _tc_CleanManageStatusTypeSupport,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      CleanManageStatusTypeSupport_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<CleanManageStatusTypeSupport>::extract (
          _tao_any,
          CleanManageStatusTypeSupport::_tao_any_destructor,
          _tc_CleanManageStatusTypeSupport,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanManageStatusTypeSupport_ptr _tao_elem)
{
  SkyworthMsgs::CleanManageStatusTypeSupport_ptr _tao_objptr =
    SkyworthMsgs::CleanManageStatusTypeSupport::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanManageStatusTypeSupport_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::CleanManageStatusTypeSupport>::insert (
      _tao_any,
      SkyworthMsgs::CleanManageStatusTypeSupport::_tao_any_destructor,
      SkyworthMsgs::_tc_CleanManageStatusTypeSupport,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanManageStatusTypeSupport_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::CleanManageStatusTypeSupport>::extract (
        _tao_any,
        SkyworthMsgs::CleanManageStatusTypeSupport::_tao_any_destructor,
        SkyworthMsgs::_tc_CleanManageStatusTypeSupport,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanManageStatusDataWriter>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanManageStatusDataWriter>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanManageStatusDataWriter>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      CleanManageStatusDataWriter_ptr _tao_elem)
  {
    CleanManageStatusDataWriter_ptr _tao_objptr =
      CleanManageStatusDataWriter::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      CleanManageStatusDataWriter_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<CleanManageStatusDataWriter>::insert (
        _tao_any,
        CleanManageStatusDataWriter::_tao_any_destructor,
        _tc_CleanManageStatusDataWriter,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      CleanManageStatusDataWriter_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<CleanManageStatusDataWriter>::extract (
          _tao_any,
          CleanManageStatusDataWriter::_tao_any_destructor,
          _tc_CleanManageStatusDataWriter,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanManageStatusDataWriter_ptr _tao_elem)
{
  SkyworthMsgs::CleanManageStatusDataWriter_ptr _tao_objptr =
    SkyworthMsgs::CleanManageStatusDataWriter::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanManageStatusDataWriter_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::CleanManageStatusDataWriter>::insert (
      _tao_any,
      SkyworthMsgs::CleanManageStatusDataWriter::_tao_any_destructor,
      SkyworthMsgs::_tc_CleanManageStatusDataWriter,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanManageStatusDataWriter_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::CleanManageStatusDataWriter>::extract (
        _tao_any,
        SkyworthMsgs::CleanManageStatusDataWriter::_tao_any_destructor,
        SkyworthMsgs::_tc_CleanManageStatusDataWriter,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanManageStatusDataReader>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanManageStatusDataReader>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanManageStatusDataReader>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      CleanManageStatusDataReader_ptr _tao_elem)
  {
    CleanManageStatusDataReader_ptr _tao_objptr =
      CleanManageStatusDataReader::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      CleanManageStatusDataReader_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<CleanManageStatusDataReader>::insert (
        _tao_any,
        CleanManageStatusDataReader::_tao_any_destructor,
        _tc_CleanManageStatusDataReader,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      CleanManageStatusDataReader_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<CleanManageStatusDataReader>::extract (
          _tao_any,
          CleanManageStatusDataReader::_tao_any_destructor,
          _tc_CleanManageStatusDataReader,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanManageStatusDataReader_ptr _tao_elem)
{
  SkyworthMsgs::CleanManageStatusDataReader_ptr _tao_objptr =
    SkyworthMsgs::CleanManageStatusDataReader::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanManageStatusDataReader_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::CleanManageStatusDataReader>::insert (
      _tao_any,
      SkyworthMsgs::CleanManageStatusDataReader::_tao_any_destructor,
      SkyworthMsgs::_tc_CleanManageStatusDataReader,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanManageStatusDataReader_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::CleanManageStatusDataReader>::extract (
        _tao_any,
        SkyworthMsgs::CleanManageStatusDataReader::_tao_any_destructor,
        SkyworthMsgs::_tc_CleanManageStatusDataReader,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanManageCmdTypeSupport>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanManageCmdTypeSupport>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanManageCmdTypeSupport>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      CleanManageCmdTypeSupport_ptr _tao_elem)
  {
    CleanManageCmdTypeSupport_ptr _tao_objptr =
      CleanManageCmdTypeSupport::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      CleanManageCmdTypeSupport_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<CleanManageCmdTypeSupport>::insert (
        _tao_any,
        CleanManageCmdTypeSupport::_tao_any_destructor,
        _tc_CleanManageCmdTypeSupport,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      CleanManageCmdTypeSupport_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<CleanManageCmdTypeSupport>::extract (
          _tao_any,
          CleanManageCmdTypeSupport::_tao_any_destructor,
          _tc_CleanManageCmdTypeSupport,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanManageCmdTypeSupport_ptr _tao_elem)
{
  SkyworthMsgs::CleanManageCmdTypeSupport_ptr _tao_objptr =
    SkyworthMsgs::CleanManageCmdTypeSupport::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanManageCmdTypeSupport_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::CleanManageCmdTypeSupport>::insert (
      _tao_any,
      SkyworthMsgs::CleanManageCmdTypeSupport::_tao_any_destructor,
      SkyworthMsgs::_tc_CleanManageCmdTypeSupport,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanManageCmdTypeSupport_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::CleanManageCmdTypeSupport>::extract (
        _tao_any,
        SkyworthMsgs::CleanManageCmdTypeSupport::_tao_any_destructor,
        SkyworthMsgs::_tc_CleanManageCmdTypeSupport,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanManageCmdDataWriter>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanManageCmdDataWriter>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanManageCmdDataWriter>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      CleanManageCmdDataWriter_ptr _tao_elem)
  {
    CleanManageCmdDataWriter_ptr _tao_objptr =
      CleanManageCmdDataWriter::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      CleanManageCmdDataWriter_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<CleanManageCmdDataWriter>::insert (
        _tao_any,
        CleanManageCmdDataWriter::_tao_any_destructor,
        _tc_CleanManageCmdDataWriter,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      CleanManageCmdDataWriter_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<CleanManageCmdDataWriter>::extract (
          _tao_any,
          CleanManageCmdDataWriter::_tao_any_destructor,
          _tc_CleanManageCmdDataWriter,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanManageCmdDataWriter_ptr _tao_elem)
{
  SkyworthMsgs::CleanManageCmdDataWriter_ptr _tao_objptr =
    SkyworthMsgs::CleanManageCmdDataWriter::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanManageCmdDataWriter_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::CleanManageCmdDataWriter>::insert (
      _tao_any,
      SkyworthMsgs::CleanManageCmdDataWriter::_tao_any_destructor,
      SkyworthMsgs::_tc_CleanManageCmdDataWriter,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanManageCmdDataWriter_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::CleanManageCmdDataWriter>::extract (
        _tao_any,
        SkyworthMsgs::CleanManageCmdDataWriter::_tao_any_destructor,
        SkyworthMsgs::_tc_CleanManageCmdDataWriter,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanManageCmdDataReader>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanManageCmdDataReader>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanManageCmdDataReader>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      CleanManageCmdDataReader_ptr _tao_elem)
  {
    CleanManageCmdDataReader_ptr _tao_objptr =
      CleanManageCmdDataReader::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      CleanManageCmdDataReader_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<CleanManageCmdDataReader>::insert (
        _tao_any,
        CleanManageCmdDataReader::_tao_any_destructor,
        _tc_CleanManageCmdDataReader,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      CleanManageCmdDataReader_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<CleanManageCmdDataReader>::extract (
          _tao_any,
          CleanManageCmdDataReader::_tao_any_destructor,
          _tc_CleanManageCmdDataReader,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanManageCmdDataReader_ptr _tao_elem)
{
  SkyworthMsgs::CleanManageCmdDataReader_ptr _tao_objptr =
    SkyworthMsgs::CleanManageCmdDataReader::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanManageCmdDataReader_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::CleanManageCmdDataReader>::insert (
      _tao_any,
      SkyworthMsgs::CleanManageCmdDataReader::_tao_any_destructor,
      SkyworthMsgs::_tc_CleanManageCmdDataReader,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanManageCmdDataReader_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::CleanManageCmdDataReader>::extract (
        _tao_any,
        SkyworthMsgs::CleanManageCmdDataReader::_tao_any_destructor,
        SkyworthMsgs::_tc_CleanManageCmdDataReader,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::MapLiveCmdTypeSupport>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::MapLiveCmdTypeSupport>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::MapLiveCmdTypeSupport>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      MapLiveCmdTypeSupport_ptr _tao_elem)
  {
    MapLiveCmdTypeSupport_ptr _tao_objptr =
      MapLiveCmdTypeSupport::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      MapLiveCmdTypeSupport_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<MapLiveCmdTypeSupport>::insert (
        _tao_any,
        MapLiveCmdTypeSupport::_tao_any_destructor,
        _tc_MapLiveCmdTypeSupport,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      MapLiveCmdTypeSupport_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<MapLiveCmdTypeSupport>::extract (
          _tao_any,
          MapLiveCmdTypeSupport::_tao_any_destructor,
          _tc_MapLiveCmdTypeSupport,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::MapLiveCmdTypeSupport_ptr _tao_elem)
{
  SkyworthMsgs::MapLiveCmdTypeSupport_ptr _tao_objptr =
    SkyworthMsgs::MapLiveCmdTypeSupport::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::MapLiveCmdTypeSupport_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::MapLiveCmdTypeSupport>::insert (
      _tao_any,
      SkyworthMsgs::MapLiveCmdTypeSupport::_tao_any_destructor,
      SkyworthMsgs::_tc_MapLiveCmdTypeSupport,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::MapLiveCmdTypeSupport_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::MapLiveCmdTypeSupport>::extract (
        _tao_any,
        SkyworthMsgs::MapLiveCmdTypeSupport::_tao_any_destructor,
        SkyworthMsgs::_tc_MapLiveCmdTypeSupport,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::MapLiveCmdDataWriter>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::MapLiveCmdDataWriter>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::MapLiveCmdDataWriter>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      MapLiveCmdDataWriter_ptr _tao_elem)
  {
    MapLiveCmdDataWriter_ptr _tao_objptr =
      MapLiveCmdDataWriter::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      MapLiveCmdDataWriter_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<MapLiveCmdDataWriter>::insert (
        _tao_any,
        MapLiveCmdDataWriter::_tao_any_destructor,
        _tc_MapLiveCmdDataWriter,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      MapLiveCmdDataWriter_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<MapLiveCmdDataWriter>::extract (
          _tao_any,
          MapLiveCmdDataWriter::_tao_any_destructor,
          _tc_MapLiveCmdDataWriter,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::MapLiveCmdDataWriter_ptr _tao_elem)
{
  SkyworthMsgs::MapLiveCmdDataWriter_ptr _tao_objptr =
    SkyworthMsgs::MapLiveCmdDataWriter::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::MapLiveCmdDataWriter_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::MapLiveCmdDataWriter>::insert (
      _tao_any,
      SkyworthMsgs::MapLiveCmdDataWriter::_tao_any_destructor,
      SkyworthMsgs::_tc_MapLiveCmdDataWriter,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::MapLiveCmdDataWriter_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::MapLiveCmdDataWriter>::extract (
        _tao_any,
        SkyworthMsgs::MapLiveCmdDataWriter::_tao_any_destructor,
        SkyworthMsgs::_tc_MapLiveCmdDataWriter,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::MapLiveCmdDataReader>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::MapLiveCmdDataReader>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::MapLiveCmdDataReader>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      MapLiveCmdDataReader_ptr _tao_elem)
  {
    MapLiveCmdDataReader_ptr _tao_objptr =
      MapLiveCmdDataReader::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      MapLiveCmdDataReader_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<MapLiveCmdDataReader>::insert (
        _tao_any,
        MapLiveCmdDataReader::_tao_any_destructor,
        _tc_MapLiveCmdDataReader,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      MapLiveCmdDataReader_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<MapLiveCmdDataReader>::extract (
          _tao_any,
          MapLiveCmdDataReader::_tao_any_destructor,
          _tc_MapLiveCmdDataReader,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::MapLiveCmdDataReader_ptr _tao_elem)
{
  SkyworthMsgs::MapLiveCmdDataReader_ptr _tao_objptr =
    SkyworthMsgs::MapLiveCmdDataReader::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::MapLiveCmdDataReader_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::MapLiveCmdDataReader>::insert (
      _tao_any,
      SkyworthMsgs::MapLiveCmdDataReader::_tao_any_destructor,
      SkyworthMsgs::_tc_MapLiveCmdDataReader,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::MapLiveCmdDataReader_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::MapLiveCmdDataReader>::extract (
        _tao_any,
        SkyworthMsgs::MapLiveCmdDataReader::_tao_any_destructor,
        SkyworthMsgs::_tc_MapLiveCmdDataReader,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanRouterStatusTypeSupport>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanRouterStatusTypeSupport>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanRouterStatusTypeSupport>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      CleanRouterStatusTypeSupport_ptr _tao_elem)
  {
    CleanRouterStatusTypeSupport_ptr _tao_objptr =
      CleanRouterStatusTypeSupport::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      CleanRouterStatusTypeSupport_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<CleanRouterStatusTypeSupport>::insert (
        _tao_any,
        CleanRouterStatusTypeSupport::_tao_any_destructor,
        _tc_CleanRouterStatusTypeSupport,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      CleanRouterStatusTypeSupport_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<CleanRouterStatusTypeSupport>::extract (
          _tao_any,
          CleanRouterStatusTypeSupport::_tao_any_destructor,
          _tc_CleanRouterStatusTypeSupport,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanRouterStatusTypeSupport_ptr _tao_elem)
{
  SkyworthMsgs::CleanRouterStatusTypeSupport_ptr _tao_objptr =
    SkyworthMsgs::CleanRouterStatusTypeSupport::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanRouterStatusTypeSupport_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::CleanRouterStatusTypeSupport>::insert (
      _tao_any,
      SkyworthMsgs::CleanRouterStatusTypeSupport::_tao_any_destructor,
      SkyworthMsgs::_tc_CleanRouterStatusTypeSupport,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanRouterStatusTypeSupport_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::CleanRouterStatusTypeSupport>::extract (
        _tao_any,
        SkyworthMsgs::CleanRouterStatusTypeSupport::_tao_any_destructor,
        SkyworthMsgs::_tc_CleanRouterStatusTypeSupport,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanRouterStatusDataWriter>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanRouterStatusDataWriter>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanRouterStatusDataWriter>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      CleanRouterStatusDataWriter_ptr _tao_elem)
  {
    CleanRouterStatusDataWriter_ptr _tao_objptr =
      CleanRouterStatusDataWriter::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      CleanRouterStatusDataWriter_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<CleanRouterStatusDataWriter>::insert (
        _tao_any,
        CleanRouterStatusDataWriter::_tao_any_destructor,
        _tc_CleanRouterStatusDataWriter,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      CleanRouterStatusDataWriter_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<CleanRouterStatusDataWriter>::extract (
          _tao_any,
          CleanRouterStatusDataWriter::_tao_any_destructor,
          _tc_CleanRouterStatusDataWriter,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanRouterStatusDataWriter_ptr _tao_elem)
{
  SkyworthMsgs::CleanRouterStatusDataWriter_ptr _tao_objptr =
    SkyworthMsgs::CleanRouterStatusDataWriter::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanRouterStatusDataWriter_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::CleanRouterStatusDataWriter>::insert (
      _tao_any,
      SkyworthMsgs::CleanRouterStatusDataWriter::_tao_any_destructor,
      SkyworthMsgs::_tc_CleanRouterStatusDataWriter,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanRouterStatusDataWriter_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::CleanRouterStatusDataWriter>::extract (
        _tao_any,
        SkyworthMsgs::CleanRouterStatusDataWriter::_tao_any_destructor,
        SkyworthMsgs::_tc_CleanRouterStatusDataWriter,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanRouterStatusDataReader>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanRouterStatusDataReader>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanRouterStatusDataReader>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      CleanRouterStatusDataReader_ptr _tao_elem)
  {
    CleanRouterStatusDataReader_ptr _tao_objptr =
      CleanRouterStatusDataReader::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      CleanRouterStatusDataReader_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<CleanRouterStatusDataReader>::insert (
        _tao_any,
        CleanRouterStatusDataReader::_tao_any_destructor,
        _tc_CleanRouterStatusDataReader,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      CleanRouterStatusDataReader_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<CleanRouterStatusDataReader>::extract (
          _tao_any,
          CleanRouterStatusDataReader::_tao_any_destructor,
          _tc_CleanRouterStatusDataReader,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanRouterStatusDataReader_ptr _tao_elem)
{
  SkyworthMsgs::CleanRouterStatusDataReader_ptr _tao_objptr =
    SkyworthMsgs::CleanRouterStatusDataReader::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanRouterStatusDataReader_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::CleanRouterStatusDataReader>::insert (
      _tao_any,
      SkyworthMsgs::CleanRouterStatusDataReader::_tao_any_destructor,
      SkyworthMsgs::_tc_CleanRouterStatusDataReader,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanRouterStatusDataReader_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::CleanRouterStatusDataReader>::extract (
        _tao_any,
        SkyworthMsgs::CleanRouterStatusDataReader::_tao_any_destructor,
        SkyworthMsgs::_tc_CleanRouterStatusDataReader,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanRouterCmdTypeSupport>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanRouterCmdTypeSupport>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanRouterCmdTypeSupport>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      CleanRouterCmdTypeSupport_ptr _tao_elem)
  {
    CleanRouterCmdTypeSupport_ptr _tao_objptr =
      CleanRouterCmdTypeSupport::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      CleanRouterCmdTypeSupport_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<CleanRouterCmdTypeSupport>::insert (
        _tao_any,
        CleanRouterCmdTypeSupport::_tao_any_destructor,
        _tc_CleanRouterCmdTypeSupport,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      CleanRouterCmdTypeSupport_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<CleanRouterCmdTypeSupport>::extract (
          _tao_any,
          CleanRouterCmdTypeSupport::_tao_any_destructor,
          _tc_CleanRouterCmdTypeSupport,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanRouterCmdTypeSupport_ptr _tao_elem)
{
  SkyworthMsgs::CleanRouterCmdTypeSupport_ptr _tao_objptr =
    SkyworthMsgs::CleanRouterCmdTypeSupport::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanRouterCmdTypeSupport_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::CleanRouterCmdTypeSupport>::insert (
      _tao_any,
      SkyworthMsgs::CleanRouterCmdTypeSupport::_tao_any_destructor,
      SkyworthMsgs::_tc_CleanRouterCmdTypeSupport,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanRouterCmdTypeSupport_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::CleanRouterCmdTypeSupport>::extract (
        _tao_any,
        SkyworthMsgs::CleanRouterCmdTypeSupport::_tao_any_destructor,
        SkyworthMsgs::_tc_CleanRouterCmdTypeSupport,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanRouterCmdDataWriter>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanRouterCmdDataWriter>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanRouterCmdDataWriter>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      CleanRouterCmdDataWriter_ptr _tao_elem)
  {
    CleanRouterCmdDataWriter_ptr _tao_objptr =
      CleanRouterCmdDataWriter::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      CleanRouterCmdDataWriter_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<CleanRouterCmdDataWriter>::insert (
        _tao_any,
        CleanRouterCmdDataWriter::_tao_any_destructor,
        _tc_CleanRouterCmdDataWriter,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      CleanRouterCmdDataWriter_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<CleanRouterCmdDataWriter>::extract (
          _tao_any,
          CleanRouterCmdDataWriter::_tao_any_destructor,
          _tc_CleanRouterCmdDataWriter,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanRouterCmdDataWriter_ptr _tao_elem)
{
  SkyworthMsgs::CleanRouterCmdDataWriter_ptr _tao_objptr =
    SkyworthMsgs::CleanRouterCmdDataWriter::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanRouterCmdDataWriter_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::CleanRouterCmdDataWriter>::insert (
      _tao_any,
      SkyworthMsgs::CleanRouterCmdDataWriter::_tao_any_destructor,
      SkyworthMsgs::_tc_CleanRouterCmdDataWriter,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanRouterCmdDataWriter_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::CleanRouterCmdDataWriter>::extract (
        _tao_any,
        SkyworthMsgs::CleanRouterCmdDataWriter::_tao_any_destructor,
        SkyworthMsgs::_tc_CleanRouterCmdDataWriter,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanRouterCmdDataReader>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanRouterCmdDataReader>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<SkyworthMsgs::CleanRouterCmdDataReader>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SkyworthMsgs
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      CleanRouterCmdDataReader_ptr _tao_elem)
  {
    CleanRouterCmdDataReader_ptr _tao_objptr =
      CleanRouterCmdDataReader::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      CleanRouterCmdDataReader_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<CleanRouterCmdDataReader>::insert (
        _tao_any,
        CleanRouterCmdDataReader::_tao_any_destructor,
        _tc_CleanRouterCmdDataReader,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      CleanRouterCmdDataReader_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<CleanRouterCmdDataReader>::extract (
          _tao_any,
          CleanRouterCmdDataReader::_tao_any_destructor,
          _tc_CleanRouterCmdDataReader,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanRouterCmdDataReader_ptr _tao_elem)
{
  SkyworthMsgs::CleanRouterCmdDataReader_ptr _tao_objptr =
    SkyworthMsgs::CleanRouterCmdDataReader::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanRouterCmdDataReader_ptr *_tao_elem)
{
  TAO::Any_Impl_T<SkyworthMsgs::CleanRouterCmdDataReader>::insert (
      _tao_any,
      SkyworthMsgs::CleanRouterCmdDataReader::_tao_any_destructor,
      SkyworthMsgs::_tc_CleanRouterCmdDataReader,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    SkyworthMsgs::CleanRouterCmdDataReader_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<SkyworthMsgs::CleanRouterCmdDataReader>::extract (
        _tao_any,
        SkyworthMsgs::CleanRouterCmdDataReader::_tao_any_destructor,
        SkyworthMsgs::_tc_CleanRouterCmdDataReader,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

